shadow$provide.module$node_modules$pixi_DOT_js$lib$ticker$TickerListener = function(global, require, module, exports) {
  class TickerListener {
    constructor(fn, context = null, priority = 0, once = !1) {
      this.previous = this.next = null;
      this._destroyed = !1;
      this._fn = fn;
      this._context = context;
      this.priority = priority;
      this._once = once;
    }
    match(fn, context = null) {
      return this._fn === fn && this._context === context;
    }
    emit(ticker) {
      this._fn && (this._context ? this._fn.call(this._context, ticker) : this._fn(ticker));
      ticker = this.next;
      this._once && this.destroy(!0);
      this._destroyed && (this.next = null);
      return ticker;
    }
    connect(previous) {
      this.previous = previous;
      previous.next && (previous.next.previous = this);
      this.next = previous.next;
      previous.next = this;
    }
    destroy(hard = !1) {
      this._destroyed = !0;
      this._context = this._fn = null;
      this.previous && (this.previous.next = this.next);
      this.next && (this.next.previous = this.previous);
      const redirect = this.next;
      this.next = hard ? null : redirect;
      this.previous = null;
      return redirect;
    }
  }
  exports.TickerListener = TickerListener;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$ticker$TickerListener.js.map
