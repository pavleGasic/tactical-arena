{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$uploaders$glUploadImageResource.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,kGAAA,GAAuH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAuF/JA,SAAQC,CAAAA,qBAAR,GAnF8BA,CAC5BC,GAAI,OADwBD,EAE5BE,MAAM,CAACC,MAAD,EAASC,SAAT,EAAoBC,EAApB,EAAwBC,YAAxB,CAAsC;AAC1C,UAAMC,UAAUH,SAAUI,CAAAA,KAA1B,EACMC,WAAWL,SAAUM,CAAAA,MAD3B,EAEMC,eAAeR,MAAOS,CAAAA,UAF5B,EAGMC,gBAAgBV,MAAOW,CAAAA,WAH7B,EAIMC,gBAAgBZ,MAAOY,CAAAA,aAJ7B,EAKMC,iBAAiBb,MAAOa,CAAAA,cAL9B;AAMID,iBAAJ,GAAoBJ,YAApB,IAAoCK,cAApC,GAAqDH,aAArD,IACMN,OAaJ,KAbgBI,YAahB,IAbgCF,QAahC,KAb6CI,aAa7C,IAZER,EAAGY,CAAAA,UAAH,CACEb,SAAUc,CAAAA,MADZ,EAEE,CAFF,EAGEd,SAAUe,CAAAA,cAHZ,EAIER,YAJF,EAKEE,aALF,EAME,CANF,EAOET,SAAUgB,CAAAA,MAPZ,EAQEhB,SAAUiB,CAAAA,IARZ,EASE,IATF,CAYF,EAAqB,CAArB,KAAIf,YAAJ,GACED,EAAGiB,CAAAA,aAAH,CACEjB,EAAGkB,CAAAA,UADL,EAEE,CAFF,EAGE,CAHF,EAIE,CAJF,EAKER,aALF,EAMEC,cANF,EAOEZ,SAAUgB,CAAAA,MAPZ,EAQEhB,SAAUiB,CAAAA,IARZ,EASElB,MAAOqB,CAAAA,QATT,CADF,GAaEnB,EAAGiB,CAAAA,aAAH,CACEjB,EAAGkB,CAAAA,UADL,EAEE,CAFF,EAGE,CAHF,EAIE,CAJF,EAKEnB,SAAUgB,CAAAA,MALZ,EAMEhB,SAAUiB,CAAAA,IANZ,EAOElB,MAAOqB,CAAAA,QAPT,CA3BJ;AAqCWjB,WAAJ,KAAgBI,YAAhB,IAAgCF,QAAhC,KAA6CI,aAA7C,GACLR,EAAGiB,CAAAA,aAAH,CACEjB,EAAGkB,CAAAA,UADL,EAEE,CAFF,EAGE,CAHF,EAIE,CAJF,EAKEnB,SAAUgB,CAAAA,MALZ,EAMEhB,SAAUiB,CAAAA,IANZ,EAOElB,MAAOqB,CAAAA,QAPT,CADK,GAUqB,CAArB,KAAIlB,YAAJ,GACLD,EAAGY,CAAAA,UAAH,CACEb,SAAUc,CAAAA,MADZ,EAEE,CAFF,EAGEd,SAAUe,CAAAA,cAHZ,EAIER,YAJF,EAKEE,aALF,EAME,CANF,EAOET,SAAUgB,CAAAA,MAPZ,EAQEhB,SAAUiB,CAAAA,IARZ,EASElB,MAAOqB,CAAAA,QATT,CADK,GAaLnB,EAAGY,CAAAA,UAAH,CACEb,SAAUc,CAAAA,MADZ,EAEE,CAFF,EAGEd,SAAUe,CAAAA,cAHZ,EAIEf,SAAUgB,CAAAA,MAJZ,EAKEhB,SAAUiB,CAAAA,IALZ,EAMElB,MAAOqB,CAAAA,QANT,CA5DF;AAqEApB,aAAUI,CAAAA,KAAV,GAAkBG,YAAlB;AACAP,aAAUM,CAAAA,MAAV,GAAmBG,aAAnB;AA7E0C,GAFhBb,CAmF9B;AAvF+J,CAA/J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$uploaders$glUploadImageResource\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth && glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexports.glUploadImageResource = glUploadImageResource;\n//# sourceMappingURL=glUploadImageResource.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","glUploadImageResource","id","upload","source","glTexture","gl","webGLVersion","glWidth","width","glHeight","height","textureWidth","pixelWidth","textureHeight","pixelHeight","resourceWidth","resourceHeight","texImage2D","target","internalFormat","format","type","texSubImage2D","TEXTURE_2D","resource"]
}
