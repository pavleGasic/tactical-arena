shadow$provide.module$node_modules$pixi_DOT_js$lib$utils$pool$Pool = function(global, require, module, exports) {
  class Pool {
    constructor(ClassType, initialSize) {
      this._pool = [];
      this._index = this._count = 0;
      this._classType = ClassType;
      initialSize && this.prepopulate(initialSize);
    }
    prepopulate(total) {
      for (let i = 0; i < total; i++) {
        this._pool[this._index++] = new this._classType();
      }
      this._count += total;
    }
    get(data) {
      let item;
      item = 0 < this._index ? this._pool[--this._index] : new this._classType();
      item.init?.(data);
      return item;
    }
    return(item) {
      item.reset?.();
      this._pool[this._index++] = item;
    }
    get totalSize() {
      return this._count;
    }
    get totalFree() {
      return this._index;
    }
    get totalUsed() {
      return this._count - this._index;
    }
    clear() {
      this._index = this._pool.length = 0;
    }
  }
  exports.Pool = Pool;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$utils$pool$Pool.js.map
