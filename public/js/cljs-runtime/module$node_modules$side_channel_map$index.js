shadow$provide.module$node_modules$side_channel_map$index = function(global, require, module, exports) {
  global = require("module$node_modules$get_intrinsic$index");
  exports = require("module$node_modules$call_bound$index");
  var inspect = require("module$node_modules$object_inspect$index"), $TypeError = require("module$node_modules$es_errors$type"), $Map = global("%Map%", !0), $mapGet = exports("Map.prototype.get", !0), $mapSet = exports("Map.prototype.set", !0), $mapHas = exports("Map.prototype.has", !0), $mapDelete = exports("Map.prototype.delete", !0), $mapSize = exports("Map.prototype.size", !0);
  module.exports = !!$Map && function() {
    var $m, channel = {assert:function(key) {
      if (!channel.has(key)) {
        throw new $TypeError("Side channel does not contain " + inspect(key));
      }
    }, "delete":function(key) {
      return $m ? (key = $mapDelete($m, key), 0 === $mapSize($m) && ($m = void 0), key) : !1;
    }, get:function(key) {
      if ($m) {
        return $mapGet($m, key);
      }
    }, has:function(key) {
      return $m ? $mapHas($m, key) : !1;
    }, set:function(key, value) {
      $m || ($m = new $Map());
      $mapSet($m, key, value);
    }};
    return channel;
  };
};

//# sourceMappingURL=module$node_modules$side_channel_map$index.js.map
