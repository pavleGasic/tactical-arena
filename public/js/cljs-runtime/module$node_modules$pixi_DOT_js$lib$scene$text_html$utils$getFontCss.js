shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$getFontCss = function(global, require, module, exports) {
  var Cache = require("module$node_modules$pixi_DOT_js$lib$assets$cache$Cache"), loadFontCSS = require("module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$loadFontCSS");
  "use strict";
  const FontStylePromiseCache = new Map();
  exports.FontStylePromiseCache = FontStylePromiseCache;
  exports.getFontCss = async function(fontFamilies, style, defaultOptions) {
    fontFamilies = fontFamilies.filter(fontFamily => Cache.Cache.has(`${fontFamily}-and-url`)).map((fontFamily, i) => {
      if (!FontStylePromiseCache.has(fontFamily)) {
        const {url} = Cache.Cache.get(`${fontFamily}-and-url`);
        0 === i ? FontStylePromiseCache.set(fontFamily, loadFontCSS.loadFontCSS({fontWeight:style.fontWeight, fontStyle:style.fontStyle, fontFamily}, url)) : FontStylePromiseCache.set(fontFamily, loadFontCSS.loadFontCSS({fontWeight:defaultOptions.fontWeight, fontStyle:defaultOptions.fontStyle, fontFamily}, url));
      }
      return FontStylePromiseCache.get(fontFamily);
    });
    return (await Promise.all(fontFamilies)).join("\n");
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$getFontCss.js.map
