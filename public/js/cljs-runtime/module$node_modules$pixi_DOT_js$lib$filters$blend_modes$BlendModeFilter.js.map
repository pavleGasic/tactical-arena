{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$filters$blend_modes$BlendModeFilter.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,GAA4F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAkDpIC,UAASA,uBAAsB,CAACC,OAAD,CAAU;AACvC,UAAM,CAAEC,MAAF,EAAUC,SAAV,EAAqBC,IAArB,CAAA,GAA8BH,OAApC;AACA,WAAOC,MAAOG,CAAAA,OAAP,CAAe,aAAf,EAA8BF,SAA9B,CAAyCE,CAAAA,OAAzC,CAAiD,QAAjD,EAA2DD,IAA3D,CAAP;AAFuC;AA/CzC,MAAIE,YAAYT,OAAA,CAAQ,6EAAR,CAAhB,EACIU,aAAaV,OAAA,CAAQ,+EAAR,CADjB,EAEIW,eAAeX,OAAA,CAAQ,oFAAR,CAFnB,EAGIY,UAAUZ,OAAA,CAAQ,gFAAR,CAHd;AAIIa,QAAAA,GAASb,OAAA,CAAQ,oDAAR,CAATa;AACJ,MAAIC,kBAAkBd,OAAA,CAAQ,6EAAR,CAAtB,EACIe,kBAAkBf,OAAA,CAAQ,6EAAR,CADtB,EAEIgB,gBAAgBhB,OAAA,CAAQ,6EAAR,CAFpB;AAIA,cAAA;AACA,OAAMiB,gBAAN,QAA8BJ,OAAOA,CAAAA,MAArC;AACEK,eAAW,CAACd,OAAD,CAAU;AAEnB,UAAMe,YAAYhB,sBAAA,CAAuB,CAAEE,OAAQW,aAAcI,CAAAA,OAAxB,EAAiC,GADvDhB,OAAQiB,CAAAA,GACc,CAAvB,CAAlB;AACMC,eAAAA,GAAaZ,UAAWA,CAAAA,UAAWa,CAAAA,IAAtB,CAA2B,CAC5CC,OAAQ,CACNnB,OAAQc,SADF,EAENM,WAAY,YAFN,CADoC,EAK5CC,SAAU,CACRrB,OAAQc,SADA,EAERM,WAAY,cAFJ,CALkC,CAA3B,CAAbH;AAWAK,aAAAA,GAAWxB,sBAAA,CAAuB,CAAEE,OAAQS,eAAgBM,CAAAA,OAA1B,EAAmC,GADzDhB,OAAQwB,CAAAA,EACc,CAAvB,CAAXD;AACAE,aAAAA,GAAYpB,SAAUA,CAAAA,SAAUc,CAAAA,IAApB,CAAyB,CACzCC,OAAQT,eAAgBK,CAAAA,OADiB,EAEzCM,SAAUC,OAF+B,CAAzB,CAAZE;AAIN,YAAMC,eAAe,IAAInB,YAAaA,CAAAA,YAAjB,CAA8B,CACjDoB,OAAQ,CACNC,MAAO,CADD,EAENC,KAAM,KAFA,CADyC,CAA9B,CAArB;AAMA,WAAA,CAAM,CACJX,WAAAA,SADI,EAEJO,UAAAA,OAFI,EAGJK,cAAe,CAAA,CAHX,EAIJC,UAAW,CACTC,cAAeN,YADN,EAETO,aAAczB,OAAQA,CAAAA,OAAQ0B,CAAAA,KAFrB,CAJP,CAAN,CAAA;AAzBmB;AADvB;AA0CApC,SAAQe,CAAAA,eAAR,GAA0BA,eAA1B;AAvDoI,CAApI;;",
"sources":["node_modules/pixi_DOT_js/lib/filters/blend-modes/BlendModeFilter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$filters$blend_modes$BlendModeFilter\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GlProgram = require('../../rendering/renderers/gl/shader/GlProgram.js');\nvar GpuProgram = require('../../rendering/renderers/gpu/shader/GpuProgram.js');\nvar UniformGroup = require('../../rendering/renderers/shared/shader/UniformGroup.js');\nvar Texture = require('../../rendering/renderers/shared/texture/Texture.js');\nvar Filter = require('../Filter.js');\nvar blendTemplate$1 = require('./blend-template.frag.js');\nvar blendTemplate$2 = require('./blend-template.vert.js');\nvar blendTemplate = require('./blend-template.wgsl.js');\n\n\"use strict\";\nclass BlendModeFilter extends Filter.Filter {\n  constructor(options) {\n    const gpuOptions = options.gpu;\n    const gpuSource = compileBlendModeShader({ source: blendTemplate.default, ...gpuOptions });\n    const gpuProgram = GpuProgram.GpuProgram.from({\n      vertex: {\n        source: gpuSource,\n        entryPoint: \"mainVertex\"\n      },\n      fragment: {\n        source: gpuSource,\n        entryPoint: \"mainFragment\"\n      }\n    });\n    const glOptions = options.gl;\n    const glSource = compileBlendModeShader({ source: blendTemplate$1.default, ...glOptions });\n    const glProgram = GlProgram.GlProgram.from({\n      vertex: blendTemplate$2.default,\n      fragment: glSource\n    });\n    const uniformGroup = new UniformGroup.UniformGroup({\n      uBlend: {\n        value: 1,\n        type: \"f32\"\n      }\n    });\n    super({\n      gpuProgram,\n      glProgram,\n      blendRequired: true,\n      resources: {\n        blendUniforms: uniformGroup,\n        uBackTexture: Texture.Texture.EMPTY\n      }\n    });\n  }\n}\nfunction compileBlendModeShader(options) {\n  const { source, functions, main } = options;\n  return source.replace(\"{FUNCTIONS}\", functions).replace(\"{MAIN}\", main);\n}\n\nexports.BlendModeFilter = BlendModeFilter;\n//# sourceMappingURL=BlendModeFilter.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","compileBlendModeShader","options","source","functions","main","replace","GlProgram","GpuProgram","UniformGroup","Texture","Filter","blendTemplate$1","blendTemplate$2","blendTemplate","BlendModeFilter","constructor","gpuSource","default","gpu","gpuProgram","from","vertex","entryPoint","fragment","glSource","gl","glProgram","uniformGroup","uBlend","value","type","blendRequired","resources","blendUniforms","uBackTexture","EMPTY"]
}
