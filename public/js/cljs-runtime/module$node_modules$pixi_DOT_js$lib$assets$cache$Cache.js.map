{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$assets$cache$Cache.js",
"lineCount":61,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/assets/cache/Cache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$assets$cache$Cache\"] = function(global,require,module,exports) {\n'use strict';\n\nvar warn = require('../../utils/logging/warn.js');\nvar convertToList = require('../utils/convertToList.js');\n\n\"use strict\";\nclass CacheClass {\n  constructor() {\n    this._parsers = [];\n    this._cache = /* @__PURE__ */ new Map();\n    this._cacheMap = /* @__PURE__ */ new Map();\n  }\n  /** Clear all entries. */\n  reset() {\n    this._cacheMap.clear();\n    this._cache.clear();\n  }\n  /**\n   * Check if the key exists\n   * @param key - The key to check\n   */\n  has(key) {\n    return this._cache.has(key);\n  }\n  /**\n   * Fetch entry by key\n   * @param key - The key of the entry to get\n   */\n  get(key) {\n    const result = this._cache.get(key);\n    if (!result) {\n      warn.warn(`[Assets] Asset id ${key} was not found in the Cache`);\n    }\n    return result;\n  }\n  /**\n   * Set a value by key or keys name\n   * @param key - The key or keys to set\n   * @param value - The value to store in the cache or from which cacheable assets will be derived.\n   */\n  set(key, value) {\n    const keys = convertToList.convertToList(key);\n    let cacheableAssets;\n    for (let i = 0; i < this.parsers.length; i++) {\n      const parser = this.parsers[i];\n      if (parser.test(value)) {\n        cacheableAssets = parser.getCacheableAssets(keys, value);\n        break;\n      }\n    }\n    const cacheableMap = new Map(Object.entries(cacheableAssets || {}));\n    if (!cacheableAssets) {\n      keys.forEach((key2) => {\n        cacheableMap.set(key2, value);\n      });\n    }\n    const cacheKeys = [...cacheableMap.keys()];\n    const cachedAssets = {\n      cacheKeys,\n      keys\n    };\n    keys.forEach((key2) => {\n      this._cacheMap.set(key2, cachedAssets);\n    });\n    cacheKeys.forEach((key2) => {\n      const val = cacheableAssets ? cacheableAssets[key2] : value;\n      if (this._cache.has(key2) && this._cache.get(key2) !== val) {\n        warn.warn(\"[Cache] already has key:\", key2);\n      }\n      this._cache.set(key2, cacheableMap.get(key2));\n    });\n  }\n  /**\n   * Remove entry by key\n   *\n   * This function will also remove any associated alias from the cache also.\n   * @param key - The key of the entry to remove\n   */\n  remove(key) {\n    if (!this._cacheMap.has(key)) {\n      warn.warn(`[Assets] Asset id ${key} was not found in the Cache`);\n      return;\n    }\n    const cacheMap = this._cacheMap.get(key);\n    const cacheKeys = cacheMap.cacheKeys;\n    cacheKeys.forEach((key2) => {\n      this._cache.delete(key2);\n    });\n    cacheMap.keys.forEach((key2) => {\n      this._cacheMap.delete(key2);\n    });\n  }\n  /** All loader parsers registered */\n  get parsers() {\n    return this._parsers;\n  }\n}\nconst Cache = new CacheClass();\n\nexports.Cache = Cache;\n//# sourceMappingURL=Cache.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","warn","convertToList","CacheClass","constructor","_parsers","_cache","Map","_cacheMap","reset","clear","has","key","get","result","set","value","keys","cacheableAssets","i","parsers","length","parser","test","getCacheableAssets","cacheableMap","Object","entries","forEach","key2","cacheKeys","cachedAssets","val","remove","cacheMap","delete","Cache"]
}
