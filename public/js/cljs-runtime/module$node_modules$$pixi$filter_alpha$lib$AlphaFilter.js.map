{
"version":3,
"file":"module$node_modules$$pixi$filter_alpha$lib$AlphaFilter.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,GAA2E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAE/GC,OAAOH,OAAA,CAAQ,0CAAR,CAFwG,EAEjFI,QAAQJ,OAAA,CAAQ,uDAAR,CAFyE;AAGnH,OAAMK,YAAN,QAA0BF,KAAKG,CAAAA,MAA/B;AAIEC,eAAW,CAACC,OAAA,GAAU,CAAX,CAAc;AACvB,WAAA,CAAML,IAAKM,CAAAA,aAAX,EAA0BL,KAAMM,CAAAA,OAAhC,EAAyC,CAAEC,OAAQ,CAAV,CAAzC,CAAA;AAAyD,UAAKP,CAAAA,KAAL,GAAaI,OAAb;AADlC;AAOrB,aAAQ,EAAA;AACV,aAAO,IAAKI,CAAAA,QAASD,CAAAA,MAArB;AADU;AAGR,aAAK,CAACE,KAAD,CAAQ;AACf,UAAKD,CAAAA,QAASD,CAAAA,MAAd,GAAuBE,KAAvB;AADe;AAdnB;AAkBAX,SAAQG,CAAAA,WAAR,GAAsBA,WAAtB;AArBmH,CAAnH;;",
"sources":["node_modules/@pixi/filter-alpha/lib/AlphaFilter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$filter_alpha$lib$AlphaFilter\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), alpha = require(\"./alpha.frag.js\");\nclass AlphaFilter extends core.Filter {\n  /**\n   * @param alpha - Amount of alpha from 0 to 1, where 0 is transparent\n   */\n  constructor(alpha$1 = 1) {\n    super(core.defaultVertex, alpha.default, { uAlpha: 1 }), this.alpha = alpha$1;\n  }\n  /**\n   * Coefficient for alpha multiplication\n   * @default 1\n   */\n  get alpha() {\n    return this.uniforms.uAlpha;\n  }\n  set alpha(value) {\n    this.uniforms.uAlpha = value;\n  }\n}\nexports.AlphaFilter = AlphaFilter;\n//# sourceMappingURL=AlphaFilter.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","alpha","AlphaFilter","Filter","constructor","alpha$1","defaultVertex","default","uAlpha","uniforms","value"]
}
