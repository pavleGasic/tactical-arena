{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$batcher$shared$BatchGeometry.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,GAA+F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvI,MAAIC,SAASH,OAAA,CAAQ,8EAAR,CAAb,EACII,SAASJ,OAAA,CAAQ,6EAAR,CADb;AAEIK,QAAAA,GAAWL,OAAA,CAAQ,kFAAR,CAAXK;AAEJ,cAAA;AACA,QAAMC,wBAAwB,IAAIC,YAAJ,CAAiB,CAAjB,CAA9B,EACMC,uBAAuB,IAAIC,WAAJ,CAAgB,CAAhB,CAD7B;AAEA,OAAMC,cAAN,QAA4BL,OAASA,CAAAA,QAArC;AACEM,eAAW,EAAG;AAEZ,YAAMC,kBAAkB,IAAIT,MAAOA,CAAAA,MAAX,CAAkB,CACxCU,KAAMP,qBADkC,EAExCQ,MAAO,wBAFiC,EAGxCC,MAAOX,MAAOY,CAAAA,WAAYC,CAAAA,MAA1BF,GAAmCX,MAAOY,CAAAA,WAAYE,CAAAA,QAHd,EAIxCC,YAAa,CAAA,CAJ2B,CAAlB,CAAxB,EAMMC,cAAc,IAAIjB,MAAOA,CAAAA,MAAX,CAAkB,CACpCU,KAAML,oBAD8B,EAEpCM,MAAO,oBAF6B,EAGpCC,MAAOX,MAAOY,CAAAA,WAAYK,CAAAA,KAA1BN,GAAkCX,MAAOY,CAAAA,WAAYE,CAAAA,QAHjB,EAKpCC,YAAa,CAAA,CALuB,CAAlB,CANpB;AAcA,WAAA,CAAM,CACJG,WAAY,CACVC,UAAW,CACTC,OAAQZ,eADC,EAETa,OAAQ,WAFC,EAGTC,OANSA,EAGA,EAITC,OAAQ,CAJC,CADD,EAOVC,IAAK,CACHJ,OAAQZ,eADL,EAEHa,OAAQ,WAFL,EAGHC,OAZSA,EASN,EAIHC,OAAQ,CAJL,CAPK,EAaVE,OAAQ,CACNL,OAAQZ,eADF,EAENa,OAAQ,UAFF,EAGNC,OAlBSA,EAeH,EAINC,OAAQ,EAJF,CAbE,EAmBVG,mBAAoB,CAClBN,OAAQZ,eADU,EAElBa,OAAQ,UAFU,EAGlBC,OAxBSA,EAqBS,EAIlBC,OAAQ,EAJU,CAnBV,CADR,EA2BJP,WA3BI,CAAN,CAAA;AAhBY;AADhB;AAiDAlB,SAAQQ,CAAAA,aAAR,GAAwBA,aAAxB;AA3DuI,CAAvI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/batcher/shared/BatchGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$batcher$shared$BatchGeometry\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Buffer = require('../../renderers/shared/buffer/Buffer.js');\nvar _const = require('../../renderers/shared/buffer/const.js');\nvar Geometry = require('../../renderers/shared/geometry/Geometry.js');\n\n\"use strict\";\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\nclass BatchGeometry extends Geometry.Geometry {\n  constructor() {\n    const vertexSize = 6;\n    const attributeBuffer = new Buffer.Buffer({\n      data: placeHolderBufferData,\n      label: \"attribute-batch-buffer\",\n      usage: _const.BufferUsage.VERTEX | _const.BufferUsage.COPY_DST,\n      shrinkToFit: false\n    });\n    const indexBuffer = new Buffer.Buffer({\n      data: placeHolderIndexData,\n      label: \"index-batch-buffer\",\n      usage: _const.BufferUsage.INDEX | _const.BufferUsage.COPY_DST,\n      // | BufferUsage.STATIC,\n      shrinkToFit: false\n    });\n    const stride = vertexSize * 4;\n    super({\n      attributes: {\n        aPosition: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 0\n        },\n        aUV: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 2 * 4\n        },\n        aColor: {\n          buffer: attributeBuffer,\n          format: \"unorm8x4\",\n          stride,\n          offset: 4 * 4\n        },\n        aTextureIdAndRound: {\n          buffer: attributeBuffer,\n          format: \"uint16x2\",\n          stride,\n          offset: 5 * 4\n        }\n      },\n      indexBuffer\n    });\n  }\n}\n\nexports.BatchGeometry = BatchGeometry;\n//# sourceMappingURL=BatchGeometry.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","_const","Geometry","placeHolderBufferData","Float32Array","placeHolderIndexData","Uint32Array","BatchGeometry","constructor","attributeBuffer","data","label","usage","BufferUsage","VERTEX","COPY_DST","shrinkToFit","indexBuffer","INDEX","attributes","aPosition","buffer","format","stride","offset","aUV","aColor","aTextureIdAndRound"]
}
