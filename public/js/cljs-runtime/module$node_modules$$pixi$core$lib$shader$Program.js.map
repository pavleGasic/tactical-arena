{
"version":3,
"file":"module$node_modules$$pixi$core$lib$shader$Program.js",
"lineCount":41,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/shader/Program.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$shader$Program\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), utils = require(\"@pixi/utils\"), defaultProgram$1 = require(\"./defaultProgram.frag.js\"), defaultProgram = require(\"./defaultProgram.vert.js\");\nrequire(\"./utils/index.js\");\nvar setPrecision = require(\"./utils/setPrecision.js\"), getMaxFragmentPrecision = require(\"./utils/getMaxFragmentPrecision.js\");\nlet UID = 0;\nconst nameCache = {}, _Program = class _Program2 {\n  /**\n   * @param vertexSrc - The source of the vertex shader.\n   * @param fragmentSrc - The source of the fragment shader.\n   * @param name - Name for shader\n   * @param extra - Extra data for shader\n   */\n  constructor(vertexSrc, fragmentSrc, name = \"pixi-shader\", extra = {}) {\n    this.extra = {}, this.id = UID++, this.vertexSrc = vertexSrc || _Program2.defaultVertexSrc, this.fragmentSrc = fragmentSrc || _Program2.defaultFragmentSrc, this.vertexSrc = this.vertexSrc.trim(), this.fragmentSrc = this.fragmentSrc.trim(), this.extra = extra, this.vertexSrc.substring(0, 8) !== \"#version\" && (name = name.replace(/\\s+/g, \"-\"), nameCache[name] ? (nameCache[name]++, name += `-${nameCache[name]}`) : nameCache[name] = 1, this.vertexSrc = `#define SHADER_NAME ${name}\n${this.vertexSrc}`, this.fragmentSrc = `#define SHADER_NAME ${name}\n${this.fragmentSrc}`, this.vertexSrc = setPrecision.setPrecision(\n      this.vertexSrc,\n      _Program2.defaultVertexPrecision,\n      constants.PRECISION.HIGH\n    ), this.fragmentSrc = setPrecision.setPrecision(\n      this.fragmentSrc,\n      _Program2.defaultFragmentPrecision,\n      getMaxFragmentPrecision.getMaxFragmentPrecision()\n    )), this.glPrograms = {}, this.syncUniforms = null;\n  }\n  /**\n   * The default vertex shader source.\n   * @readonly\n   */\n  static get defaultVertexSrc() {\n    return defaultProgram.default;\n  }\n  /**\n   * The default fragment shader source.\n   * @readonly\n   */\n  static get defaultFragmentSrc() {\n    return defaultProgram$1.default;\n  }\n  /**\n   * A short hand function to create a program based of a vertex and fragment shader.\n   *\n   * This method will also check to see if there is a cached program.\n   * @param vertexSrc - The source of the vertex shader.\n   * @param fragmentSrc - The source of the fragment shader.\n   * @param name - Name for shader\n   * @returns A shiny new PixiJS shader program!\n   */\n  static from(vertexSrc, fragmentSrc, name) {\n    const key = vertexSrc + fragmentSrc;\n    let program = utils.ProgramCache[key];\n    return program || (utils.ProgramCache[key] = program = new _Program2(vertexSrc, fragmentSrc, name)), program;\n  }\n};\n_Program.defaultVertexPrecision = constants.PRECISION.HIGH, /**\n* Default specify float precision in fragment shader.\n* iOS is best set at highp due to https://github.com/pixijs/pixijs/issues/3742\n* @static\n* @type {PIXI.PRECISION}\n* @default PIXI.PRECISION.MEDIUM\n*/\n_Program.defaultFragmentPrecision = utils.isMobile.apple.device ? constants.PRECISION.HIGH : constants.PRECISION.MEDIUM;\nlet Program = _Program;\nexports.Program = Program;\n//# sourceMappingURL=Program.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","utils","defaultProgram$1","defaultProgram","setPrecision","getMaxFragmentPrecision","UID","nameCache","_Program","constructor","vertexSrc","fragmentSrc","name","extra","id","_Program2","defaultVertexSrc","defaultFragmentSrc","trim","substring","replace","defaultVertexPrecision","PRECISION","HIGH","defaultFragmentPrecision","glPrograms","syncUniforms","default","from","key","program","ProgramCache","isMobile","apple","device","MEDIUM","Program"]
}
