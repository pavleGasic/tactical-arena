{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuUniformBatchPipe.js",
"lineCount":95,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/GpuUniformBatchPipe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuUniformBatchPipe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Buffer = require('../shared/buffer/Buffer.js');\nvar BufferResource = require('../shared/buffer/BufferResource.js');\nvar _const = require('../shared/buffer/const.js');\nvar UboBatch = require('./buffer/UboBatch.js');\nvar BindGroup = require('./shader/BindGroup.js');\n\n\"use strict\";\nconst minUniformOffsetAlignment = 128;\nclass GpuUniformBatchPipe {\n  constructor(renderer) {\n    this._bindGroupHash = /* @__PURE__ */ Object.create(null);\n    // number of buffers..\n    this._buffers = [];\n    this._bindGroups = [];\n    this._bufferResources = [];\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_bindGroupHash\");\n    this._batchBuffer = new UboBatch.UboBatch({ minUniformOffsetAlignment });\n    const totalBuffers = 256 / minUniformOffsetAlignment;\n    for (let i = 0; i < totalBuffers; i++) {\n      let usage = _const.BufferUsage.UNIFORM | _const.BufferUsage.COPY_DST;\n      if (i === 0)\n        usage |= _const.BufferUsage.COPY_SRC;\n      this._buffers.push(new Buffer.Buffer({\n        data: this._batchBuffer.data,\n        usage\n      }));\n    }\n  }\n  renderEnd() {\n    this._uploadBindGroups();\n    this._resetBindGroups();\n  }\n  _resetBindGroups() {\n    for (const i in this._bindGroupHash) {\n      this._bindGroupHash[i] = null;\n    }\n    this._batchBuffer.clear();\n  }\n  // just works for single bind groups for now\n  getUniformBindGroup(group, duplicate) {\n    if (!duplicate && this._bindGroupHash[group.uid]) {\n      return this._bindGroupHash[group.uid];\n    }\n    this._renderer.ubo.ensureUniformGroup(group);\n    const data = group.buffer.data;\n    const offset = this._batchBuffer.addEmptyGroup(data.length);\n    this._renderer.ubo.syncUniformGroup(group, this._batchBuffer.data, offset / 4);\n    this._bindGroupHash[group.uid] = this._getBindGroup(offset / minUniformOffsetAlignment);\n    return this._bindGroupHash[group.uid];\n  }\n  getUboResource(group) {\n    this._renderer.ubo.updateUniformGroup(group);\n    const data = group.buffer.data;\n    const offset = this._batchBuffer.addGroup(data);\n    return this._getBufferResource(offset / minUniformOffsetAlignment);\n  }\n  getArrayBindGroup(data) {\n    const offset = this._batchBuffer.addGroup(data);\n    return this._getBindGroup(offset / minUniformOffsetAlignment);\n  }\n  getArrayBufferResource(data) {\n    const offset = this._batchBuffer.addGroup(data);\n    const index = offset / minUniformOffsetAlignment;\n    return this._getBufferResource(index);\n  }\n  _getBufferResource(index) {\n    if (!this._bufferResources[index]) {\n      const buffer = this._buffers[index % 2];\n      this._bufferResources[index] = new BufferResource.BufferResource({\n        buffer,\n        offset: (index / 2 | 0) * 256,\n        size: minUniformOffsetAlignment\n      });\n    }\n    return this._bufferResources[index];\n  }\n  _getBindGroup(index) {\n    if (!this._bindGroups[index]) {\n      const bindGroup = new BindGroup.BindGroup({\n        0: this._getBufferResource(index)\n      });\n      this._bindGroups[index] = bindGroup;\n    }\n    return this._bindGroups[index];\n  }\n  _uploadBindGroups() {\n    const bufferSystem = this._renderer.buffer;\n    const firstBuffer = this._buffers[0];\n    firstBuffer.update(this._batchBuffer.byteIndex);\n    bufferSystem.updateBuffer(firstBuffer);\n    const commandEncoder = this._renderer.gpu.device.createCommandEncoder();\n    for (let i = 1; i < this._buffers.length; i++) {\n      const buffer = this._buffers[i];\n      commandEncoder.copyBufferToBuffer(\n        bufferSystem.getGPUBuffer(firstBuffer),\n        minUniformOffsetAlignment,\n        bufferSystem.getGPUBuffer(buffer),\n        0,\n        this._batchBuffer.byteIndex\n      );\n    }\n    this._renderer.gpu.device.queue.submit([commandEncoder.finish()]);\n  }\n  destroy() {\n    for (let i = 0; i < this._bindGroups.length; i++) {\n      this._bindGroups[i].destroy();\n    }\n    this._bindGroups = null;\n    this._bindGroupHash = null;\n    for (let i = 0; i < this._buffers.length; i++) {\n      this._buffers[i].destroy();\n    }\n    this._buffers = null;\n    for (let i = 0; i < this._bufferResources.length; i++) {\n      this._bufferResources[i].destroy();\n    }\n    this._bufferResources = null;\n    this._batchBuffer.destroy();\n    this._bindGroupHash = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGpuUniformBatchPipe.extension = {\n  type: [\n    Extensions.ExtensionType.WebGPUPipes\n  ],\n  name: \"uniformBatch\"\n};\n\nexports.GpuUniformBatchPipe = GpuUniformBatchPipe;\n//# sourceMappingURL=GpuUniformBatchPipe.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Buffer","BufferResource","_const","UboBatch","BindGroup","GpuUniformBatchPipe","constructor","renderer","_bindGroupHash","Object","create","_buffers","_bindGroups","_bufferResources","_renderer","renderableGC","addManagedHash","_batchBuffer","minUniformOffsetAlignment","i","totalBuffers","usage","BufferUsage","UNIFORM","COPY_DST","COPY_SRC","push","data","renderEnd","_uploadBindGroups","_resetBindGroups","clear","getUniformBindGroup","group","duplicate","uid","ubo","ensureUniformGroup","offset","addEmptyGroup","buffer","length","syncUniformGroup","_getBindGroup","getUboResource","updateUniformGroup","addGroup","_getBufferResource","getArrayBindGroup","getArrayBufferResource","index","size","bindGroup","bufferSystem","firstBuffer","update","byteIndex","updateBuffer","commandEncoder","gpu","device","createCommandEncoder","copyBufferToBuffer","getGPUBuffer","queue","submit","finish","destroy","extension","type","ExtensionType","WebGPUPipes","name"]
}
