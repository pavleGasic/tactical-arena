{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$events$FederatedPointerEvent.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,GAAqF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGzHC,QAAAA,GAAsBH,OAAA,CAAQ,gEAAR,CAAtBG;AAEJ,cAAA;AACA,OAAMC,sBAAN,QAAoCD,OAAoBA,CAAAA,mBAAxD;AACEE,eAAW,EAAG;AACZ,WAAA,CAAM,GAAGC,SAAT,CAAA;AAYA,UAAKC,CAAAA,MAAL,GANA,IAAKC,CAAAA,KAML,GANa,CAMb;AAKA,UAAKC,CAAAA,SAAL,GAAiB,CAAA,CAAjB;AAlBY;AAqBdC,sBAAkB,EAAG;AACnB,aAAkB,aAAlB,KAAI,IAAKC,CAAAA,IAAT,IAAiD,WAAjD,KAAmC,IAAKA,CAAAA,IAAxC,IAA8E,WAA9E,KAAgE,IAAKA,CAAAA,IAArE,GACS,CAAC,IAAD,CADT,GAGO,EAHP;AADmB;AAOrBC,sBAAkB,EAAG;AACnB,YAAUC,KAAJ,CAAU,sCAAV,CAAN;AADmB;AA7BvB;AAkCAX,SAAQE,CAAAA,qBAAR,GAAgCA,qBAAhC;AAxC6H,CAA7H;;",
"sources":["node_modules/pixi_DOT_js/lib/events/FederatedPointerEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$events$FederatedPointerEvent\"] = function(global,require,module,exports) {\n'use strict';\n\nvar FederatedMouseEvent = require('./FederatedMouseEvent.js');\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent.FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  // Only included for completeness for now\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  // Only included for completeness for now\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexports.FederatedPointerEvent = FederatedPointerEvent;\n//# sourceMappingURL=FederatedPointerEvent.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","FederatedMouseEvent","FederatedPointerEvent","constructor","arguments","height","width","isPrimary","getCoalescedEvents","type","getPredictedEvents","Error"]
}
