{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$extensions$Extensions.js",
"lineCount":96,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/extensions/Extensions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$extensions$Extensions\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nvar ExtensionType = /* @__PURE__ */ ((ExtensionType2) => {\n  ExtensionType2[\"Application\"] = \"application\";\n  ExtensionType2[\"WebGLPipes\"] = \"webgl-pipes\";\n  ExtensionType2[\"WebGLPipesAdaptor\"] = \"webgl-pipes-adaptor\";\n  ExtensionType2[\"WebGLSystem\"] = \"webgl-system\";\n  ExtensionType2[\"WebGPUPipes\"] = \"webgpu-pipes\";\n  ExtensionType2[\"WebGPUPipesAdaptor\"] = \"webgpu-pipes-adaptor\";\n  ExtensionType2[\"WebGPUSystem\"] = \"webgpu-system\";\n  ExtensionType2[\"CanvasSystem\"] = \"canvas-system\";\n  ExtensionType2[\"CanvasPipesAdaptor\"] = \"canvas-pipes-adaptor\";\n  ExtensionType2[\"CanvasPipes\"] = \"canvas-pipes\";\n  ExtensionType2[\"Asset\"] = \"asset\";\n  ExtensionType2[\"LoadParser\"] = \"load-parser\";\n  ExtensionType2[\"ResolveParser\"] = \"resolve-parser\";\n  ExtensionType2[\"CacheParser\"] = \"cache-parser\";\n  ExtensionType2[\"DetectionParser\"] = \"detection-parser\";\n  ExtensionType2[\"MaskEffect\"] = \"mask-effect\";\n  ExtensionType2[\"BlendMode\"] = \"blend-mode\";\n  ExtensionType2[\"TextureSource\"] = \"texture-source\";\n  ExtensionType2[\"Environment\"] = \"environment\";\n  ExtensionType2[\"ShapeBuilder\"] = \"shape-builder\";\n  ExtensionType2[\"Batcher\"] = \"batcher\";\n  return ExtensionType2;\n})(ExtensionType || {});\nconst normalizeExtension = (ext) => {\n  if (typeof ext === \"function\" || typeof ext === \"object\" && ext.extension) {\n    if (!ext.extension) {\n      throw new Error(\"Extension class must have an extension object\");\n    }\n    const metadata = typeof ext.extension !== \"object\" ? { type: ext.extension } : ext.extension;\n    ext = { ...metadata, ref: ext };\n  }\n  if (typeof ext === \"object\") {\n    ext = { ...ext };\n  } else {\n    throw new Error(\"Invalid extension type\");\n  }\n  if (typeof ext.type === \"string\") {\n    ext.type = [ext.type];\n  }\n  return ext;\n};\nconst normalizeExtensionPriority = (ext, defaultPriority) => normalizeExtension(ext).priority ?? defaultPriority;\nconst extensions = {\n  /** @ignore */\n  _addHandlers: {},\n  /** @ignore */\n  _removeHandlers: {},\n  /** @ignore */\n  _queue: {},\n  /**\n   * Remove extensions from PixiJS.\n   * @param extensions - Extensions to be removed.\n   * @returns {extensions} For chaining.\n   */\n  remove(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => this._removeHandlers[type]?.(ext));\n    });\n    return this;\n  },\n  /**\n   * Register new extensions with PixiJS.\n   * @param extensions - The spread of extensions to add to PixiJS.\n   * @returns {extensions} For chaining.\n   */\n  add(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => {\n        const handlers = this._addHandlers;\n        const queue = this._queue;\n        if (!handlers[type]) {\n          queue[type] = queue[type] || [];\n          queue[type]?.push(ext);\n        } else {\n          handlers[type]?.(ext);\n        }\n      });\n    });\n    return this;\n  },\n  /**\n   * Internal method to handle extensions by name.\n   * @param type - The extension type.\n   * @param onAdd  - Function handler when extensions are added/registered {@link StrictExtensionFormat}.\n   * @param onRemove  - Function handler when extensions are removed/unregistered {@link StrictExtensionFormat}.\n   * @returns {extensions} For chaining.\n   */\n  handle(type, onAdd, onRemove) {\n    const addHandlers = this._addHandlers;\n    const removeHandlers = this._removeHandlers;\n    if (addHandlers[type] || removeHandlers[type]) {\n      throw new Error(`Extension type ${type} already has a handler`);\n    }\n    addHandlers[type] = onAdd;\n    removeHandlers[type] = onRemove;\n    const queue = this._queue;\n    if (queue[type]) {\n      queue[type]?.forEach((ext) => onAdd(ext));\n      delete queue[type];\n    }\n    return this;\n  },\n  /**\n   * Handle a type, but using a map by `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The object map of named extensions.\n   * @returns {extensions} For chaining.\n   */\n  handleByMap(type, map) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (extension.name) {\n          map[extension.name] = extension.ref;\n        }\n      },\n      (extension) => {\n        if (extension.name) {\n          delete map[extension.name];\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions with a `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The array of named extensions.\n   * @param defaultPriority - Fallback priority if none is defined.\n   * @returns {extensions} For chaining.\n   */\n  handleByNamedList(type, map, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index >= 0)\n          return;\n        map.push({ name: extension.name, value: extension.ref });\n        map.sort((a, b) => normalizeExtensionPriority(b.value, defaultPriority) - normalizeExtensionPriority(a.value, defaultPriority));\n      },\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index !== -1) {\n          map.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions.\n   * @param type - Type of extension to handle.\n   * @param list - The list of extensions.\n   * @param defaultPriority - The default priority to use if none is specified.\n   * @returns {extensions} For chaining.\n   */\n  handleByList(type, list, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (list.includes(extension.ref)) {\n          return;\n        }\n        list.push(extension.ref);\n        list.sort((a, b) => normalizeExtensionPriority(b, defaultPriority) - normalizeExtensionPriority(a, defaultPriority));\n      },\n      (extension) => {\n        const index = list.indexOf(extension.ref);\n        if (index !== -1) {\n          list.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Mixin the source object into the target object.\n   * @param Target - The target object to mix into.\n   * @param sources - The source(s) object to mix from\n   */\n  mixin(Target, ...sources) {\n    for (const source of sources) {\n      Object.defineProperties(Target.prototype, Object.getOwnPropertyDescriptors(source));\n    }\n  }\n};\n\nexports.ExtensionType = ExtensionType;\nexports.extensions = extensions;\nexports.normalizeExtensionPriority = normalizeExtensionPriority;\n//# sourceMappingURL=Extensions.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","ExtensionType","ExtensionType2","normalizeExtension","ext","extension","Error","metadata","type","ref","normalizeExtensionPriority","defaultPriority","priority","extensions","_addHandlers","_removeHandlers","_queue","remove","extensions2","map","forEach","add","handlers","queue","push","handle","onAdd","onRemove","addHandlers","removeHandlers","handleByMap","name","handleByNamedList","findIndex","index","item","value","sort","a","b","splice","handleByList","list","includes","indexOf","mixin","Target","sources","source","Object","defineProperties","prototype","getOwnPropertyDescriptors"]
}
