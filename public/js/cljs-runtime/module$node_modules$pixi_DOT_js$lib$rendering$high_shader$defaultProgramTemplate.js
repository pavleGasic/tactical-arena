shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$high_shader$defaultProgramTemplate = function(global, require, module, exports) {
  exports.fragmentGPUTemplate = "\n    @in vUV : vec2\x3cf32\x3e;\n    @in vColor : vec4\x3cf32\x3e;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -\x3e @location(0) vec4\x3cf32\x3e {\n        \n        {{start}}\n\n        var outColor:vec4\x3cf32\x3e;\n      \n        {{main}}\n        \n        var finalColor:vec4\x3cf32\x3e \x3d outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n";
  exports.fragmentGlTemplate = "\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor \x3d outColor * vColor;\n        \n        {{end}}\n    }\n";
  exports.vertexGPUTemplate = "\n    @in aPosition: vec2\x3cf32\x3e;\n    @in aUV: vec2\x3cf32\x3e;\n\n    @out @builtin(position) vPosition: vec4\x3cf32\x3e;\n    @out vUV : vec2\x3cf32\x3e;\n    @out vColor : vec4\x3cf32\x3e;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -\x3e VSOutput {\n\n        var worldTransformMatrix \x3d globalUniforms.uWorldTransformMatrix;\n        var modelMatrix \x3d mat3x3\x3cf32\x3e(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position \x3d aPosition;\n        var uv \x3d aUV;\n\n        {{start}}\n        \n        vColor \x3d vec4\x3cf32\x3e(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV \x3d uv;\n\n        var modelViewProjectionMatrix \x3d globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition \x3d  vec4\x3cf32\x3e((modelViewProjectionMatrix *  vec3\x3cf32\x3e(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *\x3d globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n";
  exports.vertexGlTemplate = "\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix \x3d uWorldTransformMatrix;\n        mat3 modelMatrix \x3d mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position \x3d aPosition;\n        vec2 uv \x3d aUV;\n        \n        {{start}}\n        \n        vColor \x3d vec4(1.);\n        \n        {{main}}\n        \n        vUV \x3d uv;\n        \n        mat3 modelViewProjectionMatrix \x3d uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position \x3d vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *\x3d uWorldColorAlpha;\n\n        {{end}}\n    }\n";
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$high_shader$defaultProgramTemplate.js.map
