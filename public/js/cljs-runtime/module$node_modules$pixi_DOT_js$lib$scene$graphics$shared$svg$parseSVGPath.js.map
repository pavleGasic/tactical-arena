{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$svg$parseSVGPath.js",
"lineCount":112,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/svg/parseSVGPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$svg$parseSVGPath\"] = function(global,require,module,exports) {\n'use strict';\n\nvar parse = require('parse-svg-path');\nvar warn = require('../../../../utils/logging/warn.js');\n\n\"use strict\";\nfunction parseSVGPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          // First control point\n          data[3],\n          data[4],\n          // Second control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // First control point\n          lastX + data[3],\n          lastY + data[4],\n          // Second control point\n          lastX + data[5],\n          lastY + data[6]\n          // End point\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn.warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexports.parseSVGPath = parseSVGPath;\n//# sourceMappingURL=parseSVGPath.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","parse","warn","parseSVGPath","svgPath","path","commands","subpaths","currentSubPath","lastX","lastY","i","length","command","type","data","moveTo","lineTo","bezierCurveTo","bezierCurveToShort","quadraticCurveTo","quadraticCurveToShort","arcToSvg","closePath","pop","startX","startY","push"]
}
