{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$assets$detections$utils$testImageFormat.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,GAAgG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA6BxIA,SAAQC,CAAAA,eAAR,GAzBAA,cAA8B,CAACC,SAAD,CAAY;AACxC,QAAI,OAAJ,IAAeC,UAAf;AACE,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,cAAMC,QAAQ,IAAIC,KAAJ,EAAd;AACAD,aAAME,CAAAA,MAAN,GAAe,EAAAC,IAAM;AACnBJ,iBAAA,CAAQ,CAAA,CAAR,CAAA;AADmB,SAArB;AAGAC,aAAMI,CAAAA,OAAN,GAAgB,EAAAC,IAAM;AACpBN,iBAAA,CAAQ,CAAA,CAAR,CAAA;AADoB,SAAtB;AAGAC,aAAMM,CAAAA,GAAN,GAAYV,SAAZ;AAR8B,OAAzB,CAAP;AADF;AAYA,QAAI,mBAAJ,IAA2BC,UAA3B,IAAyC,OAAzC,IAAoDA,UAApD,CAAgE;AAC9D,SAAI;AACF,cAAMU,OAAO,MAA+BA,CAAxB,MAAMC,KAAA,CAAMZ,SAAN,CAAkBW,EAAAA,IAAzB,EAAnB;AACA,cAAME,iBAAA,CAAkBF,IAAlB,CAAN;AAFE,OAGF,QAAOG,EAAP,CAAW;AACX,eAAO,CAAA,CAAP;AADW;AAGb,aAAO,CAAA,CAAP;AAP8D;AAShE,WAAO,CAAA,CAAP;AAtBwC,GAyB1C;AA7BwI,CAAxI;;",
"sources":["node_modules/pixi_DOT_js/lib/assets/detections/utils/testImageFormat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$assets$detections$utils$testImageFormat\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nasync function testImageFormat(imageData) {\n  if (\"Image\" in globalThis) {\n    return new Promise((resolve) => {\n      const image = new Image();\n      image.onload = () => {\n        resolve(true);\n      };\n      image.onerror = () => {\n        resolve(false);\n      };\n      image.src = imageData;\n    });\n  }\n  if (\"createImageBitmap\" in globalThis && \"fetch\" in globalThis) {\n    try {\n      const blob = await (await fetch(imageData)).blob();\n      await createImageBitmap(blob);\n    } catch (_e) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nexports.testImageFormat = testImageFormat;\n//# sourceMappingURL=testImageFormat.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","testImageFormat","imageData","globalThis","Promise","resolve","image","Image","onload","image.onload","onerror","image.onerror","src","blob","fetch","createImageBitmap","_e"]
}
