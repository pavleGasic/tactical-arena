{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gpu$blur_template_wgsl.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,GAAqG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG7IC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAAA;AAIAH,SAAQI,CAAAA,OAAR,GAFaC,s7DAEb;AAP6I,CAA7I;;",
"sources":["node_modules/pixi_DOT_js/lib/filters/defaults/blur/gpu/blur-template.wgsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gpu$blur_template_wgsl\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar source = \"\\n\\nstruct GlobalFilterUniforms {\\n  uInputSize:vec4<f32>,\\n  uInputPixel:vec4<f32>,\\n  uInputClamp:vec4<f32>,\\n  uOutputFrame:vec4<f32>,\\n  uGlobalFrame:vec4<f32>,\\n  uOutputTexture:vec4<f32>,\\n};\\n\\nstruct BlurUniforms {\\n  uStrength:f32,\\n};\\n\\n@group(0) @binding(0) var<uniform> gfu: GlobalFilterUniforms;\\n@group(0) @binding(1) var uTexture: texture_2d<f32>;\\n@group(0) @binding(2) var uSampler : sampler;\\n\\n@group(1) @binding(0) var<uniform> blurUniforms : BlurUniforms;\\n\\n\\nstruct VSOutput {\\n    @builtin(position) position: vec4<f32>,\\n    %blur-struct%\\n  };\\n\\nfn filterVertexPosition(aPosition:vec2<f32>) -> vec4<f32>\\n{\\n    var position = aPosition * gfu.uOutputFrame.zw + gfu.uOutputFrame.xy;\\n\\n    position.x = position.x * (2.0 / gfu.uOutputTexture.x) - 1.0;\\n    position.y = position.y * (2.0*gfu.uOutputTexture.z / gfu.uOutputTexture.y) - gfu.uOutputTexture.z;\\n\\n    return vec4(position, 0.0, 1.0);\\n}\\n\\nfn filterTextureCoord( aPosition:vec2<f32> ) -> vec2<f32>\\n{\\n    return aPosition * (gfu.uOutputFrame.zw * gfu.uInputSize.zw);\\n}\\n\\nfn globalTextureCoord( aPosition:vec2<f32> ) -> vec2<f32>\\n{\\n  return  (aPosition.xy / gfu.uGlobalFrame.zw) + (gfu.uGlobalFrame.xy / gfu.uGlobalFrame.zw);  \\n}\\n\\nfn getSize() -> vec2<f32>\\n{\\n  return gfu.uGlobalFrame.zw;\\n}\\n\\n\\n@vertex\\nfn mainVertex(\\n  @location(0) aPosition : vec2<f32>, \\n) -> VSOutput {\\n\\n  let filteredCord = filterTextureCoord(aPosition);\\n\\n  let pixelStrength = gfu.uInputSize.%dimension% * blurUniforms.uStrength;\\n\\n  return VSOutput(\\n   filterVertexPosition(aPosition),\\n    %blur-vertex-out%\\n  );\\n}\\n\\n@fragment\\nfn mainFragment(\\n  @builtin(position) position: vec4<f32>,\\n  %blur-fragment-in%\\n) -> @location(0) vec4<f32> {\\n\\n    var   finalColor = vec4(0.0);\\n\\n    %blur-sampling%\\n\\n    return finalColor;\\n}\";\n\nexports.default = source;\n//# sourceMappingURL=blur-template.wgsl.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","source"]
}
