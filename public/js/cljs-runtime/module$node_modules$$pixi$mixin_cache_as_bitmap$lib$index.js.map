{
"version":3,
"file":"module$node_modules$$pixi$mixin_cache_as_bitmap$lib$index.js",
"lineCount":142,
"mappings":"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",
"sources":["node_modules/@pixi/mixin-cache-as-bitmap/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mixin_cache_as_bitmap$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), display = require(\"@pixi/display\"), sprite = require(\"@pixi/sprite\");\nconst _tempMatrix = new core.Matrix();\ndisplay.DisplayObject.prototype._cacheAsBitmap = !1;\ndisplay.DisplayObject.prototype._cacheData = null;\ndisplay.DisplayObject.prototype._cacheAsBitmapResolution = null;\ndisplay.DisplayObject.prototype._cacheAsBitmapMultisample = null;\nclass CacheData {\n  constructor() {\n    this.textureCacheId = null, this.originalRender = null, this.originalRenderCanvas = null, this.originalCalculateBounds = null, this.originalGetLocalBounds = null, this.originalUpdateTransform = null, this.originalDestroy = null, this.originalMask = null, this.originalFilterArea = null, this.originalContainsPoint = null, this.sprite = null;\n  }\n}\nObject.defineProperties(display.DisplayObject.prototype, {\n  /**\n   * The resolution to use for cacheAsBitmap. By default this will use the renderer's resolution\n   * but can be overriden for performance. Lower values will reduce memory usage at the expense\n   * of render quality. A falsey value of `null` or `0` will default to the renderer's resolution.\n   * If `cacheAsBitmap` is set to `true`, this will re-render with the new resolution.\n   * @member {number|null} cacheAsBitmapResolution\n   * @memberof PIXI.DisplayObject#\n   * @default null\n   */\n  cacheAsBitmapResolution: {\n    get() {\n      return this._cacheAsBitmapResolution;\n    },\n    set(resolution) {\n      resolution !== this._cacheAsBitmapResolution && (this._cacheAsBitmapResolution = resolution, this.cacheAsBitmap && (this.cacheAsBitmap = !1, this.cacheAsBitmap = !0));\n    }\n  },\n  /**\n   * The number of samples to use for cacheAsBitmap. If set to `null`, the renderer's\n   * sample count is used.\n   * If `cacheAsBitmap` is set to `true`, this will re-render with the new number of samples.\n   * @member {number|null} cacheAsBitmapMultisample\n   * @memberof PIXI.DisplayObject#\n   * @default null\n   */\n  cacheAsBitmapMultisample: {\n    get() {\n      return this._cacheAsBitmapMultisample;\n    },\n    set(multisample) {\n      multisample !== this._cacheAsBitmapMultisample && (this._cacheAsBitmapMultisample = multisample, this.cacheAsBitmap && (this.cacheAsBitmap = !1, this.cacheAsBitmap = !0));\n    }\n  },\n  /**\n   * Set this to true if you want this display object to be cached as a bitmap.\n   * This basically takes a snapshot of the display object as it is at that moment. It can\n   * provide a performance benefit for complex static displayObjects.\n   * To remove simply set this property to `false`\n   *\n   * IMPORTANT GOTCHA - Make sure that all your textures are preloaded BEFORE setting this property to true\n   * as it will take a snapshot of what is currently there. If the textures have not loaded then they will not appear.\n   * @member {boolean}\n   * @memberof PIXI.DisplayObject#\n   */\n  cacheAsBitmap: {\n    get() {\n      return this._cacheAsBitmap;\n    },\n    set(value) {\n      if (this._cacheAsBitmap === value)\n        return;\n      this._cacheAsBitmap = value;\n      let data;\n      value ? (this._cacheData || (this._cacheData = new CacheData()), data = this._cacheData, data.originalRender = this.render, data.originalRenderCanvas = this.renderCanvas, data.originalUpdateTransform = this.updateTransform, data.originalCalculateBounds = this.calculateBounds, data.originalGetLocalBounds = this.getLocalBounds, data.originalDestroy = this.destroy, data.originalContainsPoint = this.containsPoint, data.originalMask = this._mask, data.originalFilterArea = this.filterArea, this.render = this._renderCached, this.renderCanvas = this._renderCachedCanvas, this.destroy = this._cacheAsBitmapDestroy) : (data = this._cacheData, data.sprite && this._destroyCachedDisplayObject(), this.render = data.originalRender, this.renderCanvas = data.originalRenderCanvas, this.calculateBounds = data.originalCalculateBounds, this.getLocalBounds = data.originalGetLocalBounds, this.destroy = data.originalDestroy, this.updateTransform = data.originalUpdateTransform, this.containsPoint = data.originalContainsPoint, this._mask = data.originalMask, this.filterArea = data.originalFilterArea);\n    }\n  }\n});\ndisplay.DisplayObject.prototype._renderCached = function(renderer) {\n  !this.visible || this.worldAlpha <= 0 || !this.renderable || (this._initCachedDisplayObject(renderer), this._cacheData.sprite.transform._worldID = this.transform._worldID, this._cacheData.sprite.worldAlpha = this.worldAlpha, this._cacheData.sprite._render(renderer));\n};\ndisplay.DisplayObject.prototype._initCachedDisplayObject = function(renderer) {\n  if (this._cacheData?.sprite)\n    return;\n  const cacheAlpha = this.alpha;\n  this.alpha = 1, renderer.batch.flush();\n  const bounds = this.getLocalBounds(new core.Rectangle(), !0);\n  if (this.filters?.length) {\n    const padding = this.filters[0].padding;\n    bounds.pad(padding);\n  }\n  const resolution = this.cacheAsBitmapResolution || renderer.resolution;\n  bounds.ceil(resolution), bounds.width = Math.max(bounds.width, 1 / resolution), bounds.height = Math.max(bounds.height, 1 / resolution);\n  const cachedRenderTexture = renderer.renderTexture.current, cachedSourceFrame = renderer.renderTexture.sourceFrame.clone(), cachedDestinationFrame = renderer.renderTexture.destinationFrame.clone(), cachedProjectionTransform = renderer.projection.transform, renderTexture = core.RenderTexture.create({\n    width: bounds.width,\n    height: bounds.height,\n    resolution,\n    multisample: this.cacheAsBitmapMultisample ?? renderer.multisample\n  }), textureCacheId = `cacheAsBitmap_${core.utils.uid()}`;\n  this._cacheData.textureCacheId = textureCacheId, core.BaseTexture.addToCache(renderTexture.baseTexture, textureCacheId), core.Texture.addToCache(renderTexture, textureCacheId);\n  const m = this.transform.localTransform.copyTo(_tempMatrix).invert().translate(-bounds.x, -bounds.y);\n  this.render = this._cacheData.originalRender, renderer.render(this, { renderTexture, clear: !0, transform: m, skipUpdateTransform: !1 }), renderer.framebuffer.blit(), renderer.projection.transform = cachedProjectionTransform, renderer.renderTexture.bind(cachedRenderTexture, cachedSourceFrame, cachedDestinationFrame), this.render = this._renderCached, this.updateTransform = this.displayObjectUpdateTransform, this.calculateBounds = this._calculateCachedBounds, this.getLocalBounds = this._getCachedLocalBounds, this._mask = null, this.filterArea = null, this.alpha = cacheAlpha;\n  const cachedSprite = new sprite.Sprite(renderTexture);\n  cachedSprite.transform.worldTransform = this.transform.worldTransform, cachedSprite.anchor.x = -(bounds.x / bounds.width), cachedSprite.anchor.y = -(bounds.y / bounds.height), cachedSprite.alpha = cacheAlpha, cachedSprite._bounds = this._bounds, this._cacheData.sprite = cachedSprite, this.transform._parentID = -1, this.parent ? this.updateTransform() : (this.enableTempParent(), this.updateTransform(), this.disableTempParent(null)), this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\ndisplay.DisplayObject.prototype._renderCachedCanvas = function(renderer) {\n  !this.visible || this.worldAlpha <= 0 || !this.renderable || (this._initCachedDisplayObjectCanvas(renderer), this._cacheData.sprite.worldAlpha = this.worldAlpha, this._cacheData.sprite._renderCanvas(renderer));\n};\ndisplay.DisplayObject.prototype._initCachedDisplayObjectCanvas = function(renderer) {\n  if (this._cacheData?.sprite)\n    return;\n  const bounds = this.getLocalBounds(new core.Rectangle(), !0), cacheAlpha = this.alpha;\n  this.alpha = 1;\n  const cachedRenderTarget = renderer.canvasContext.activeContext, cachedProjectionTransform = renderer._projTransform, resolution = this.cacheAsBitmapResolution || renderer.resolution;\n  bounds.ceil(resolution), bounds.width = Math.max(bounds.width, 1 / resolution), bounds.height = Math.max(bounds.height, 1 / resolution);\n  const renderTexture = core.RenderTexture.create({\n    width: bounds.width,\n    height: bounds.height,\n    resolution\n  }), textureCacheId = `cacheAsBitmap_${core.utils.uid()}`;\n  this._cacheData.textureCacheId = textureCacheId, core.BaseTexture.addToCache(renderTexture.baseTexture, textureCacheId), core.Texture.addToCache(renderTexture, textureCacheId);\n  const m = _tempMatrix;\n  this.transform.localTransform.copyTo(m), m.invert(), m.tx -= bounds.x, m.ty -= bounds.y, this.renderCanvas = this._cacheData.originalRenderCanvas, renderer.render(this, { renderTexture, clear: !0, transform: m, skipUpdateTransform: !1 }), renderer.canvasContext.activeContext = cachedRenderTarget, renderer._projTransform = cachedProjectionTransform, this.renderCanvas = this._renderCachedCanvas, this.updateTransform = this.displayObjectUpdateTransform, this.calculateBounds = this._calculateCachedBounds, this.getLocalBounds = this._getCachedLocalBounds, this._mask = null, this.filterArea = null, this.alpha = cacheAlpha;\n  const cachedSprite = new sprite.Sprite(renderTexture);\n  cachedSprite.transform.worldTransform = this.transform.worldTransform, cachedSprite.anchor.x = -(bounds.x / bounds.width), cachedSprite.anchor.y = -(bounds.y / bounds.height), cachedSprite.alpha = cacheAlpha, cachedSprite._bounds = this._bounds, this._cacheData.sprite = cachedSprite, this.transform._parentID = -1, this.parent ? this.updateTransform() : (this.parent = renderer._tempDisplayObjectParent, this.updateTransform(), this.parent = null), this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\ndisplay.DisplayObject.prototype._calculateCachedBounds = function() {\n  this._bounds.clear(), this._cacheData.sprite.transform._worldID = this.transform._worldID, this._cacheData.sprite._calculateBounds(), this._bounds.updateID = this._boundsID;\n};\ndisplay.DisplayObject.prototype._getCachedLocalBounds = function() {\n  return this._cacheData.sprite.getLocalBounds(null);\n};\ndisplay.DisplayObject.prototype._destroyCachedDisplayObject = function() {\n  this._cacheData.sprite._texture.destroy(!0), this._cacheData.sprite = null, core.BaseTexture.removeFromCache(this._cacheData.textureCacheId), core.Texture.removeFromCache(this._cacheData.textureCacheId), this._cacheData.textureCacheId = null;\n};\ndisplay.DisplayObject.prototype._cacheAsBitmapDestroy = function(options) {\n  this.cacheAsBitmap = !1, this.destroy(options);\n};\nexports.CacheData = CacheData;\n//# sourceMappingURL=index.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","display","sprite","_tempMatrix","Matrix","DisplayObject","prototype","_cacheAsBitmap","_cacheData","_cacheAsBitmapResolution","_cacheAsBitmapMultisample","CacheData","constructor","originalContainsPoint","originalFilterArea","originalMask","originalDestroy","originalUpdateTransform","originalGetLocalBounds","originalCalculateBounds","originalRenderCanvas","originalRender","textureCacheId","Object","defineProperties","cacheAsBitmapResolution","get","set","resolution","cacheAsBitmap","cacheAsBitmapMultisample","multisample","value","data","render","renderCanvas","updateTransform","calculateBounds","getLocalBounds","destroy","containsPoint","_mask","filterArea","_renderCached","_renderCachedCanvas","_cacheAsBitmapDestroy","_destroyCachedDisplayObject","display.DisplayObject.prototype._renderCached","renderer","visible","worldAlpha","renderable","_initCachedDisplayObject","transform","_worldID","_render","display.DisplayObject.prototype._initCachedDisplayObject","cacheAlpha","alpha","batch","flush","bounds","Rectangle","filters","length","pad","padding","ceil","width","Math","max","height","cachedRenderTexture","renderTexture","current","cachedSourceFrame","sourceFrame","clone","cachedDestinationFrame","destinationFrame","cachedProjectionTransform","projection","RenderTexture","create","utils","uid","BaseTexture","addToCache","baseTexture","Texture","m","localTransform","copyTo","invert","translate","x","y","clear","skipUpdateTransform","framebuffer","blit","bind","displayObjectUpdateTransform","_calculateCachedBounds","_getCachedLocalBounds","cachedSprite","Sprite","worldTransform","anchor","_bounds","_parentID","parent","enableTempParent","disableTempParent","display.DisplayObject.prototype._renderCachedCanvas","_initCachedDisplayObjectCanvas","_renderCanvas","display.DisplayObject.prototype._initCachedDisplayObjectCanvas","cachedRenderTarget","canvasContext","activeContext","_projTransform","tx","ty","_tempDisplayObjectParent","display.DisplayObject.prototype._calculateCachedBounds","_calculateBounds","updateID","_boundsID","display.DisplayObject.prototype._getCachedLocalBounds","display.DisplayObject.prototype._destroyCachedDisplayObject","_texture","removeFromCache","display.DisplayObject.prototype._cacheAsBitmapDestroy","options"]
}
