{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildAdaptiveBezier.js",
"lineCount":47,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/buildCommands/buildAdaptiveBezier.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildAdaptiveBezier\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GraphicsContextSystem = require('../GraphicsContextSystem.js');\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\nfunction buildAdaptiveBezier(points, sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance) {\n  recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x34 = (x3 + x4) / 2;\n  const y34 = (y3 + y4) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  const x234 = (x23 + x34) / 2;\n  const y234 = (y23 + y34) / 2;\n  const x1234 = (x123 + x234) / 2;\n  const y1234 = (y123 + y234) / 2;\n  if (level > 0) {\n    let dx = x4 - x1;\n    let dy = y4 - y1;\n    const d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx);\n    const d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx);\n    let da1;\n    let da2;\n    if (d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n      if ((d2 + d3) * (d2 + d3) <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        const a23 = Math.atan2(y3 - y2, x3 - x2);\n        da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n        da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da2 >= pi)\n          da2 = 2 * pi - da2;\n        if (da1 + da2 < mAngleTolerance) {\n          points.push(x1234, y1234);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n          if (da2 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else if (d2 > FLT_EPSILON) {\n      if (d2 * d2 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n        }\n      }\n    } else if (d3 > FLT_EPSILON) {\n      if (d3 * d3 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else {\n      dx = x1234 - (x1 + x4) / 2;\n      dy = y1234 - (y1 + y4) / 2;\n      if (dx * dx + dy * dy <= distanceTolerance) {\n        points.push(x1234, y1234);\n        return;\n      }\n    }\n  }\n  recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n  recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\nexports.buildAdaptiveBezier = buildAdaptiveBezier;\n//# sourceMappingURL=buildAdaptiveBezier.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","recursive","x1","y1","x2","y2","x3","y3","x4","y4","points","distanceTolerance","level","RECURSION_LIMIT","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","Math","abs","d3","FLT_EPSILON","push","GraphicsContextSystem","buildAdaptiveBezier","sX","sY","cp1x","cp1y","cp2x","cp2y","eX","eY","smoothness","PATH_DISTANCE_EPSILON","min","smoothing","max","defaultOptions","bezierSmoothness"]
}
