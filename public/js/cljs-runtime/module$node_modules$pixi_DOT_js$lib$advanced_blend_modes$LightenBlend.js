shadow$provide.module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$LightenBlend = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  require = require("module$node_modules$pixi_DOT_js$lib$filters$blend_modes$BlendModeFilter");
  "use strict";
  class LightenBlend extends require.BlendModeFilter {
    constructor() {
      super({gl:{functions:"\n                vec3 blendLighten(vec3 base, vec3 blend, float opacity)\n                {\n                    return (max(base, blend) * opacity + base * (1.0 - opacity));\n                }\n                ", main:"\n                finalColor \x3d vec4(blendLighten(back.rgb, front.rgb,front.a), blendedAlpha) * uBlend;\n                "}, gpu:{functions:"\n                fn blendLighten(base:vec3\x3cf32\x3e,  blend:vec3\x3cf32\x3e,  opacity:f32) -\x3e vec3\x3cf32\x3e\n                {\n                    return (max(base, blend) * opacity + base * (1.0 - opacity));\n                }\n            ", 
      main:"\n                out \x3d vec4\x3cf32\x3e(blendLighten(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n            "}});
    }
  }
  LightenBlend.extension = {name:"lighten", type:global.ExtensionType.BlendMode};
  exports.LightenBlend = LightenBlend;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$LightenBlend.js.map
