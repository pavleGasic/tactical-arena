{
"version":3,
"file":"module$node_modules$$pixi$text_bitmap$lib$utils$generateFillStyle.js",
"lineCount":39,
"mappings":"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",
"sources":["node_modules/@pixi/text-bitmap/lib/utils/generateFillStyle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$text_bitmap$lib$utils$generateFillStyle\"] = function(global,require,module,exports) {\n\"use strict\";\nvar text = require(\"@pixi/text\");\nfunction generateFillStyle(canvas, context, style, resolution, lines, metrics) {\n  const fillStyle = style.fill;\n  if (Array.isArray(fillStyle)) {\n    if (fillStyle.length === 1)\n      return fillStyle[0];\n  } else\n    return fillStyle;\n  let gradient;\n  const dropShadowCorrection = style.dropShadow ? style.dropShadowDistance : 0, padding = style.padding || 0, width = canvas.width / resolution - dropShadowCorrection - padding * 2, height = canvas.height / resolution - dropShadowCorrection - padding * 2, fill = fillStyle.slice(), fillGradientStops = style.fillGradientStops.slice();\n  if (!fillGradientStops.length) {\n    const lengthPlus1 = fill.length + 1;\n    for (let i = 1; i < lengthPlus1; ++i)\n      fillGradientStops.push(i / lengthPlus1);\n  }\n  if (fill.unshift(fillStyle[0]), fillGradientStops.unshift(0), fill.push(fillStyle[fillStyle.length - 1]), fillGradientStops.push(1), style.fillGradientType === text.TEXT_GRADIENT.LINEAR_VERTICAL) {\n    gradient = context.createLinearGradient(width / 2, padding, width / 2, height + padding);\n    let lastIterationStop = 0;\n    const gradStopLineHeight = (metrics.fontProperties.fontSize + style.strokeThickness) / height;\n    for (let i = 0; i < lines.length; i++) {\n      const thisLineTop = metrics.lineHeight * i;\n      for (let j = 0; j < fill.length; j++) {\n        let lineStop = 0;\n        typeof fillGradientStops[j] == \"number\" ? lineStop = fillGradientStops[j] : lineStop = j / fill.length;\n        const globalStop = thisLineTop / height + lineStop * gradStopLineHeight;\n        let clampedStop = Math.max(lastIterationStop, globalStop);\n        clampedStop = Math.min(clampedStop, 1), gradient.addColorStop(clampedStop, fill[j]), lastIterationStop = clampedStop;\n      }\n    }\n  } else {\n    gradient = context.createLinearGradient(padding, height / 2, width + padding, height / 2);\n    const totalIterations = fill.length + 1;\n    let currentIteration = 1;\n    for (let i = 0; i < fill.length; i++) {\n      let stop;\n      typeof fillGradientStops[i] == \"number\" ? stop = fillGradientStops[i] : stop = currentIteration / totalIterations, gradient.addColorStop(stop, fill[i]), currentIteration++;\n    }\n  }\n  return gradient;\n}\nexports.generateFillStyle = generateFillStyle;\n//# sourceMappingURL=generateFillStyle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","text","generateFillStyle","canvas","context","style","resolution","lines","metrics","fillStyle","fill","Array","isArray","length","dropShadowCorrection","dropShadow","dropShadowDistance","padding","width","height","slice","fillGradientStops","lengthPlus1","i","push","unshift","fillGradientType","TEXT_GRADIENT","LINEAR_VERTICAL","gradient","createLinearGradient","lastIterationStop","gradStopLineHeight","fontProperties","fontSize","strokeThickness","thisLineTop","j","lineHeight","lineStop","clampedStop","Math","max","min","addColorStop","totalIterations","currentIteration","stop"]
}
