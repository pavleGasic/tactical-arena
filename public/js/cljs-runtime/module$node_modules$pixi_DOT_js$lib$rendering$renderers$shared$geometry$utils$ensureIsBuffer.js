shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$ensureIsBuffer = function(global, require, module, exports) {
  var Buffer = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$buffer$Buffer"), _const = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$buffer$const");
  "use strict";
  exports.ensureIsBuffer = function(buffer, index) {
    if (!(buffer instanceof Buffer.Buffer)) {
      let usage = index ? _const.BufferUsage.INDEX : _const.BufferUsage.VERTEX;
      buffer instanceof Array && (index ? (buffer = new Uint32Array(buffer), usage = _const.BufferUsage.INDEX | _const.BufferUsage.COPY_DST) : (buffer = new Float32Array(buffer), usage = _const.BufferUsage.VERTEX | _const.BufferUsage.COPY_DST));
      buffer = new Buffer.Buffer({data:buffer, label:index ? "index-mesh-buffer" : "vertex-mesh-buffer", usage});
    }
    return buffer;
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$ensureIsBuffer.js.map
