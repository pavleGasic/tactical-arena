shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$particle_container$gpu$GpuParticleContainerAdaptor = function(global, require, module, exports) {
  class GpuParticleContainerAdaptor {
    execute(particleContainerPipe, container) {
      const renderer = particleContainerPipe.renderer;
      var shader = container.shader || particleContainerPipe.defaultShader;
      shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPipe.localUniforms, !0);
      shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);
      shader = particleContainerPipe.state;
      const buffer = particleContainerPipe.getBuffers(container);
      renderer.encoder.draw({geometry:buffer.geometry, shader:container.shader || particleContainerPipe.defaultShader, state:shader, size:6 * container.particleChildren.length});
    }
  }
  exports.GpuParticleContainerAdaptor = GpuParticleContainerAdaptor;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$particle_container$gpu$GpuParticleContainerAdaptor.js.map
