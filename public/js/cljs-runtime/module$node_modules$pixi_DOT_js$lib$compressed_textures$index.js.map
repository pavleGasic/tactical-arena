{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$compressed_textures$index.js",
"lineCount":48,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/compressed-textures/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$compressed_textures$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar detectBasis = require('./basis/detectBasis.js');\nvar loadBasis = require('./basis/loadBasis.js');\nrequire('./basis/types.js');\nvar createLevelBuffers = require('./basis/utils/createLevelBuffers.js');\nvar gpuFormatToBasisTranscoderFormat = require('./basis/utils/gpuFormatToBasisTranscoderFormat.js');\nvar setBasisTranscoderPath = require('./basis/utils/setBasisTranscoderPath.js');\nvar loadBasisOnWorker = require('./basis/worker/loadBasisOnWorker.js');\nvar _const = require('./dds/const.js');\nvar loadDDS = require('./dds/loadDDS.js');\nvar parseDDS = require('./dds/parseDDS.js');\nvar loadKTX = require('./ktx/loadKTX.js');\nvar parseKTX = require('./ktx/parseKTX.js');\nvar _const$1 = require('./ktx2/const.js');\nvar loadKTX2 = require('./ktx2/loadKTX2.js');\nrequire('./ktx2/types.js');\nvar convertFormatIfRequired = require('./ktx2/utils/convertFormatIfRequired.js');\nvar createLevelBuffersFromKTX = require('./ktx2/utils/createLevelBuffersFromKTX.js');\nvar getTextureFormatFromKTXTexture = require('./ktx2/utils/getTextureFormatFromKTXTexture.js');\nvar glFormatToGPUFormat = require('./ktx2/utils/glFormatToGPUFormat.js');\nvar gpuFormatToKTXBasisTranscoderFormat = require('./ktx2/utils/gpuFormatToKTXBasisTranscoderFormat.js');\nvar setKTXTranscoderPath = require('./ktx2/utils/setKTXTranscoderPath.js');\nvar vkFormatToGPUFormat = require('./ktx2/utils/vkFormatToGPUFormat.js');\nvar loadKTX2onWorker = require('./ktx2/worker/loadKTX2onWorker.js');\nvar detectCompressed = require('./shared/detectCompressed.js');\nvar resolveCompressedTextureUrl = require('./shared/resolveCompressedTextureUrl.js');\n\n\"use strict\";\n\nexports.detectBasis = detectBasis.detectBasis;\nexports.loadBasis = loadBasis.loadBasis;\nexports.createLevelBuffers = createLevelBuffers.createLevelBuffers;\nexports.gpuFormatToBasisTranscoderFormat = gpuFormatToBasisTranscoderFormat.gpuFormatToBasisTranscoderFormat;\nexports.basisTranscoderUrls = setBasisTranscoderPath.basisTranscoderUrls;\nexports.setBasisTranscoderPath = setBasisTranscoderPath.setBasisTranscoderPath;\nexports.loadBasisOnWorker = loadBasisOnWorker.loadBasisOnWorker;\nexports.D3D10_RESOURCE_DIMENSION = _const.D3D10_RESOURCE_DIMENSION;\nexports.D3DFMT = _const.D3DFMT;\nexports.DDS = _const.DDS;\nexports.DXGI_FORMAT = _const.DXGI_FORMAT;\nexports.DXGI_TO_TEXTURE_FORMAT = _const.DXGI_TO_TEXTURE_FORMAT;\nexports.FOURCC_TO_TEXTURE_FORMAT = _const.FOURCC_TO_TEXTURE_FORMAT;\nexports.TEXTURE_FORMAT_BLOCK_SIZE = _const.TEXTURE_FORMAT_BLOCK_SIZE;\nexports.loadDDS = loadDDS.loadDDS;\nexports.parseDDS = parseDDS.parseDDS;\nexports.loadKTX = loadKTX.loadKTX;\nexports.parseKTX = parseKTX.parseKTX;\nexports.GL_INTERNAL_FORMAT = _const$1.GL_INTERNAL_FORMAT;\nexports.KTX = _const$1.KTX;\nexports.loadKTX2 = loadKTX2.loadKTX2;\nexports.convertFormatIfRequired = convertFormatIfRequired.convertFormatIfRequired;\nexports.createLevelBuffersFromKTX = createLevelBuffersFromKTX.createLevelBuffersFromKTX;\nexports.getTextureFormatFromKTXTexture = getTextureFormatFromKTXTexture.getTextureFormatFromKTXTexture;\nexports.glFormatToGPUFormat = glFormatToGPUFormat.glFormatToGPUFormat;\nexports.gpuFormatToKTXBasisTranscoderFormat = gpuFormatToKTXBasisTranscoderFormat.gpuFormatToKTXBasisTranscoderFormat;\nexports.ktxTranscoderUrls = setKTXTranscoderPath.ktxTranscoderUrls;\nexports.setKTXTranscoderPath = setKTXTranscoderPath.setKTXTranscoderPath;\nexports.vkFormatToGPUFormat = vkFormatToGPUFormat.vkFormatToGPUFormat;\nexports.loadKTX2onWorker = loadKTX2onWorker.loadKTX2onWorker;\nexports.detectCompressed = detectCompressed.detectCompressed;\nexports.resolveCompressedTextureUrl = resolveCompressedTextureUrl.resolveCompressedTextureUrl;\nexports.validFormats = resolveCompressedTextureUrl.validFormats;\n//# sourceMappingURL=index.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","detectBasis","loadBasis","createLevelBuffers","gpuFormatToBasisTranscoderFormat","setBasisTranscoderPath","loadBasisOnWorker","_const","loadDDS","parseDDS","loadKTX","parseKTX","_const$1","loadKTX2","convertFormatIfRequired","createLevelBuffersFromKTX","getTextureFormatFromKTXTexture","glFormatToGPUFormat","gpuFormatToKTXBasisTranscoderFormat","setKTXTranscoderPath","vkFormatToGPUFormat","loadKTX2onWorker","detectCompressed","resolveCompressedTextureUrl","basisTranscoderUrls","D3D10_RESOURCE_DIMENSION","D3DFMT","DDS","DXGI_FORMAT","DXGI_TO_TEXTURE_FORMAT","FOURCC_TO_TEXTURE_FORMAT","TEXTURE_FORMAT_BLOCK_SIZE","GL_INTERNAL_FORMAT","KTX","ktxTranscoderUrls","validFormats"]
}
