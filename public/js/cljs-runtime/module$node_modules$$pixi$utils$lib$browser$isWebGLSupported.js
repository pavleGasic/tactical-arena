shadow$provide.module$node_modules$$pixi$utils$lib$browser$isWebGLSupported = function(global, require, module, exports) {
  require("module$node_modules$$pixi$utils$lib$settings");
  var settings = require("module$node_modules$$pixi$settings$lib$index");
  let supported;
  exports.isWebGLSupported = function() {
    return "u" < typeof supported && (supported = function() {
      var contextOptions = {stencil:!0, failIfMajorPerformanceCaveat:settings.settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT};
      try {
        if (!settings.settings.ADAPTER.getWebGLRenderingContext()) {
          return !1;
        }
        const canvas = settings.settings.ADAPTER.createCanvas();
        let gl = canvas.getContext("webgl", contextOptions) || canvas.getContext("experimental-webgl", contextOptions);
        contextOptions = !!gl?.getContextAttributes()?.stencil;
        if (gl) {
          const loseContext = gl.getExtension("WEBGL_lose_context");
          loseContext && loseContext.loseContext();
        }
        return contextOptions;
      } catch {
        return !1;
      }
    }()), supported;
  };
};

//# sourceMappingURL=module$node_modules$$pixi$utils$lib$browser$isWebGLSupported.js.map
