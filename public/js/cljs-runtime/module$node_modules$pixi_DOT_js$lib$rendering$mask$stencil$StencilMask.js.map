{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$mask$stencil$StencilMask.js",
"lineCount":40,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,GAA2F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG/HC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,YAAYJ,OAAA,CAAQ,+DAAR,CAAhB,EACIK,gBAAgBL,OAAA,CAAQ,wEAAR,CADpB,EAEIM,qBAAqBN,OAAA,CAAQ,6EAAR,CAFzB;AAIA,cAAA;AACA,OAAMO,YAAN;AACEC,eAAW,CAACC,OAAD,CAAU;AACnB,UAAKC,CAAAA,QAAL,GAAgB,CAAhB;AACA,UAAKC,CAAAA,IAAL,GAAY,aAAZ;AACIF,aAASG,EAAAA,IAAb,IACE,IAAKC,CAAAA,IAAL,CAAUJ,OAAQG,CAAAA,IAAlB,CADF;AAHmB;AAOrBC,QAAI,CAACD,IAAD,CAAO;AACT,UAAKA,CAAAA,IAAL,GAAYA,IAAZ;AACA,UAAKA,CAAAA,IAAKE,CAAAA,cAAV,GAA2B,CAAA,CAA3B;AACA,UAAKF,CAAAA,IAAKG,CAAAA,UAAV,GAAuB,CAAA,CAAvB;AAHS;AAKXC,SAAK,EAAG;AACN,UAAKJ,CAAAA,IAAKG,CAAAA,UAAV,GAAuB,CAAA,CAAvB;AACA,UAAKH,CAAAA,IAAKE,CAAAA,cAAV,GAA2B,CAAA,CAA3B;AACA,UAAKF,CAAAA,IAAL,GAAY,IAAZ;AAHM;AAKRK,aAAS,CAACC,MAAD,EAASC,mBAAT,CAA8B;AACrCd,mBAAcA,CAAAA,aAAd,CAA4B,IAAKO,CAAAA,IAAjC,EAAuCM,MAAvC,EAA+CC,mBAA/C,CAAA;AADqC;AAGvCC,kBAAc,CAACF,MAAD,EAASG,SAAT,CAAoB;AAChCf,wBAAmBA,CAAAA,kBAAnB,CAAsC,IAAKM,CAAAA,IAA3C,EAAiDM,MAAjD,EAAyDG,SAAzD,CAAA;AADgC;AAGlCC,iBAAa,CAACC,KAAD,EAAQC,SAAR,CAAmB;AAE9B,aAAOA,SAAA,CADM,IAAKZ,CAAAA,IACX,EAAgBW,KAAhB,CAAP;AAF8B;AAIhCE,WAAO,EAAG;AACR,UAAKT,CAAAA,KAAL,EAAA;AADQ;AAGHU,eAAI,CAACd,IAAD,CAAO;AAChB,aAAOA,IAAP,YAAuBR,SAAUA,CAAAA,SAAjC;AADgB;AA/BpB;AAmCAG,aAAYoB,CAAAA,SAAZ,GAAwBxB,MAAWyB,CAAAA,aAAcC,CAAAA,UAAjD;AAEA3B,SAAQK,CAAAA,WAAR,GAAsBA,WAAtB;AA9CmI,CAAnI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/mask/stencil/StencilMask.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$mask$stencil$StencilMask\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Container = require('../../../scene/container/Container.js');\nvar addMaskBounds = require('../utils/addMaskBounds.js');\nvar addMaskLocalBounds = require('../utils/addMaskLocalBounds.js');\n\n\"use strict\";\nclass StencilMask {\n  constructor(options) {\n    this.priority = 0;\n    this.pipe = \"stencilMask\";\n    if (options?.mask) {\n      this.init(options.mask);\n    }\n  }\n  init(mask) {\n    this.mask = mask;\n    this.mask.includeInBuild = false;\n    this.mask.measurable = false;\n  }\n  reset() {\n    this.mask.measurable = true;\n    this.mask.includeInBuild = true;\n    this.mask = null;\n  }\n  addBounds(bounds, skipUpdateTransform) {\n    addMaskBounds.addMaskBounds(this.mask, bounds, skipUpdateTransform);\n  }\n  addLocalBounds(bounds, localRoot) {\n    addMaskLocalBounds.addMaskLocalBounds(this.mask, bounds, localRoot);\n  }\n  containsPoint(point, hitTestFn) {\n    const mask = this.mask;\n    return hitTestFn(mask, point);\n  }\n  destroy() {\n    this.reset();\n  }\n  static test(mask) {\n    return mask instanceof Container.Container;\n  }\n}\nStencilMask.extension = Extensions.ExtensionType.MaskEffect;\n\nexports.StencilMask = StencilMask;\n//# sourceMappingURL=StencilMask.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Container","addMaskBounds","addMaskLocalBounds","StencilMask","constructor","options","priority","pipe","mask","init","includeInBuild","measurable","reset","addBounds","bounds","skipUpdateTransform","addLocalBounds","localRoot","containsPoint","point","hitTestFn","destroy","test","extension","ExtensionType","MaskEffect"]
}
