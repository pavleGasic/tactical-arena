{
"version":3,
"file":"module$node_modules$$pixi$mesh_extras$lib$geometry$PlaneGeometry.js",
"lineCount":36,
"mappings":"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",
"sources":["node_modules/@pixi/mesh-extras/lib/geometry/PlaneGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mesh_extras$lib$geometry$PlaneGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\nvar mesh = require(\"@pixi/mesh\");\nclass PlaneGeometry extends mesh.MeshGeometry {\n  /**\n   * @param width - The width of the plane.\n   * @param height - The height of the plane.\n   * @param segWidth - Number of horizontal segments.\n   * @param segHeight - Number of vertical segments.\n   */\n  constructor(width = 100, height = 100, segWidth = 10, segHeight = 10) {\n    super(), this.segWidth = segWidth, this.segHeight = segHeight, this.width = width, this.height = height, this.build();\n  }\n  /**\n   * Refreshes plane coordinates\n   * @private\n   */\n  build() {\n    const total = this.segWidth * this.segHeight, verts = [], uvs = [], indices = [], segmentsX = this.segWidth - 1, segmentsY = this.segHeight - 1, sizeX = this.width / segmentsX, sizeY = this.height / segmentsY;\n    for (let i = 0; i < total; i++) {\n      const x = i % this.segWidth, y = i / this.segWidth | 0;\n      verts.push(x * sizeX, y * sizeY), uvs.push(x / segmentsX, y / segmentsY);\n    }\n    const totalSub = segmentsX * segmentsY;\n    for (let i = 0; i < totalSub; i++) {\n      const xpos = i % segmentsX, ypos = i / segmentsX | 0, value = ypos * this.segWidth + xpos, value2 = ypos * this.segWidth + xpos + 1, value3 = (ypos + 1) * this.segWidth + xpos, value4 = (ypos + 1) * this.segWidth + xpos + 1;\n      indices.push(\n        value,\n        value2,\n        value3,\n        value2,\n        value4,\n        value3\n      );\n    }\n    this.buffers[0].data = new Float32Array(verts), this.buffers[1].data = new Float32Array(uvs), this.indexBuffer.data = new Uint16Array(indices), this.buffers[0].update(), this.buffers[1].update(), this.indexBuffer.update();\n  }\n}\nexports.PlaneGeometry = PlaneGeometry;\n//# sourceMappingURL=PlaneGeometry.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","mesh","PlaneGeometry","MeshGeometry","constructor","width","height","segWidth","segHeight","build","total","verts","uvs","indices","segmentsX","segmentsY","sizeX","sizeY","i","x","y","push","totalSub","xpos","ypos","value2","value3","buffers","data","Float32Array","indexBuffer","Uint16Array","update"]
}
