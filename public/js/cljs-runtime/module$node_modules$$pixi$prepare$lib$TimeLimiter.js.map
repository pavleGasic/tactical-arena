{
"version":3,
"file":"module$node_modules$$pixi$prepare$lib$TimeLimiter.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,GAAsE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAE9G,OAAMC,YAAN;AAEEC,eAAW,CAACC,eAAD,CAAkB;AAC3B,UAAKA,CAAAA,eAAL,GAAuBA,eAAvB;AAAwC,UAAKC,CAAAA,UAAL,GAAkB,CAAlB;AADb;AAI7BC,cAAU,EAAG;AACX,UAAKD,CAAAA,UAAL,GAAkBE,IAAKC,CAAAA,GAAL,EAAlB;AADW;AAObC,mBAAe,EAAG;AAChB,aAAOF,IAAKC,CAAAA,GAAL,EAAP,GAAoB,IAAKH,CAAAA,UAAzB,GAAsC,IAAKD,CAAAA,eAA3C;AADgB;AAbpB;AAiBAH,SAAQC,CAAAA,WAAR,GAAsBA,WAAtB;AAnB8G,CAA9G;;",
"sources":["node_modules/@pixi/prepare/lib/TimeLimiter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$prepare$lib$TimeLimiter\"] = function(global,require,module,exports) {\n\"use strict\";\nclass TimeLimiter {\n  /** @param maxMilliseconds - The maximum milliseconds that can be spent preparing items each frame. */\n  constructor(maxMilliseconds) {\n    this.maxMilliseconds = maxMilliseconds, this.frameStart = 0;\n  }\n  /** Resets any counting properties to start fresh on a new frame. */\n  beginFrame() {\n    this.frameStart = Date.now();\n  }\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @returns - If the item is allowed to be uploaded.\n   */\n  allowedToUpload() {\n    return Date.now() - this.frameStart < this.maxMilliseconds;\n  }\n}\nexports.TimeLimiter = TimeLimiter;\n//# sourceMappingURL=TimeLimiter.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","TimeLimiter","constructor","maxMilliseconds","frameStart","beginFrame","Date","now","allowedToUpload"]
}
