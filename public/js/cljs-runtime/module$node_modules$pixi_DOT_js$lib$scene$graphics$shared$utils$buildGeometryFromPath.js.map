{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$utils$buildGeometryFromPath.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/utils/buildGeometryFromPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$utils$buildGeometryFromPath\"] = function(global,require,module,exports) {\n'use strict';\n\nvar buildUvs = require('../../../../rendering/renderers/shared/geometry/utils/buildUvs.js');\nvar transformVertices = require('../../../../rendering/renderers/shared/geometry/utils/transformVertices.js');\nvar MeshGeometry = require('../../../mesh/shared/MeshGeometry.js');\nvar buildCircle = require('../buildCommands/buildCircle.js');\nvar buildPolygon = require('../buildCommands/buildPolygon.js');\nvar buildRectangle = require('../buildCommands/buildRectangle.js');\nvar buildTriangle = require('../buildCommands/buildTriangle.js');\nvar GraphicsPath = require('../path/GraphicsPath.js');\n\n\"use strict\";\nconst buildMap = {\n  rectangle: buildRectangle.buildRectangle,\n  polygon: buildPolygon.buildPolygon,\n  triangle: buildTriangle.buildTriangle,\n  circle: buildCircle.buildCircle,\n  ellipse: buildCircle.buildCircle,\n  roundedRectangle: buildCircle.buildCircle\n};\nfunction buildGeometryFromPath(options) {\n  if (options instanceof GraphicsPath.GraphicsPath) {\n    options = {\n      path: options,\n      textureMatrix: null,\n      out: null\n    };\n  }\n  const vertices = [];\n  const uvs = [];\n  const indices = [];\n  const shapePath = options.path.shapePath;\n  const textureMatrix = options.textureMatrix;\n  shapePath.shapePrimitives.forEach(({ shape, transform: matrix }) => {\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n    const points = [];\n    const build = buildMap[shape.type];\n    build.build(shape, points);\n    if (matrix) {\n      transformVertices.transformVertices(points, matrix);\n    }\n    build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n    const uvsOffset = uvs.length / 2;\n    if (textureMatrix) {\n      if (matrix) {\n        textureMatrix.append(matrix.clone().invert());\n      }\n      buildUvs.buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, vertices.length / 2 - vertOffset, textureMatrix);\n    } else {\n      buildUvs.buildSimpleUvs(uvs, uvsOffset, 2, vertices.length / 2 - vertOffset);\n    }\n  });\n  const out = options.out;\n  if (out) {\n    out.positions = new Float32Array(vertices);\n    out.uvs = new Float32Array(uvs);\n    out.indices = new Uint32Array(indices);\n    return out;\n  }\n  const geometry = new MeshGeometry.MeshGeometry({\n    positions: new Float32Array(vertices),\n    uvs: new Float32Array(uvs),\n    indices: new Uint32Array(indices)\n  });\n  return geometry;\n}\n\nexports.buildGeometryFromPath = buildGeometryFromPath;\n//# sourceMappingURL=buildGeometryFromPath.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildUvs","transformVertices","MeshGeometry","buildCircle","buildPolygon","buildRectangle","buildTriangle","GraphicsPath","buildMap","rectangle","polygon","triangle","circle","ellipse","roundedRectangle","buildGeometryFromPath","options","path","textureMatrix","out","vertices","uvs","indices","shapePath","shapePrimitives","forEach","shape","matrix","indexOffset","length","vertOffset","points","build","type","triangulate","uvsOffset","append","clone","invert","buildSimpleUvs","positions","Float32Array","Uint32Array","geometry"]
}
