{
"version":3,
"file":"module$node_modules$$pixi$display$lib$Container.js",
"lineCount":240,
"mappings":"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",
"sources":["node_modules/@pixi/display/lib/Container.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$display$lib$Container\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), DisplayObject = require(\"./DisplayObject.js\");\nconst tempMatrix = new core.Matrix();\nfunction sortChildren(a, b) {\n  return a.zIndex === b.zIndex ? a._lastSortedIndex - b._lastSortedIndex : a.zIndex - b.zIndex;\n}\nconst _Container = class _Container2 extends DisplayObject.DisplayObject {\n  constructor() {\n    super(), this.children = [], this.sortableChildren = _Container2.defaultSortableChildren, this.sortDirty = !1;\n  }\n  /**\n   * Overridable method that can be used by Container subclasses whenever the children array is modified.\n   * @param _length\n   */\n  onChildrenChange(_length) {\n  }\n  /**\n   * Adds one or more children to the container.\n   *\n   * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n   * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to add to the container\n   * @returns {PIXI.DisplayObject} - The first child that was added.\n   */\n  addChild(...children) {\n    if (children.length > 1)\n      for (let i = 0; i < children.length; i++)\n        this.addChild(children[i]);\n    else {\n      const child = children[0];\n      child.parent && child.parent.removeChild(child), child.parent = this, this.sortDirty = !0, child.transform._parentID = -1, this.children.push(child), this._boundsID++, this.onChildrenChange(this.children.length - 1), this.emit(\"childAdded\", child, this, this.children.length - 1), child.emit(\"added\", this);\n    }\n    return children[0];\n  }\n  /**\n   * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown.\n   * If the child is already in this container, it will be moved to the specified index.\n   * @param {PIXI.DisplayObject} child - The child to add.\n   * @param {number} index - The absolute index where the child will be positioned at the end of the operation.\n   * @returns {PIXI.DisplayObject} The child that was added.\n   */\n  addChildAt(child, index) {\n    if (index < 0 || index > this.children.length)\n      throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${this.children.length}`);\n    return child.parent && child.parent.removeChild(child), child.parent = this, this.sortDirty = !0, child.transform._parentID = -1, this.children.splice(index, 0, child), this._boundsID++, this.onChildrenChange(index), child.emit(\"added\", this), this.emit(\"childAdded\", child, this, index), child;\n  }\n  /**\n   * Swaps the position of 2 Display Objects within this container.\n   * @param child - First display object to swap\n   * @param child2 - Second display object to swap\n   */\n  swapChildren(child, child2) {\n    if (child === child2)\n      return;\n    const index1 = this.getChildIndex(child), index2 = this.getChildIndex(child2);\n    this.children[index1] = child2, this.children[index2] = child, this.onChildrenChange(index1 < index2 ? index1 : index2);\n  }\n  /**\n   * Returns the index position of a child DisplayObject instance\n   * @param child - The DisplayObject instance to identify\n   * @returns - The index position of the child display object to identify\n   */\n  getChildIndex(child) {\n    const index = this.children.indexOf(child);\n    if (index === -1)\n      throw new Error(\"The supplied DisplayObject must be a child of the caller\");\n    return index;\n  }\n  /**\n   * Changes the position of an existing child in the display object container\n   * @param child - The child DisplayObject instance for which you want to change the index number\n   * @param index - The resulting index number for the child display object\n   */\n  setChildIndex(child, index) {\n    if (index < 0 || index >= this.children.length)\n      throw new Error(`The index ${index} supplied is out of bounds ${this.children.length}`);\n    const currentIndex = this.getChildIndex(child);\n    core.utils.removeItems(this.children, currentIndex, 1), this.children.splice(index, 0, child), this.onChildrenChange(index);\n  }\n  /**\n   * Returns the child at the specified index\n   * @param index - The index to get the child at\n   * @returns - The child at the given index, if any.\n   */\n  getChildAt(index) {\n    if (index < 0 || index >= this.children.length)\n      throw new Error(`getChildAt: Index (${index}) does not exist.`);\n    return this.children[index];\n  }\n  /**\n   * Removes one or more children from the container.\n   * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to remove\n   * @returns {PIXI.DisplayObject} The first child that was removed.\n   */\n  removeChild(...children) {\n    if (children.length > 1)\n      for (let i = 0; i < children.length; i++)\n        this.removeChild(children[i]);\n    else {\n      const child = children[0], index = this.children.indexOf(child);\n      if (index === -1)\n        return null;\n      child.parent = null, child.transform._parentID = -1, core.utils.removeItems(this.children, index, 1), this._boundsID++, this.onChildrenChange(index), child.emit(\"removed\", this), this.emit(\"childRemoved\", child, this, index);\n    }\n    return children[0];\n  }\n  /**\n   * Removes a child from the specified index position.\n   * @param index - The index to get the child from\n   * @returns The child that was removed.\n   */\n  removeChildAt(index) {\n    const child = this.getChildAt(index);\n    return child.parent = null, child.transform._parentID = -1, core.utils.removeItems(this.children, index, 1), this._boundsID++, this.onChildrenChange(index), child.emit(\"removed\", this), this.emit(\"childRemoved\", child, this, index), child;\n  }\n  /**\n   * Removes all children from this container that are within the begin and end indexes.\n   * @param beginIndex - The beginning position.\n   * @param endIndex - The ending position. Default value is size of the container.\n   * @returns - List of removed children\n   */\n  removeChildren(beginIndex = 0, endIndex = this.children.length) {\n    const begin = beginIndex, end = endIndex, range = end - begin;\n    let removed;\n    if (range > 0 && range <= end) {\n      removed = this.children.splice(begin, range);\n      for (let i = 0; i < removed.length; ++i)\n        removed[i].parent = null, removed[i].transform && (removed[i].transform._parentID = -1);\n      this._boundsID++, this.onChildrenChange(beginIndex);\n      for (let i = 0; i < removed.length; ++i)\n        removed[i].emit(\"removed\", this), this.emit(\"childRemoved\", removed[i], this, i);\n      return removed;\n    } else if (range === 0 && this.children.length === 0)\n      return [];\n    throw new RangeError(\"removeChildren: numeric values are outside the acceptable range.\");\n  }\n  /** Sorts children by zIndex. Previous order is maintained for 2 children with the same zIndex. */\n  sortChildren() {\n    let sortRequired = !1;\n    for (let i = 0, j = this.children.length; i < j; ++i) {\n      const child = this.children[i];\n      child._lastSortedIndex = i, !sortRequired && child.zIndex !== 0 && (sortRequired = !0);\n    }\n    sortRequired && this.children.length > 1 && this.children.sort(sortChildren), this.sortDirty = !1;\n  }\n  /** Updates the transform on all children of this container for rendering. */\n  updateTransform() {\n    this.sortableChildren && this.sortDirty && this.sortChildren(), this._boundsID++, this.transform.updateTransform(this.parent.transform), this.worldAlpha = this.alpha * this.parent.worldAlpha;\n    for (let i = 0, j = this.children.length; i < j; ++i) {\n      const child = this.children[i];\n      child.visible && child.updateTransform();\n    }\n  }\n  /**\n   * Recalculates the bounds of the container.\n   *\n   * This implementation will automatically fit the children's bounds into the calculation. Each child's bounds\n   * is limited to its mask's bounds or filterArea, if any is applied.\n   */\n  calculateBounds() {\n    this._bounds.clear(), this._calculateBounds();\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      if (!(!child.visible || !child.renderable))\n        if (child.calculateBounds(), child._mask) {\n          const maskObject = child._mask.isMaskData ? child._mask.maskObject : child._mask;\n          maskObject ? (maskObject.calculateBounds(), this._bounds.addBoundsMask(child._bounds, maskObject._bounds)) : this._bounds.addBounds(child._bounds);\n        } else\n          child.filterArea ? this._bounds.addBoundsArea(child._bounds, child.filterArea) : this._bounds.addBounds(child._bounds);\n    }\n    this._bounds.updateID = this._boundsID;\n  }\n  /**\n   * Retrieves the local bounds of the displayObject as a rectangle object.\n   *\n   * Calling `getLocalBounds` may invalidate the `_bounds` of the whole subtree below. If using it inside a render()\n   * call, it is advised to call `getBounds()` immediately after to recalculate the world bounds of the subtree.\n   * @param rect - Optional rectangle to store the result of the bounds calculation.\n   * @param skipChildrenUpdate - Setting to `true` will stop re-calculation of children transforms,\n   *  it was default behaviour of pixi 4.0-5.2 and caused many problems to users.\n   * @returns - The rectangular bounding area.\n   */\n  getLocalBounds(rect, skipChildrenUpdate = !1) {\n    const result = super.getLocalBounds(rect);\n    if (!skipChildrenUpdate)\n      for (let i = 0, j = this.children.length; i < j; ++i) {\n        const child = this.children[i];\n        child.visible && child.updateTransform();\n      }\n    return result;\n  }\n  /**\n   * Recalculates the content bounds of this object. This should be overriden to\n   * calculate the bounds of this specific object (not including children).\n   * @protected\n   */\n  _calculateBounds() {\n  }\n  /**\n   * Renders this object and its children with culling.\n   * @protected\n   * @param {PIXI.Renderer} renderer - The renderer\n   */\n  _renderWithCulling(renderer) {\n    const sourceFrame = renderer.renderTexture.sourceFrame;\n    if (!(sourceFrame.width > 0 && sourceFrame.height > 0))\n      return;\n    let bounds, transform;\n    this.cullArea ? (bounds = this.cullArea, transform = this.worldTransform) : this._render !== _Container2.prototype._render && (bounds = this.getBounds(!0));\n    const projectionTransform = renderer.projection.transform;\n    if (projectionTransform && (transform ? (transform = tempMatrix.copyFrom(transform), transform.prepend(projectionTransform)) : transform = projectionTransform), bounds && sourceFrame.intersects(bounds, transform))\n      this._render(renderer);\n    else if (this.cullArea)\n      return;\n    for (let i = 0, j = this.children.length; i < j; ++i) {\n      const child = this.children[i], childCullable = child.cullable;\n      child.cullable = childCullable || !this.cullArea, child.render(renderer), child.cullable = childCullable;\n    }\n  }\n  /**\n   * Renders the object using the WebGL renderer.\n   *\n   * The [_render]{@link PIXI.Container#_render} method is be overriden for rendering the contents of the\n   * container itself. This `render` method will invoke it, and also invoke the `render` methods of all\n   * children afterward.\n   *\n   * If `renderable` or `visible` is false or if `worldAlpha` is not positive or if `cullable` is true and\n   * the bounds of this object are out of frame, this implementation will entirely skip rendering.\n   * See {@link PIXI.DisplayObject} for choosing between `renderable` or `visible`. Generally,\n   * setting alpha to zero is not recommended for purely skipping rendering.\n   *\n   * When your scene becomes large (especially when it is larger than can be viewed in a single screen), it is\n   * advised to employ **culling** to automatically skip rendering objects outside of the current screen.\n   * See [cullable]{@link PIXI.DisplayObject#cullable} and [cullArea]{@link PIXI.DisplayObject#cullArea}.\n   * Other culling methods might be better suited for a large number static objects; see\n   * [@pixi-essentials/cull]{@link https://www.npmjs.com/package/@pixi-essentials/cull} and\n   * [pixi-cull]{@link https://www.npmjs.com/package/pixi-cull}.\n   *\n   * The [renderAdvanced]{@link PIXI.Container#renderAdvanced} method is internally used when when masking or\n   * filtering is applied on a container. This does, however, break batching and can affect performance when\n   * masking and filtering is applied extensively throughout the scene graph.\n   * @param renderer - The renderer\n   */\n  render(renderer) {\n    if (!(!this.visible || this.worldAlpha <= 0 || !this.renderable))\n      if (this._mask || this.filters?.length)\n        this.renderAdvanced(renderer);\n      else if (this.cullable)\n        this._renderWithCulling(renderer);\n      else {\n        this._render(renderer);\n        for (let i = 0, j = this.children.length; i < j; ++i)\n          this.children[i].render(renderer);\n      }\n  }\n  /**\n   * Render the object using the WebGL renderer and advanced features.\n   * @param renderer - The renderer\n   */\n  renderAdvanced(renderer) {\n    const filters = this.filters, mask = this._mask;\n    if (filters) {\n      this._enabledFilters || (this._enabledFilters = []), this._enabledFilters.length = 0;\n      for (let i = 0; i < filters.length; i++)\n        filters[i].enabled && this._enabledFilters.push(filters[i]);\n    }\n    const flush = filters && this._enabledFilters?.length || mask && (!mask.isMaskData || mask.enabled && (mask.autoDetect || mask.type !== core.MASK_TYPES.NONE));\n    if (flush && renderer.batch.flush(), filters && this._enabledFilters?.length && renderer.filter.push(this, this._enabledFilters), mask && renderer.mask.push(this, this._mask), this.cullable)\n      this._renderWithCulling(renderer);\n    else {\n      this._render(renderer);\n      for (let i = 0, j = this.children.length; i < j; ++i)\n        this.children[i].render(renderer);\n    }\n    flush && renderer.batch.flush(), mask && renderer.mask.pop(this), filters && this._enabledFilters?.length && renderer.filter.pop();\n  }\n  /**\n   * To be overridden by the subclasses.\n   * @param _renderer - The renderer\n   */\n  _render(_renderer) {\n  }\n  /**\n   * Removes all internal references and listeners as well as removes children from the display list.\n   * Do not use a Container after calling `destroy`.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n   *  method called as well. 'options' will be passed on to those calls.\n   * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n   *  Should it destroy the texture of the child sprite\n   * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n   *  Should it destroy the base texture of the child sprite\n   */\n  destroy(options) {\n    super.destroy(), this.sortDirty = !1;\n    const destroyChildren = typeof options == \"boolean\" ? options : options?.children, oldChildren = this.removeChildren(0, this.children.length);\n    if (destroyChildren)\n      for (let i = 0; i < oldChildren.length; ++i)\n        oldChildren[i].destroy(options);\n  }\n  /** The width of the Container, setting this will actually modify the scale to achieve the value set. */\n  get width() {\n    return this.scale.x * this.getLocalBounds().width;\n  }\n  set width(value) {\n    const width = this.getLocalBounds().width;\n    width !== 0 ? this.scale.x = value / width : this.scale.x = 1, this._width = value;\n  }\n  /** The height of the Container, setting this will actually modify the scale to achieve the value set. */\n  get height() {\n    return this.scale.y * this.getLocalBounds().height;\n  }\n  set height(value) {\n    const height = this.getLocalBounds().height;\n    height !== 0 ? this.scale.y = value / height : this.scale.y = 1, this._height = value;\n  }\n};\n_Container.defaultSortableChildren = !1;\nlet Container = _Container;\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\nexports.Container = Container;\n//# sourceMappingURL=Container.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","sortChildren","a","b","zIndex","_lastSortedIndex","core","DisplayObject","tempMatrix","Matrix","constructor","children","sortableChildren","_Container2","defaultSortableChildren","sortDirty","onChildrenChange","_length","addChild","length","i","child","parent","removeChild","transform","_parentID","push","_boundsID","emit","addChildAt","index","Error","splice","swapChildren","child2","index1","getChildIndex","index2","indexOf","setChildIndex","currentIndex","utils","removeItems","getChildAt","removeChildAt","removeChildren","beginIndex","endIndex","range","removed","RangeError","sortRequired","j","sort","updateTransform","worldAlpha","alpha","visible","calculateBounds","_bounds","clear","_calculateBounds","renderable","_mask","maskObject","isMaskData","addBoundsMask","addBounds","filterArea","addBoundsArea","updateID","getLocalBounds","rect","skipChildrenUpdate","result","_renderWithCulling","renderer","sourceFrame","renderTexture","width","height","bounds","cullArea","worldTransform","_render","prototype","getBounds","projectionTransform","projection","copyFrom","prepend","intersects","childCullable","cullable","render","filters","renderAdvanced","mask","_enabledFilters","enabled","flush","autoDetect","type","MASK_TYPES","NONE","batch","filter","pop","_renderer","destroy","options","destroyChildren","oldChildren","scale","x","value","_width","y","_height","_Container","containerUpdateTransform","Container"]
}
