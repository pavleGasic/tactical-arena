{
"version":3,
"file":"module$node_modules$$pixi$filter_blur$lib$generateBlurVertSource.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,GAAqF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA4C7HA,SAAQC,CAAAA,sBAAR,GAXAA,QAA+B,CAACC,UAAD,EAAaC,CAAb,CAAgB;AAC7C,UAAMC,aAAaC,IAAKC,CAAAA,IAAL,CAAUJ,UAAV,GAAuB,CAAvB,CAAnB;AAD6C,QAEzCK,aAjCgBC,itBA+ByB;AAEdC,eAAW,EAFG,EAECC,QAFD;AAG7CP,KAAA,GAAIO,QAAJ,GAAe,mFAAf,GAAkGA,QAAlG,GAA6G,mFAA7G;AACA,SAASC,CAAT,GAAa,CAAb,EAAgBA,CAAhB,GAAoBT,UAApB,EAAgCS,CAAA,EAAhC,CAAqC;AACnC,UAAIC,OAAOF,QAASG,CAAAA,OAAT,CAAiB,SAAjB,EAA4BF,CAAEG,CAAAA,QAAF,EAA5B,CAAX;AACAF,UAAA,GAAOA,IAAKC,CAAAA,OAAL,CAAa,eAAb,EAA+B,GAAEF,CAAF,IAAOP,UAAP,GAAoB,CAApB,KAA/B,CAAP;AAAmEK,cAAA,IAAYG,IAAZ;AAAkBH,cAAA,IAAa,IAAb;AAFlD;AAKrC,WAAOF,UAAA,GAAaA,UAAWM,CAAAA,OAAX,CAAmB,QAAnB,EAA6BJ,QAA7B,CAAb,EAAqDF,UAArD,GAAkEA,UAAWM,CAAAA,OAAX,CAAmB,QAAnB,EAA6BX,UAAWY,CAAAA,QAAX,EAA7B,CAAlE,EAAuHP,UAA9H;AAT6C,GAW/C;AA5C6H,CAA7H;;",
"sources":["node_modules/@pixi/filter-blur/lib/generateBlurVertSource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$filter_blur$lib$generateBlurVertSource\"] = function(global,require,module,exports) {\n\"use strict\";\nconst vertTemplate = `\n    attribute vec2 aVertexPosition;\n\n    uniform mat3 projectionMatrix;\n\n    uniform float strength;\n\n    varying vec2 vBlurTexCoords[%size%];\n\n    uniform vec4 inputSize;\n    uniform vec4 outputFrame;\n\n    vec4 filterVertexPosition( void )\n    {\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n    }\n\n    vec2 filterTextureCoord( void )\n    {\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\n    }\n\n    void main(void)\n    {\n        gl_Position = filterVertexPosition();\n\n        vec2 textureCoord = filterTextureCoord();\n        %blur%\n    }`;\nfunction generateBlurVertSource(kernelSize, x) {\n  const halfLength = Math.ceil(kernelSize / 2);\n  let vertSource = vertTemplate, blurLoop = \"\", template;\n  x ? template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);\" : template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);\";\n  for (let i = 0; i < kernelSize; i++) {\n    let blur = template.replace(\"%index%\", i.toString());\n    blur = blur.replace(\"%sampleIndex%\", `${i - (halfLength - 1)}.0`), blurLoop += blur, blurLoop += `\n`;\n  }\n  return vertSource = vertSource.replace(\"%blur%\", blurLoop), vertSource = vertSource.replace(\"%size%\", kernelSize.toString()), vertSource;\n}\nexports.generateBlurVertSource = generateBlurVertSource;\n//# sourceMappingURL=generateBlurVertSource.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","generateBlurVertSource","kernelSize","x","halfLength","Math","ceil","vertSource","vertTemplate","blurLoop","template","i","blur","replace","toString"]
}
