shadow$provide.module$node_modules$$pixi$events$lib$FederatedEvent = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index");
  class FederatedEvent {
    constructor(manager) {
      this.cancelBubble = this.bubbles = !0;
      this.defaultPrevented = this.composed = this.cancelable = !1;
      this.eventPhase = FederatedEvent.prototype.NONE;
      this.propagationImmediatelyStopped = this.propagationStopped = !1;
      this.layer = new core.Point();
      this.page = new core.Point();
      this.NONE = 0;
      this.CAPTURING_PHASE = 1;
      this.AT_TARGET = 2;
      this.BUBBLING_PHASE = 3;
      this.manager = manager;
    }
    get layerX() {
      return this.layer.x;
    }
    get layerY() {
      return this.layer.y;
    }
    get pageX() {
      return this.page.x;
    }
    get pageY() {
      return this.page.y;
    }
    get data() {
      return this;
    }
    composedPath() {
      return this.manager && (!this.path || this.path[this.path.length - 1] !== this.target) && (this.path = this.target ? this.manager.propagationPath(this.target) : []), this.path;
    }
    initEvent(_type, _bubbles, _cancelable) {
      throw Error("initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.");
    }
    initUIEvent(_typeArg, _bubblesArg, _cancelableArg, _viewArg, _detailArg) {
      throw Error("initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.");
    }
    preventDefault() {
      this.nativeEvent instanceof Event && this.nativeEvent.cancelable && this.nativeEvent.preventDefault();
      this.defaultPrevented = !0;
    }
    stopImmediatePropagation() {
      this.propagationImmediatelyStopped = !0;
    }
    stopPropagation() {
      this.propagationStopped = !0;
    }
  }
  exports.FederatedEvent = FederatedEvent;
};

//# sourceMappingURL=module$node_modules$$pixi$events$lib$FederatedEvent.js.map
