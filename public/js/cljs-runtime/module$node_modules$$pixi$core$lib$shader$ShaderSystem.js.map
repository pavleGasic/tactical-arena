{
"version":3,
"file":"module$node_modules$$pixi$core$lib$shader$ShaderSystem.js",
"lineCount":102,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/shader/ShaderSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$shader$ShaderSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar extensions = require(\"@pixi/extensions\");\nrequire(\"./utils/index.js\");\nvar generateProgram = require(\"./utils/generateProgram.js\"), generateUniformBufferSync = require(\"./utils/generateUniformBufferSync.js\"), unsafeEvalSupported = require(\"./utils/unsafeEvalSupported.js\"), generateUniformsSync = require(\"./utils/generateUniformsSync.js\");\nlet UID = 0;\nconst defaultSyncData = { textureCount: 0, uboCount: 0 };\nclass ShaderSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this.destroyed = !1, this.renderer = renderer, this.systemCheck(), this.gl = null, this.shader = null, this.program = null, this.cache = {}, this._uboCache = {}, this.id = UID++;\n  }\n  /**\n   * Overrideable function by `@pixi/unsafe-eval` to silence\n   * throwing an error if platform doesn't support unsafe-evals.\n   * @private\n   */\n  systemCheck() {\n    if (!unsafeEvalSupported.unsafeEvalSupported())\n      throw new Error(\"Current environment does not allow unsafe-eval, please use @pixi/unsafe-eval module to enable support.\");\n  }\n  contextChange(gl) {\n    this.gl = gl, this.reset();\n  }\n  /**\n   * Changes the current shader to the one given in parameter.\n   * @param shader - the new shader\n   * @param dontSync - false if the shader should automatically sync its uniforms.\n   * @returns the glProgram that belongs to the shader.\n   */\n  bind(shader, dontSync) {\n    shader.disposeRunner.add(this), shader.uniforms.globals = this.renderer.globalUniforms;\n    const program = shader.program, glProgram = program.glPrograms[this.renderer.CONTEXT_UID] || this.generateProgram(shader);\n    return this.shader = shader, this.program !== program && (this.program = program, this.gl.useProgram(glProgram.program)), dontSync || (defaultSyncData.textureCount = 0, defaultSyncData.uboCount = 0, this.syncUniformGroup(shader.uniformGroup, defaultSyncData)), glProgram;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param uniforms - the uniforms values that be applied to the current shader\n   */\n  setUniforms(uniforms) {\n    const shader = this.shader.program, glProgram = shader.glPrograms[this.renderer.CONTEXT_UID];\n    shader.syncUniforms(glProgram.uniformData, uniforms, this.renderer);\n  }\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n  /**\n   * Syncs uniforms on the group\n   * @param group - the uniform group to sync\n   * @param syncData - this is data that is passed to the sync function and any nested sync functions\n   */\n  syncUniformGroup(group, syncData) {\n    const glProgram = this.getGlProgram();\n    (!group.static || group.dirtyId !== glProgram.uniformDirtyGroups[group.id]) && (glProgram.uniformDirtyGroups[group.id] = group.dirtyId, this.syncUniforms(group, glProgram, syncData));\n  }\n  /**\n   * Overrideable by the @pixi/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param glProgram\n   * @param syncData\n   */\n  syncUniforms(group, glProgram, syncData) {\n    (group.syncUniforms[this.shader.program.id] || this.createSyncGroups(group))(glProgram.uniformData, group.uniforms, this.renderer, syncData);\n  }\n  createSyncGroups(group) {\n    const id = this.getSignature(group, this.shader.program.uniformData, \"u\");\n    return this.cache[id] || (this.cache[id] = generateUniformsSync.generateUniformsSync(group, this.shader.program.uniformData)), group.syncUniforms[this.shader.program.id] = this.cache[id], group.syncUniforms[this.shader.program.id];\n  }\n  /**\n   * Syncs uniform buffers\n   * @param group - the uniform buffer group to sync\n   * @param name - the name of the uniform buffer\n   */\n  syncUniformBufferGroup(group, name) {\n    const glProgram = this.getGlProgram();\n    if (!group.static || group.dirtyId !== 0 || !glProgram.uniformGroups[group.id]) {\n      group.dirtyId = 0;\n      const syncFunc = glProgram.uniformGroups[group.id] || this.createSyncBufferGroup(group, glProgram, name);\n      group.buffer.update(), syncFunc(\n        glProgram.uniformData,\n        group.uniforms,\n        this.renderer,\n        defaultSyncData,\n        group.buffer\n      );\n    }\n    this.renderer.buffer.bindBufferBase(group.buffer, glProgram.uniformBufferBindings[name]);\n  }\n  /**\n   * Will create a function that uploads a uniform buffer using the STD140 standard.\n   * The upload function will then be cached for future calls\n   * If a group is manually managed, then a simple upload function is generated\n   * @param group - the uniform buffer group to sync\n   * @param glProgram - the gl program to attach the uniform bindings to\n   * @param name - the name of the uniform buffer (must exist on the shader)\n   */\n  createSyncBufferGroup(group, glProgram, name) {\n    const { gl } = this.renderer;\n    this.renderer.buffer.bind(group.buffer);\n    const uniformBlockIndex = this.gl.getUniformBlockIndex(glProgram.program, name);\n    glProgram.uniformBufferBindings[name] = this.shader.uniformBindCount, gl.uniformBlockBinding(glProgram.program, uniformBlockIndex, this.shader.uniformBindCount), this.shader.uniformBindCount++;\n    const id = this.getSignature(group, this.shader.program.uniformData, \"ubo\");\n    let uboData = this._uboCache[id];\n    if (uboData || (uboData = this._uboCache[id] = generateUniformBufferSync.generateUniformBufferSync(group, this.shader.program.uniformData)), group.autoManage) {\n      const data = new Float32Array(uboData.size / 4);\n      group.buffer.update(data);\n    }\n    return glProgram.uniformGroups[group.id] = uboData.syncFunc, glProgram.uniformGroups[group.id];\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms, strings = [`${preFix}-`];\n    for (const i in uniforms)\n      strings.push(i), uniformData[i] && strings.push(uniformData[i].type);\n    return strings.join(\"-\");\n  }\n  /**\n   * Returns the underlying GLShade rof the currently bound shader.\n   *\n   * This can be handy for when you to have a little more control over the setting of your uniforms.\n   * @returns The glProgram for the currently bound Shader for this context\n   */\n  getGlProgram() {\n    return this.shader ? this.shader.program.glPrograms[this.renderer.CONTEXT_UID] : null;\n  }\n  /**\n   * Generates a glProgram version of the Shader provided.\n   * @param shader - The shader that the glProgram will be based on.\n   * @returns A shiny new glProgram!\n   */\n  generateProgram(shader) {\n    const gl = this.gl, program = shader.program, glProgram = generateProgram.generateProgram(gl, program);\n    return program.glPrograms[this.renderer.CONTEXT_UID] = glProgram, glProgram;\n  }\n  /** Resets ShaderSystem state, does not affect WebGL state. */\n  reset() {\n    this.program = null, this.shader = null;\n  }\n  /**\n   * Disposes shader.\n   * If disposing one equals with current shader, set current as null.\n   * @param shader - Shader object\n   */\n  disposeShader(shader) {\n    this.shader === shader && (this.shader = null);\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this.renderer = null, this.destroyed = !0;\n  }\n}\nShaderSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"shader\"\n};\nextensions.extensions.add(ShaderSystem);\nexports.ShaderSystem = ShaderSystem;\n//# sourceMappingURL=ShaderSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","extensions","generateProgram","generateUniformBufferSync","unsafeEvalSupported","generateUniformsSync","UID","defaultSyncData","textureCount","uboCount","ShaderSystem","constructor","renderer","destroyed","systemCheck","program","shader","gl","cache","_uboCache","id","Error","contextChange","reset","bind","dontSync","disposeRunner","add","uniforms","globals","globalUniforms","glProgram","glPrograms","CONTEXT_UID","useProgram","syncUniformGroup","uniformGroup","setUniforms","syncUniforms","uniformData","group","syncData","getGlProgram","static","dirtyId","uniformDirtyGroups","createSyncGroups","getSignature","syncUniformBufferGroup","name","uniformGroups","syncFunc","createSyncBufferGroup","buffer","update","bindBufferBase","uniformBufferBindings","uniformBlockIndex","getUniformBlockIndex","uniformBindCount","uniformBlockBinding","uboData","autoManage","data","Float32Array","size","preFix","strings","i","push","type","join","disposeShader","destroy","extension","ExtensionType","RendererSystem"]
}
