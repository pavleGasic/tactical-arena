{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadSVG.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,GAAyF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAE7HC,OAAOH,OAAA,CAAQ,0CAAR,CAFsH,EAE/FI,eAAeJ,OAAA,CAAQ,yDAAR,CAFgF,EAErCK,iBAAiBL,OAAA,CAAQ,2DAAR,CAFoB;AAEyBM,QAAAA,GAAeN,OAAA,CAAQ,kEAAR,CAAfM;AAA8CC,QAAAA,GAAeP,OAAA,CAAQ,2EAAR,CAAfO;AAAxM,MAAqPC,gBAAgBR,OAAA,CAAQ,kFAAR,CAArQ;AACkES,SAAAA,GAAU,CAC1EC,UAAW,CACTC,KAAMR,IAAKS,CAAAA,aAAcC,CAAAA,UADhB,EAETC,SAAUR,MAAaS,CAAAA,oBAAqBC,CAAAA,IAFnC,CAD+D,EAK1EC,KAAM,SALoE,EAM1EC,IAAI,CAACC,GAAD,CAAM;AACR,WAAOf,YAAaA,CAAAA,YAAb,CAA0Be,GAA1B,EAPsCC,eAOtC,CAAP,IAAuDf,cAAeA,CAAAA,cAAf,CAA8Bc,GAA9B,EAPjCE,MAOiC,CAAvD;AADQ,GANgE,EASpEC,eAAS,CAACC,IAAD,CAAO;AACpB,WAAOpB,IAAKqB,CAAAA,WAAYN,CAAAA,IAAjB,CAAsBK,IAAtB,CAAP;AADoB,GAToD,EAYpEE,WAAK,CAACC,KAAD,EAAQH,IAAR,EAAcI,MAAd,CAAsB;AAC/B,UAAMC,MAAM,IAAIzB,IAAKqB,CAAAA,WAAT,CAAqBE,KAArB,EAA4BH,IAAMA,EAAAA,IAAMM,EAAAA,eAAxC,CAAZ;AACA,UAAMD,GAAIE,CAAAA,IAAJ,EAAN;AACMC,SAAAA,GAAO,IAAI5B,IAAK6B,CAAAA,WAAT,CAAqBJ,GAArB,EAA0B,CACrCK,WAAY9B,IAAK+B,CAAAA,KAAMC,CAAAA,kBAAX,CAA8BT,KAA9B,CADyB,EAErC,GAAGH,IAAMA,EAAAA,IAF4B,CAA1B,CAAPQ;AAIN,WAAOA,KAAKK,CAAAA,QAASR,CAAAA,GAAd,GAAoBL,IAAKK,CAAAA,GAAzB,EAA8BpB,aAAcA,CAAAA,aAAd,CAA4BuB,KAA5B,EAAkCJ,MAAlC,EAA0CJ,IAAKK,CAAAA,GAA/C,CAArC;AAP+B,GAZyC,EAqBpEE,UAAI,CAACX,GAAD,EAAMkB,QAAN,CAAgB;AACxB,WAAgDC,CAAxC,MAAMnC,IAAKoC,CAAAA,QAASC,CAAAA,OAAQC,CAAAA,KAAtB,CAA4BtB,GAA5B,CAAkCmB,EAAAA,IAAzC,EAAP;AADwB,GArBgD,EAwB1EI,OAAQnC,MAAaA,CAAAA,YAAamC,CAAAA,MAxBwC,CAAVjC;AA0BlEN,MAAKwC,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBnC,OAApB,CAAA;AACAP,SAAQO,CAAAA,OAAR,GAAkBA,OAAlB;AA9BiI,CAAjI;;",
"sources":["node_modules/@pixi/assets/lib/loader/parsers/textures/loadSVG.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadSVG\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), checkDataUrl = require(\"../../../utils/checkDataUrl.js\"), checkExtension = require(\"../../../utils/checkExtension.js\"), LoaderParser = require(\"../LoaderParser.js\"), loadTextures = require(\"./loadTextures.js\"), createTexture = require(\"./utils/createTexture.js\");\nconst validSVGExtension = \".svg\", validSVGMIME = \"image/svg+xml\", loadSVG = {\n  extension: {\n    type: core.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.High\n  },\n  name: \"loadSVG\",\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validSVGMIME) || checkExtension.checkExtension(url, validSVGExtension);\n  },\n  async testParse(data) {\n    return core.SVGResource.test(data);\n  },\n  async parse(asset, data, loader) {\n    const src = new core.SVGResource(asset, data?.data?.resourceOptions);\n    await src.load();\n    const base = new core.BaseTexture(src, {\n      resolution: core.utils.getResolutionOfUrl(asset),\n      ...data?.data\n    });\n    return base.resource.src = data.src, createTexture.createTexture(base, loader, data.src);\n  },\n  async load(url, _options) {\n    return (await core.settings.ADAPTER.fetch(url)).text();\n  },\n  unload: loadTextures.loadTextures.unload\n};\ncore.extensions.add(loadSVG);\nexports.loadSVG = loadSVG;\n//# sourceMappingURL=loadSVG.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","checkDataUrl","checkExtension","LoaderParser","loadTextures","createTexture","loadSVG","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","High","name","test","url","validSVGMIME","validSVGExtension","testParse","data","SVGResource","parse","asset","loader","src","resourceOptions","load","base","BaseTexture","resolution","utils","getResolutionOfUrl","resource","_options","text","settings","ADAPTER","fetch","unload","extensions","add"]
}
