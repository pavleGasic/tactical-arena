{
"version":3,
"file":"module$node_modules$$pixi$sprite_tiling$lib$TilingSpriteRenderer.js",
"lineCount":57,
"mappings":"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",
"sources":["node_modules/@pixi/sprite-tiling/lib/TilingSpriteRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$sprite_tiling$lib$TilingSpriteRenderer\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), spriteTiling$1 = require(\"./sprite-tiling.frag.js\"), spriteTiling = require(\"./sprite-tiling.vert.js\"), spriteTilingFallback$1 = require(\"./sprite-tiling-fallback.frag.js\"), spriteTilingFallback = require(\"./sprite-tiling-fallback.vert.js\"), spriteTilingSimple = require(\"./sprite-tiling-simple.frag.js\");\nconst tempMat = new core.Matrix();\nclass TilingSpriteRenderer extends core.ObjectRenderer {\n  /**\n   * constructor for renderer\n   * @param {PIXI.Renderer} renderer - The renderer this tiling awesomeness works for.\n   */\n  constructor(renderer) {\n    super(renderer), renderer.runners.contextChange.add(this), this.quad = new core.QuadUv(), this.state = core.State.for2d();\n  }\n  /** Creates shaders when context is initialized. */\n  contextChange() {\n    const renderer = this.renderer, uniforms = { globals: renderer.globalUniforms };\n    this.simpleShader = core.Shader.from(spriteTilingFallback.default, spriteTilingSimple.default, uniforms), this.shader = renderer.context.webGLVersion > 1 ? core.Shader.from(spriteTiling.default, spriteTiling$1.default, uniforms) : core.Shader.from(spriteTilingFallback.default, spriteTilingFallback$1.default, uniforms);\n  }\n  /**\n   * @param {PIXI.TilingSprite} ts - tilingSprite to be rendered\n   */\n  render(ts) {\n    const renderer = this.renderer, quad = this.quad;\n    let vertices = quad.vertices;\n    vertices[0] = vertices[6] = ts._width * -ts.anchor.x, vertices[1] = vertices[3] = ts._height * -ts.anchor.y, vertices[2] = vertices[4] = ts._width * (1 - ts.anchor.x), vertices[5] = vertices[7] = ts._height * (1 - ts.anchor.y);\n    const anchorX = ts.uvRespectAnchor ? ts.anchor.x : 0, anchorY = ts.uvRespectAnchor ? ts.anchor.y : 0;\n    vertices = quad.uvs, vertices[0] = vertices[6] = -anchorX, vertices[1] = vertices[3] = -anchorY, vertices[2] = vertices[4] = 1 - anchorX, vertices[5] = vertices[7] = 1 - anchorY, quad.invalidate();\n    const tex = ts._texture, baseTex = tex.baseTexture, premultiplied = baseTex.alphaMode > 0, lt = ts.tileTransform.localTransform, uv = ts.uvMatrix;\n    let isSimple = baseTex.isPowerOfTwo && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\n    isSimple && (baseTex._glTextures[renderer.CONTEXT_UID] ? isSimple = baseTex.wrapMode !== core.WRAP_MODES.CLAMP : baseTex.wrapMode === core.WRAP_MODES.CLAMP && (baseTex.wrapMode = core.WRAP_MODES.REPEAT));\n    const shader = isSimple ? this.simpleShader : this.shader, w = tex.width, h = tex.height, W = ts._width, H = ts._height;\n    tempMat.set(\n      lt.a * w / W,\n      lt.b * w / H,\n      lt.c * h / W,\n      lt.d * h / H,\n      lt.tx / W,\n      lt.ty / H\n    ), tempMat.invert(), isSimple ? tempMat.prepend(uv.mapCoord) : (shader.uniforms.uMapCoord = uv.mapCoord.toArray(!0), shader.uniforms.uClampFrame = uv.uClampFrame, shader.uniforms.uClampOffset = uv.uClampOffset), shader.uniforms.uTransform = tempMat.toArray(!0), shader.uniforms.uColor = core.Color.shared.setValue(ts.tint).premultiply(ts.worldAlpha, premultiplied).toArray(shader.uniforms.uColor), shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(!0), shader.uniforms.uSampler = tex, renderer.shader.bind(shader), renderer.geometry.bind(quad), this.state.blendMode = core.utils.correctBlendMode(ts.blendMode, premultiplied), renderer.state.set(this.state), renderer.geometry.draw(this.renderer.gl.TRIANGLES, 6, 0);\n  }\n}\nTilingSpriteRenderer.extension = {\n  name: \"tilingSprite\",\n  type: core.ExtensionType.RendererPlugin\n};\ncore.extensions.add(TilingSpriteRenderer);\nexports.TilingSpriteRenderer = TilingSpriteRenderer;\n//# sourceMappingURL=TilingSpriteRenderer.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","spriteTiling$1","spriteTiling","spriteTilingFallback$1","spriteTilingFallback","spriteTilingSimple","tempMat","Matrix","TilingSpriteRenderer","ObjectRenderer","constructor","renderer","runners","contextChange","add","quad","QuadUv","state","State","for2d","uniforms","globals","globalUniforms","simpleShader","Shader","from","default","shader","context","webGLVersion","render","ts","vertices","_width","anchor","x","_height","y","anchorX","uvRespectAnchor","anchorY","uvs","invalidate","tex","_texture","baseTex","baseTexture","premultiplied","alphaMode","lt","tileTransform","localTransform","uv","uvMatrix","isSimple","isPowerOfTwo","frame","width","height","_glTextures","CONTEXT_UID","wrapMode","WRAP_MODES","CLAMP","REPEAT","w","h","W","H","set","a","b","c","d","tx","ty","invert","prepend","mapCoord","uMapCoord","toArray","uClampFrame","uClampOffset","uTransform","uColor","Color","shared","setValue","tint","premultiply","worldAlpha","translationMatrix","transform","worldTransform","uSampler","bind","geometry","blendMode","utils","correctBlendMode","draw","gl","TRIANGLES","extension","name","type","ExtensionType","RendererPlugin","extensions"]
}
