shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$particle_container$gl$GlParticleContainerAdaptor = function(global, require, module, exports) {
  class GlParticleContainerAdaptor {
    execute(particleContainerPipe, container) {
      const state = particleContainerPipe.state, renderer = particleContainerPipe.renderer, shader = container.shader || particleContainerPipe.defaultShader;
      shader.resources.uTexture = container.texture._source;
      shader.resources.uniforms = particleContainerPipe.localUniforms;
      const gl = renderer.gl;
      particleContainerPipe = particleContainerPipe.getBuffers(container);
      renderer.shader.bind(shader);
      renderer.state.set(state);
      renderer.geometry.bind(particleContainerPipe.geometry, shader.glProgram);
      gl.drawElements(gl.TRIANGLES, 6 * container.particleChildren.length, 2 === particleContainerPipe.geometry.indexBuffer.data.BYTES_PER_ELEMENT ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT, 0);
    }
  }
  exports.GlParticleContainerAdaptor = GlParticleContainerAdaptor;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$particle_container$gl$GlParticleContainerAdaptor.js.map
