{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$getGeometryBounds.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAA,+FAAA,GAAoH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAwC5JA,SAAQC,CAAAA,iBAAR,GApCAA,QAA0B,CAACC,QAAD,EAAWC,WAAX,EAAwBC,MAAxB,CAAgC;AACxD,QAAMC,YAAYH,QAASI,CAAAA,YAAT,CAAsBH,WAAtB,CAAlB;AACA,QAAI,CAACE,SAAL;AAKE,aAJAD,MAAOG,CAAAA,IAIAH,GAJO,CAIPA,EAHPA,MAAOI,CAAAA,IAGAJ,GAHO,CAGPA,EAFPA,MAAOK,CAAAA,IAEAL,GAFO,CAEPA,EADPA,MAAOM,CAAAA,IACAN,GADO,CACPA,EAAAA,MAAP;AALF;AAOMO,YAAAA,GAAON,SAAUO,CAAAA,MAAOD,CAAAA,IAAxBA;AAEN,QAAIH,OADAD,WACAC,GADOK,QACX,EACIJ,OAAO,CAACI,QADZ,EAEIH,OAAO,CAACG,QAFZ;AAGA,QAAMC,WAAWH,QAAKI,CAAAA,iBAAtB,EACMC,UAAUX,SAAUW,CAAAA,MAApBA,IAA8B,CAA9BA,IAAmCF,QADzC;AAGA,SADMG,SACN,IADgBZ,SAAUY,CAAAA,MAC1B,IADoC,CACpC,IAD6CH,QAC7C,EAAqBI,MAArB,GAAyBP,QAAKQ,CAAAA,MAA9B,EAAsCD,MAAtC,IAA2CD,SAA3C,CAAmD;AAC3CG,cAAAA,GAAIT,QAAA,CAAKO,MAAL,CAAJE;AACN,YAAMC,IAAIV,QAAA,CAAKO,MAAL,GAAS,CAAT,CAAV;AACIE,cAAJ,GAAQX,IAAR,KACEA,IADF,GACSW,QADT;AAEIC,OAAJ,GAAQX,IAAR,KACEA,IADF,GACSW,CADT;AAEID,cAAJ,GAAQb,WAAR,KACEA,WADF,GACSa,QADT;AAEIC,OAAJ,GAAQb,IAAR,KACEA,IADF,GACSa,CADT;AATiD;AAYnDjB,UAAOG,CAAAA,IAAP,GAAcA,WAAd;AACAH,UAAOI,CAAAA,IAAP,GAAcA,IAAd;AACAJ,UAAOK,CAAAA,IAAP,GAAcA,IAAd;AACAL,UAAOM,CAAAA,IAAP,GAAcA,IAAd;AACA,WAAON,MAAP;AAjCwD,GAoC1D;AAxC4J,CAA5J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/geometry/utils/getGeometryBounds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$getGeometryBounds\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction getGeometryBounds(geometry, attributeId, bounds) {\n  const attribute = geometry.getAttribute(attributeId);\n  if (!attribute) {\n    bounds.minX = 0;\n    bounds.minY = 0;\n    bounds.maxX = 0;\n    bounds.maxY = 0;\n    return bounds;\n  }\n  const data = attribute.buffer.data;\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  const byteSize = data.BYTES_PER_ELEMENT;\n  const offset = (attribute.offset || 0) / byteSize;\n  const stride = (attribute.stride || 2 * 4) / byteSize;\n  for (let i = offset; i < data.length; i += stride) {\n    const x = data[i];\n    const y = data[i + 1];\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n  }\n  bounds.minX = minX;\n  bounds.minY = minY;\n  bounds.maxX = maxX;\n  bounds.maxY = maxY;\n  return bounds;\n}\n\nexports.getGeometryBounds = getGeometryBounds;\n//# sourceMappingURL=getGeometryBounds.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","getGeometryBounds","geometry","attributeId","bounds","attribute","getAttribute","minX","minY","maxX","maxY","data","buffer","Infinity","byteSize","BYTES_PER_ELEMENT","offset","stride","i","length","x","y"]
}
