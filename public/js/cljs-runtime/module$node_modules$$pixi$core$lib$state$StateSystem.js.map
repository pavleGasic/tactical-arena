{
"version":3,
"file":"module$node_modules$$pixi$core$lib$state$StateSystem.js",
"lineCount":111,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/state/StateSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$state$StateSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), extensions = require(\"@pixi/extensions\"), State = require(\"./State.js\"), mapWebGLBlendModesToPixi = require(\"./utils/mapWebGLBlendModesToPixi.js\");\nconst BLEND = 0, OFFSET = 1, CULLING = 2, DEPTH_TEST = 3, WINDING = 4, DEPTH_MASK = 5, _StateSystem = class _StateSystem2 {\n  constructor() {\n    this.gl = null, this.stateId = 0, this.polygonOffset = 0, this.blendMode = constants.BLEND_MODES.NONE, this._blendEq = !1, this.map = [], this.map[BLEND] = this.setBlend, this.map[OFFSET] = this.setOffset, this.map[CULLING] = this.setCullFace, this.map[DEPTH_TEST] = this.setDepthTest, this.map[WINDING] = this.setFrontFace, this.map[DEPTH_MASK] = this.setDepthMask, this.checks = [], this.defaultState = new State.State(), this.defaultState.blend = !0;\n  }\n  contextChange(gl) {\n    this.gl = gl, this.blendModes = mapWebGLBlendModesToPixi.mapWebGLBlendModesToPixi(gl), this.set(this.defaultState), this.reset();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    if (state = state || this.defaultState, this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data, i = 0;\n      for (; diff; )\n        diff & 1 && this.map[i].call(this, !!(state.data & 1 << i)), diff = diff >> 1, i++;\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++)\n      this.checks[i](this, state);\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state = state || this.defaultState;\n    for (let i = 0; i < this.map.length; i++)\n      this.map[i].call(this, !!(state.data & 1 << i));\n    for (let i = 0; i < this.checks.length; i++)\n      this.checks[i](this, state);\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this.updateCheck(_StateSystem2.checkBlendMode, value), this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this.updateCheck(_StateSystem2.checkPolygonOffset, value), this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this.gl.frontFace(this.gl[value ? \"CW\" : \"CCW\"]);\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (value === this.blendMode)\n      return;\n    this.blendMode = value;\n    const mode = this.blendModes[value], gl = this.gl;\n    mode.length === 2 ? gl.blendFunc(mode[0], mode[1]) : gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]), mode.length === 6 ? (this._blendEq = !0, gl.blendEquationSeparate(mode[4], mode[5])) : this._blendEq && (this._blendEq = !1, gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD));\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  // used\n  /** Resets all the logic and disables the VAOs. */\n  reset() {\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, !1), this.forceState(this.defaultState), this._blendEq = !0, this.blendMode = -1, this.setBlendMode(0);\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    value && index === -1 ? this.checks.push(func) : !value && index !== -1 && this.checks.splice(index, 1);\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this.gl = null;\n  }\n};\n_StateSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"state\"\n};\nlet StateSystem = _StateSystem;\nextensions.extensions.add(StateSystem);\nexports.StateSystem = StateSystem;\n//# sourceMappingURL=StateSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","extensions","State","mapWebGLBlendModesToPixi","_StateSystem","constructor","gl","polygonOffset","stateId","blendMode","BLEND_MODES","NONE","_blendEq","map","BLEND","setBlend","OFFSET","setOffset","CULLING","setCullFace","DEPTH_TEST","setDepthTest","WINDING","setFrontFace","DEPTH_MASK","setDepthMask","checks","defaultState","blend","contextChange","blendModes","set","reset","state","data","diff","i","call","length","forceState","value","updateCheck","_StateSystem2","checkBlendMode","checkPolygonOffset","POLYGON_OFFSET_FILL","depthMask","CULL_FACE","frontFace","setBlendMode","mode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","index","indexOf","push","splice","system","destroy","extension","type","ExtensionType","RendererSystem","name","add","StateSystem"]
}
