{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$autoDetectRenderer.js",
"lineCount":41,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,GAA+F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvI,MAAIC,mBAAmBH,OAAA,CAAQ,oEAAR,CAAvB,EACII,oBAAoBJ,OAAA,CAAQ,qEAAR,CADxB,EAEIK,mBAAmBL,OAAA,CAAQ,wFAAR,CAFvB;AAIA,cAAA;AACA,QAAMM,iBAAiB,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAvB;AA4CAJ,SAAQK,CAAAA,kBAAR,GA3CAA,cAAiC,CAACC,OAAD,CAAU;AACzC,QAAIC,iBAAiB,EAArB;AACID,WAAQE,CAAAA,UAAZ,IACED,cAAeE,CAAAA,IAAf,CAAoBH,OAAQE,CAAAA,UAA5B,CACA,EAAAJ,cAAeM,CAAAA,OAAf,CAAwBC,IAAD,IAAU;AAC3BA,UAAJ,KAAaL,OAAQE,CAAAA,UAArB,IACED,cAAeE,CAAAA,IAAf,CAAoBE,IAApB,CADF;AAD+B,KAAjC,CAFF,IAQEJ,cARF,GAQmBH,cAAeQ,CAAAA,KAAf,EARnB;AAUA,QACIC,eAAe,EADnB;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBP,cAAeQ,CAAAA,MAAnC,EAA2CD,CAAA,EAA3C,CAAgD;AAC9C,YAAME,eAAeT,cAAA,CAAeO,CAAf,CAArB;AACA,UAAqB,QAArB,KAAIE,YAAJ,IAAiC,MAAMd,iBAAkBA,CAAAA,iBAAlB,EAAvC,CAA8E;AAC5E,SAAM,CAAE,eAAAe,YAAF,CAAN,GAA2B,MAAMC,OAAQC,CAAAA,OAAR,EAAkBC,CAAAA,IAAlB,CAAuB,QAAS,EAAG;AAAE,iBAAOtB,OAAA,CAAQ,4EAAR,CAAP;AAAF,SAAnC,CAAjC;AACA,YAAAuB,gBAAgBJ,YAAhB;AACAJ,oBAAA,GAAe,CAAE,GAAGP,OAAL,EAAc,GAAGA,OAAQgB,CAAAA,MAAzB,CAAf;AACA;AAJ4E,OAA9E,KAKO,KAAqB,OAArB,KAAIN,YAAJ,IAAgCf,gBAAiBA,CAAAA,gBAAjB,CACrCK,OAAQiB,CAAAA,4BAD6B,IACGpB,gBAAiBA,CAAAA,gBAAiBqB,CAAAA,cAAeD,CAAAA,4BADpD,CAAhC,CAEJ;AACD,SAAM,CAAE,cAAAE,YAAF,CAAN,GAA0B,MAAMP,OAAQC,CAAAA,OAAR,EAAkBC,CAAAA,IAAlB,CAAuB,QAAS,EAAG;AAAE,iBAAOtB,OAAA,CAAQ,0EAAR,CAAP;AAAF,SAAnC,CAAhC;AACAuB,qBAAA,GAAgBI,YAAhB;AACAZ,oBAAA,GAAe,CAAE,GAAGP,OAAL,EAAc,GAAGA,OAAQoB,CAAAA,KAAzB,CAAf;AACA;AAJC,OAFI,KAOA,KAAqB,QAArB,KAAIV,YAAJ;AAEL,cADAH,YACM,GADS,CAAE,GAAGP,OAAL,CACT,EAAIqB,KAAJ,CAAU,uCAAV,CAAN;AAFK;AAduC;AAmBhD,WAAOd,YAAaS,CAAAA,MAApB;AACA,WAAOT,YAAaa,CAAAA,KAApB;AACA,QAAI,CAACL,aAAL;AACE,YAAUM,KAAJ,CAAU,mDAAV,CAAN;AADF;AAGMC,iBAAAA,GAAW,IAAIP,aAAJ,EAAXO;AACN,UAAMA,aAASC,CAAAA,IAAT,CAAchB,YAAd,CAAN;AACA,WAAOe,aAAP;AAxCyC,GA2C3C;AApDuI,CAAvI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/autoDetectRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$autoDetectRenderer\"] = function(global,require,module,exports) {\n'use strict';\n\nvar isWebGLSupported = require('../../utils/browser/isWebGLSupported.js');\nvar isWebGPUSupported = require('../../utils/browser/isWebGPUSupported.js');\nvar AbstractRenderer = require('./shared/system/AbstractRenderer.js');\n\n\"use strict\";\nconst renderPriority = [\"webgl\", \"webgpu\", \"canvas\"];\nasync function autoDetectRenderer(options) {\n  let preferredOrder = [];\n  if (options.preference) {\n    preferredOrder.push(options.preference);\n    renderPriority.forEach((item) => {\n      if (item !== options.preference) {\n        preferredOrder.push(item);\n      }\n    });\n  } else {\n    preferredOrder = renderPriority.slice();\n  }\n  let RendererClass;\n  let finalOptions = {};\n  for (let i = 0; i < preferredOrder.length; i++) {\n    const rendererType = preferredOrder[i];\n    if (rendererType === \"webgpu\" && await isWebGPUSupported.isWebGPUSupported()) {\n      const { WebGPURenderer } = await Promise.resolve().then(function () { return require('./gpu/WebGPURenderer.js'); });\n      RendererClass = WebGPURenderer;\n      finalOptions = { ...options, ...options.webgpu };\n      break;\n    } else if (rendererType === \"webgl\" && isWebGLSupported.isWebGLSupported(\n      options.failIfMajorPerformanceCaveat ?? AbstractRenderer.AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat\n    )) {\n      const { WebGLRenderer } = await Promise.resolve().then(function () { return require('./gl/WebGLRenderer.js'); });\n      RendererClass = WebGLRenderer;\n      finalOptions = { ...options, ...options.webgl };\n      break;\n    } else if (rendererType === \"canvas\") {\n      finalOptions = { ...options };\n      throw new Error(\"CanvasRenderer is not yet implemented\");\n    }\n  }\n  delete finalOptions.webgpu;\n  delete finalOptions.webgl;\n  if (!RendererClass) {\n    throw new Error(\"No available renderer for the current environment\");\n  }\n  const renderer = new RendererClass();\n  await renderer.init(finalOptions);\n  return renderer;\n}\n\nexports.autoDetectRenderer = autoDetectRenderer;\n//# sourceMappingURL=autoDetectRenderer.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","isWebGLSupported","isWebGPUSupported","AbstractRenderer","renderPriority","autoDetectRenderer","options","preferredOrder","preference","push","forEach","item","slice","finalOptions","i","length","rendererType","WebGPURenderer","Promise","resolve","then","RendererClass","webgpu","failIfMajorPerformanceCaveat","defaultOptions","WebGLRenderer","webgl","Error","renderer","init"]
}
