shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$buffer$GpuReadBuffer = function(global, require, module, exports) {
  var Buffer = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$buffer$Buffer"), _const = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$buffer$const");
  "use strict";
  exports.GpuReadBuffer = function(buffer, renderer) {
    const bufferSize = buffer.descriptor.size, device = renderer.gpu.device;
    var stagingBuffer = new Buffer.Buffer({data:new Float32Array(24e5), usage:_const.BufferUsage.MAP_READ | _const.BufferUsage.COPY_DST});
    const stagingGPUBuffer = renderer.buffer.createGPUBuffer(stagingBuffer);
    stagingBuffer = device.createCommandEncoder();
    stagingBuffer.copyBufferToBuffer(renderer.buffer.getGPUBuffer(buffer), 0, stagingGPUBuffer, 0, bufferSize);
    device.queue.submit([stagingBuffer.finish()]);
    stagingGPUBuffer.mapAsync(GPUMapMode.READ, 0, bufferSize).then(() => {
      stagingGPUBuffer.getMappedRange(0, bufferSize);
      stagingGPUBuffer.unmap();
    });
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$buffer$GpuReadBuffer.js.map
