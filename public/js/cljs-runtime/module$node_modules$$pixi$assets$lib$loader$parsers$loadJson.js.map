{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$loader$parsers$loadJson.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,GAAiF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAErHC,OAAOH,OAAA,CAAQ,0CAAR,CAF8G,EAEvFI,eAAeJ,OAAA,CAAQ,yDAAR,CAFwE,EAEhCK,iBAAiBL,OAAA,CAAQ,2DAAR,CAFe;AAE2BM,QAAAA,GAAeN,OAAA,CAAQ,kEAAR,CAAfM;AAC5EC,QAAAA,GAAW,CACjFC,UAAW,CACTC,KAAMN,IAAKO,CAAAA,aAAcC,CAAAA,UADhB,EAETC,SAAUN,MAAaO,CAAAA,oBAAqBC,CAAAA,GAFnC,CADsE,EAKjFC,KAAM,UAL2E,EAMjFC,IAAI,CAACC,GAAD,CAAM;AACR,WAAOb,YAAaA,CAAAA,YAAb,CAA0Ba,GAA1B,EAPyCC,kBAOzC,CAAP,IAAwDb,cAAeA,CAAAA,cAAf,CAA8BY,GAA9B,EAPjCE,OAOiC,CAAxD;AADQ,GANuE,EAS3EC,UAAI,CAACH,GAAD,CAAM;AACd,WAAO,MAA+CI,CAAxC,MAAMlB,IAAKmB,CAAAA,QAASC,CAAAA,OAAQC,CAAAA,KAAtB,CAA4BP,GAA5B,CAAkCI,EAAAA,IAAzC,EAAb;AADc,GATiE,CAAXd;AAaxEJ,MAAKsB,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBnB,MAApB,CAAA;AACAL,SAAQK,CAAAA,QAAR,GAAmBA,MAAnB;AAjByH,CAAzH;;",
"sources":["node_modules/@pixi/assets/lib/loader/parsers/loadJson.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$loader$parsers$loadJson\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), checkDataUrl = require(\"../../utils/checkDataUrl.js\"), checkExtension = require(\"../../utils/checkExtension.js\"), LoaderParser = require(\"./LoaderParser.js\");\nconst validJSONExtension = \".json\", validJSONMIME = \"application/json\", loadJson = {\n  extension: {\n    type: core.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.Low\n  },\n  name: \"loadJson\",\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validJSONMIME) || checkExtension.checkExtension(url, validJSONExtension);\n  },\n  async load(url) {\n    return await (await core.settings.ADAPTER.fetch(url)).json();\n  }\n};\ncore.extensions.add(loadJson);\nexports.loadJson = loadJson;\n//# sourceMappingURL=loadJson.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","checkDataUrl","checkExtension","LoaderParser","loadJson","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","Low","name","test","url","validJSONMIME","validJSONExtension","load","json","settings","ADAPTER","fetch","extensions","add"]
}
