{
"version":3,
"file":"module$node_modules$$pixi$graphics$lib$utils$buildCircle.js",
"lineCount":94,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,GAA6E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAErH,MAAIC,OAAOH,OAAA,CAAQ,0CAAR,CAAX;AAmEAE,SAAQE,CAAAA,WAAR,GAlEoBA,CAClBC,KAAK,CAACC,YAAD,CAAe;AAClB,UAAMC,SAASD,YAAaC,CAAAA,MAA5B;AADkB,QAEJC,EAFI,EAEIC,EAFJ;AAGlB,QAAIH,YAAaI,CAAAA,IAAjB,KAA0BP,IAAKQ,CAAAA,MAAOC,CAAAA,IAAtC,CAA4C;AACpCC,UAAAA,KAASP,YAAaQ,CAAAA,KAAtBD;AACN,UAAAE,IAAIF,EAAOE,CAAAA,CAAX;AAAcC,kBAAA,GAAIH,EAAOG,CAAAA,CAAX;AAAc,UAAAC,KAAKR,EAALQ,GAAUJ,EAAOK,CAAAA,MAAjB;AAAyBC,QAAA,GAAKX,EAAL,GAAU,CAAV;AAFX,KAA5C,KAGO,KAAIF,YAAaI,CAAAA,IAAjB,KAA0BP,IAAKQ,CAAAA,MAAOS,CAAAA,IAAtC;AACCC,QACiE,GADvDf,YAAaQ,CAAAA,KAC0C,EAAvEC,CAAuE,GAAnEM,EAAQN,CAAAA,CAA2D,EAAxDC,YAAwD,GAApDK,EAAQL,CAAAA,CAA4C,EAAzCC,EAAyC,GAApCI,EAAQC,CAAAA,KAA4B,EAArBb,EAAqB,GAAhBY,EAAQE,CAAAA,MAAQ,EAAAJ,EAAA,GAAKX,EAAL,GAAU,CAAV;AAFlE,UAGA;AAAA,UACCgB,cAAclB,YAAaQ,CAAAA,KAD5B;AACmCW,QAAAA,GAAYD,WAAYF,CAAAA,KAAxBG,GAAgC,CAAhCA;AAAxC,UAA2EC,aAAaF,WAAYD,CAAAA,MAAzBG,GAAkC,CAA7G;AACAX,OAAA,GAAIS,WAAYT,CAAAA,CAAhB,GAAoBU,EAApB;AAA+BT,kBAAA,GAAIQ,WAAYR,CAAAA,CAAhB,GAAoBU,UAApB;AAAgCT,QAAA,GAAKR,EAAL,GAAUkB,IAAKC,CAAAA,GAAL,CAAS,CAAT,EAAYD,IAAKE,CAAAA,GAAL,CAASL,WAAYN,CAAAA,MAArB,EAA6BS,IAAKE,CAAAA,GAAL,CAASJ,EAAT,EAAoBC,UAApB,CAA7B,CAAZ,CAAV;AAA2FD,QAAL,IAAiBR,EAAjB;AAAqBT,QAAA,GAAKkB,UAAL,GAAkBjB,EAAlB;AAFrK;AAIP,QAAY,CAAZ,IAAMQ,EAAN,IAAuB,CAAvB,IAAiBR,EAAjB,IAAkC,CAAlC,IAA4BU,EAA5B,IAA6C,CAA7C,IAAuCX,EAAvC,CAAA;AAbkB,UAiBZsB,IAAIH,IAAKI,CAAAA,IAAL,CAAU,GAAV,GAAgBJ,IAAKK,CAAAA,IAAL,CAAUf,EAAV,GAAeR,EAAf,CAAhB,CAjBQ;AAiB6BwB,iBAAAA,GAAQ,CAARA,GAAIH,CAAJG,IAAad,EAAA,GAAK,CAAL,GAAS,CAAtBc,KAA4BzB,EAAA,GAAK,CAAL,GAAS,CAArCyB;AAC/C,UAAI1B,MAAO2B,CAAAA,MAAP,GAAgBD,WAAhB,EAAyB,CAAzB,KAAmBA,WAAvB;AAEA,YAAU,CAAV,KAAIH,CAAJ;AACEvB,gBAAO2B,CAAAA,MAA4G,GAAnG,CAAmG,EAAhG3B,MAAA,CAAO,CAAP,CAAgG,GAApFA,MAAA,CAAO,CAAP,CAAoF,GAAxEQ,CAAwE,GAApEI,EAAoE,EAAhEZ,MAAA,CAAO,CAAP,CAAgE,GAApDA,MAAA,CAAO,CAAP,CAAoD,GAAxCS,YAAwC,GAApCR,EAAoC,EAAhCD,MAAA,CAAO,CAAP,CAAgC,GAApBA,MAAA,CAAO,CAAP,CAAoB,GAARQ,CAAQ,GAAJI,EAAI,EAAAZ,MAAA,CAAO,CAAP,CAAA,GAAYA,MAAA,CAAO,CAAP,CAAZ,GAAwBS,YAAxB,GAA4BR,EAA5B;AADrH,cAAA;AAII2B,oBAAAA,GAAK,CAALA;AAxBc,cAwBNC,KAAS,CAATA,GAAKN,CAALM,IAAcjB,EAAA,GAAK,CAAL,GAAS,CAAvBiB,IAA4B,CAxBtB,EAwByBC,KAAKD,EAxB9B,EA0BVE,KAAKnB,EAALmB,GAAUrB,EA1BA,EA0BIsB,KAAK/B,EA1BT,EA0BagC,KAAKzB,CAALyB,GAASF,EA1BtB;AA0B0BG,YAAAA,GAAK1B,CAAL0B,GAASH,EAATG;AAA1C,cAAuDC,cAAK1B,YAAL0B,GAASH,EAAhE;AACA,cAAIhC,MAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeK,EAAf,EAAmBjC,MAAA,CAAO4B,UAAA,EAAP,CAAnB,GAAkCO,WAAlC,EAAsCnC,MAAA,CAAO,EAAE6B,EAAT,CAAtC,GAAqDM,WAArD,EAAyDnC,MAAA,CAAO,EAAE6B,EAAT,CAAzD,GAAwEK,EAAxE,EAA4EjC,EAAhF;AACQmC,cACmD,GAD9C3B,YAC8C,GAD1CuB,EAC0C,EAAzDhC,MAAA,CAAO8B,EAAA,EAAP,CAAyD,GAA1CI,EAA0C,EAAtClC,MAAA,CAAO8B,EAAA,EAAP,CAAsC,GAAvBM,EAAuB,EAAnBpC,MAAA,CAAO,EAAEqC,WAAT,CAAmB,GAAJD,EAAI,EAAApC,MAAA,CAAO,EAAEqC,WAAT,CAAA,GAAeJ,EAAf;AAF3D;AAKF,eAASK,EAAT,GAAa,CAAb,EAAgBA,EAAhB,GAAoBf,CAApB,EAAuBe,EAAA,EAAvB,CAA4B;AACpBC,cAAAA,GAAInB,IAAKoB,CAAAA,EAATD,GAAc,CAAdA,IAAmBD,EAAnBC,GAAuBhB,CAAvBgB;AAA2BR,uBAAAA,GAAKnB,EAALmB,GAAUX,IAAKqB,CAAAA,GAAL,CAASF,EAAT,CAAVR,GAAwBrB,EAAxBqB;AAA4BC,cAAAA,GAAK/B,EAAL+B,GAAUZ,IAAKsB,CAAAA,GAAL,CAASH,EAAT,CAAVP,GAAwB9B,EAAxB8B;AAA4BC,cAAAA,GAAKzB,CAALyB,GAASF,WAATE;AAAaC,uBAAAA,GAAK1B,CAAL0B,GAASH,WAATG;AAD5E,kBACyFC,KAAK1B,YAAL0B,GAASH,EADlG;AACsGI,cAAAA,GAAK3B,YAAL2B,GAASJ,EAATI;AAChIpC,kBAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeK,EAAf;AAAmBjC,kBAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeO,EAAf;AAAmBnC,kBAAA,CAAO,EAAE6B,EAAT,CAAA,GAAeM,EAAf;AAAmBnC,kBAAA,CAAO,EAAE6B,EAAT,CAAA,GAAeK,WAAf;AAAmBlC,kBAAA,CAAO8B,EAAA,EAAP,CAAA,GAAeI,WAAf;AAAmBlC,kBAAA,CAAO8B,EAAA,EAAP,CAAA,GAAeM,EAAf;AAAmBpC,kBAAA,CAAO,EAAEqC,WAAT,CAAA,GAAeD,EAAf;AAAmBpC,kBAAA,CAAO,EAAEqC,WAAT,CAAA,GAAeJ,EAAf;AAF3G;AAKpBF,WAAAA,GAAKnB,EAALmB;AAASC,YAAAA,GAAK/B,EAAL+B,GAAU9B,EAAV8B;AAAcC,YAAAA,GAAKzB,CAALyB,GAASF,CAATE;AAAkBzB,WAAL0B,IAASH,CAATG;AAAaC,YAAAA,GAAK1B,YAAL0B,GAASH,EAATG;AAAkB1B,sBAAL2B,IAASJ,EAATI;AACpEpC,gBAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeK,EAAf;AAAmBjC,gBAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeO,EAAf;AAAmBnC,gBAAA,CAAO,EAAEqC,WAAT,CAAA,GAAeD,YAAf;AAAmBpC,gBAAA,CAAO,EAAEqC,WAAT,CAAA,GAAeJ,EAAf;AAAmBrB,YAAA,KAAOZ,MAAA,CAAO4B,UAAA,EAAP,CAAA,GAAeM,CAAf,EAAmBlC,MAAA,CAAO4B,UAAA,EAAP,CAAnB,GAAkCO,EAAlC,EAAsCnC,MAAA,CAAO,EAAEqC,WAAT,CAAtC,GAAqDD,YAArD,EAAyDpC,MAAA,CAAO,EAAEqC,WAAT,CAAzD,GAAwEH,CAA/E;AAlB9E;AAFA;AALA,KAAA;AACElC,YAAO2B,CAAAA,MAAP,GAAgB,CAAhB;AADF;AAbkB,GADF9B,EA0ClB8C,WAAW,CAAC5C,YAAD,EAAe6C,gBAAf,CAAiC;AAAA,UACpC5C,SAASD,YAAaC,CAAAA,MADc,EACN6C,QAAQD,gBAAiB5C,CAAAA,MADnB;AAC2B8C,oBAAAA,GAAUF,gBAAiBE,CAAAA,OAA3BA;AACrE,QAAsB,CAAtB,KAAI9C,MAAO2B,CAAAA,MAAX,CAAA;AAEA,UAAIoB,UAAUF,KAAMlB,CAAAA,MAAhBoB,GAAyB,CAA7B,EACMC,SAASD,OADf;AAGA,UAAIhD,YAAaI,CAAAA,IAAjB,KAA0BP,IAAKQ,CAAAA,MAAO6C,CAAAA,IAAtC,CAA4C;AACpC3C,YAAAA,IAASP,YAAaQ,CAAAA,KAAtBD;AACN,YAAAE,IAAIF,CAAOE,CAAAA,CAAX;AAAcC,SAAA,GAAIH,CAAOG,CAAAA,CAAX;AAF4B,OAA5C;AAIQQ,SACqC,GADvBlB,YAAaQ,CAAAA,KACU,EAA3CC,CAA2C,GAAvCS,CAAYT,CAAAA,CAA2B,GAAvBS,CAAYF,CAAAA,KAAW,GAAH,CAAG,EAAAN,CAAA,GAAIQ,CAAYR,CAAAA,CAAhB,GAAoBQ,CAAYD,CAAAA,MAAhC,GAAyC,CAAzC;AAL7C;AAOA,UAAMkC,SAASnD,YAAamD,CAAAA,MAA5B;AACAL,WAAMM,CAAAA,IAAN,CACEpD,YAAamD,CAAAA,MAAb,GAAsBA,MAAOX,CAAAA,CAA7B,GAAiC/B,CAAjC,GAAqC0C,MAAOE,CAAAA,CAA5C,GAAgD3C,CAAhD,GAAoDyC,MAAOG,CAAAA,EAA3D,GAAgE7C,CADlE,EAEET,YAAamD,CAAAA,MAAb,GAAsBA,MAAOI,CAAAA,CAA7B,GAAiC9C,CAAjC,GAAqC0C,MAAOK,CAAAA,CAA5C,GAAgD9C,CAAhD,GAAoDyC,MAAOM,CAAAA,EAA3D,GAAgE/C,CAFlE,CAAA;AAGGsC,aAAA,EAAA;AAAWF,WAAMM,CAAAA,IAAN,CAAWnD,MAAA,CAAO,CAAP,CAAX,EAAsBA,MAAA,CAAO,CAAP,CAAtB,CAAA;AACd,WAASsC,YAAT,GAAa,CAAb,EAAgBA,YAAhB,GAAoBtC,MAAO2B,CAAAA,MAA3B,EAAmCW,YAAnC,IAAwC,CAAxC;AACEO,aAAMM,CAAAA,IAAN,CAAWnD,MAAA,CAAOsC,YAAP,CAAX,EAAsBtC,MAAA,CAAOsC,YAAP,GAAW,CAAX,CAAtB,CAAsC,EAAAQ,gBAAQK,CAAAA,IAAR,CAAaJ,OAAA,EAAb,EAAwBC,MAAxB,EAAgCD,OAAhC,CAAA;AADxC;AAEAD,sBAAQK,CAAAA,IAAR,CAAaH,MAAb,GAAsB,CAAtB,EAAyBA,MAAzB,EAAiCD,OAAjC,CAAA;AAnBA;AAF0C,GA1C1BlD,CAkEpB;AArEqH,CAArH;;",
"sources":["node_modules/@pixi/graphics/lib/utils/buildCircle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$graphics$lib$utils$buildCircle\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nconst buildCircle = {\n  build(graphicsData) {\n    const points = graphicsData.points;\n    let x, y, dx, dy, rx, ry;\n    if (graphicsData.type === core.SHAPES.CIRC) {\n      const circle = graphicsData.shape;\n      x = circle.x, y = circle.y, rx = ry = circle.radius, dx = dy = 0;\n    } else if (graphicsData.type === core.SHAPES.ELIP) {\n      const ellipse = graphicsData.shape;\n      x = ellipse.x, y = ellipse.y, rx = ellipse.width, ry = ellipse.height, dx = dy = 0;\n    } else {\n      const roundedRect = graphicsData.shape, halfWidth = roundedRect.width / 2, halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth, y = roundedRect.y + halfHeight, rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight))), dx = halfWidth - rx, dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      points.length = 0;\n      return;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry)), m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (points.length = m, m === 0)\n      return;\n    if (n === 0) {\n      points.length = 8, points[0] = points[6] = x + dx, points[1] = points[3] = y + dy, points[2] = points[4] = x - dx, points[5] = points[7] = y - dy;\n      return;\n    }\n    let j1 = 0, j2 = n * 4 + (dx ? 2 : 0) + 2, j3 = j2, j4 = m;\n    {\n      const x0 = dx + rx, y0 = dy, x1 = x + x0, x2 = x - x0, y1 = y + y0;\n      if (points[j1++] = x1, points[j1++] = y1, points[--j2] = y1, points[--j2] = x2, dy) {\n        const y2 = y - y0;\n        points[j3++] = x2, points[j3++] = y2, points[--j4] = y2, points[--j4] = x1;\n      }\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n), x0 = dx + Math.cos(a) * rx, y0 = dy + Math.sin(a) * ry, x1 = x + x0, x2 = x - x0, y1 = y + y0, y2 = y - y0;\n      points[j1++] = x1, points[j1++] = y1, points[--j2] = y1, points[--j2] = x2, points[j3++] = x2, points[j3++] = y2, points[--j4] = y2, points[--j4] = x1;\n    }\n    {\n      const x0 = dx, y0 = dy + ry, x1 = x + x0, x2 = x - x0, y1 = y + y0, y2 = y - y0;\n      points[j1++] = x1, points[j1++] = y1, points[--j4] = y2, points[--j4] = x1, dx && (points[j1++] = x2, points[j1++] = y1, points[--j4] = y2, points[--j4] = x2);\n    }\n  },\n  triangulate(graphicsData, graphicsGeometry) {\n    const points = graphicsData.points, verts = graphicsGeometry.points, indices = graphicsGeometry.indices;\n    if (points.length === 0)\n      return;\n    let vertPos = verts.length / 2;\n    const center = vertPos;\n    let x, y;\n    if (graphicsData.type !== core.SHAPES.RREC) {\n      const circle = graphicsData.shape;\n      x = circle.x, y = circle.y;\n    } else {\n      const roundedRect = graphicsData.shape;\n      x = roundedRect.x + roundedRect.width / 2, y = roundedRect.y + roundedRect.height / 2;\n    }\n    const matrix = graphicsData.matrix;\n    verts.push(\n      graphicsData.matrix ? matrix.a * x + matrix.c * y + matrix.tx : x,\n      graphicsData.matrix ? matrix.b * x + matrix.d * y + matrix.ty : y\n    ), vertPos++, verts.push(points[0], points[1]);\n    for (let i = 2; i < points.length; i += 2)\n      verts.push(points[i], points[i + 1]), indices.push(vertPos++, center, vertPos);\n    indices.push(center + 1, center, vertPos);\n  }\n};\nexports.buildCircle = buildCircle;\n//# sourceMappingURL=buildCircle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","buildCircle","build","graphicsData","points","dy","ry","type","SHAPES","CIRC","circle","shape","x","y","rx","radius","dx","ELIP","ellipse","width","height","roundedRect","halfWidth","halfHeight","Math","max","min","n","ceil","sqrt","m","length","j1","j2","j3","x0","y0","x1","x2","y1","y2","j4","i","a","PI","cos","sin","triangulate","graphicsGeometry","verts","indices","vertPos","center","RREC","matrix","push","c","tx","b","d","ty"]
}
