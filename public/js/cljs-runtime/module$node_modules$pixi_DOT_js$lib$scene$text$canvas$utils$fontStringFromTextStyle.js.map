{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text$canvas$utils$fontStringFromTextStyle.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,GAAwG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAIhJ,QAAMC,sBAAsB,sDAAA,CAAA,KAAA,CAAA,GAAA,CAA5B;AAwBAD,SAAQE,CAAAA,uBAAR,GAhBAA,QAAgC,CAACC,KAAD,CAAQ;AACtC,UAAMC,iBAA2C,QAA1B,KAAA,MAAOD,MAAME,CAAAA,QAAb,GAAsC,GAAEF,KAAME,CAAAA,QAAR,IAAtC,GAA6DF,KAAME,CAAAA,QAA1F;AACA,QAAIC,eAAeH,KAAMI,CAAAA,UAAzB;AACKC,SAAMC,CAAAA,OAAN,CAAcN,KAAMI,CAAAA,UAApB,CAAL,KACED,YADF,GACiBH,KAAMI,CAAAA,UAAWG,CAAAA,KAAjB,CAAuB,GAAvB,CADjB;AAGA,SAAK,IAAIC,IAAIL,YAAaM,CAAAA,MAAjBD,GAA0B,CAAnC,EAA2C,CAA3C,IAAsCA,CAAtC,EAA8CA,CAAA,EAA9C,CAAmD;AACjD,UAAIJ,aAAaD,YAAA,CAAaK,CAAb,CAAgBE,CAAAA,IAAhB,EAAjB;AACK,sBAAqBC,CAAAA,IAArB,CAA0BP,UAA1B,CAAL,IAA+CN,mBAAoBc,CAAAA,QAApB,CAA6BR,UAA7B,CAA/C,KACEA,UADF,GACgB,IAAGA,UAAH,GADhB;AAGAD,kBAAA,CAAaK,CAAb,CAAA,GAAkBJ,UAAlB;AALiD;AAOnD,WAAQ,GAAEJ,KAAMa,CAAAA,SAAR,IAAqBb,KAAMc,CAAAA,WAA3B,IAA0Cd,KAAMe,CAAAA,UAAhD,IAA8Dd,cAA9D,IAAgFE,YAAaa,CAAAA,IAAb,CAAkB,GAAlB,CAAhF,EAAR;AAbsC,GAgBxC;AA5BgJ,CAAhJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text/canvas/utils/fontStringFromTextStyle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text$canvas$utils$fontStringFromTextStyle\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst genericFontFamilies = [\n  \"serif\",\n  \"sans-serif\",\n  \"monospace\",\n  \"cursive\",\n  \"fantasy\",\n  \"system-ui\"\n];\nfunction fontStringFromTextStyle(style) {\n  const fontSizeString = typeof style.fontSize === \"number\" ? `${style.fontSize}px` : style.fontSize;\n  let fontFamilies = style.fontFamily;\n  if (!Array.isArray(style.fontFamily)) {\n    fontFamilies = style.fontFamily.split(\",\");\n  }\n  for (let i = fontFamilies.length - 1; i >= 0; i--) {\n    let fontFamily = fontFamilies[i].trim();\n    if (!/([\\\"\\'])[^\\'\\\"]+\\1/.test(fontFamily) && !genericFontFamilies.includes(fontFamily)) {\n      fontFamily = `\"${fontFamily}\"`;\n    }\n    fontFamilies[i] = fontFamily;\n  }\n  return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${fontFamilies.join(\",\")}`;\n}\n\nexports.fontStringFromTextStyle = fontStringFromTextStyle;\n//# sourceMappingURL=fontStringFromTextStyle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","genericFontFamilies","fontStringFromTextStyle","style","fontSizeString","fontSize","fontFamilies","fontFamily","Array","isArray","split","i","length","trim","test","includes","fontStyle","fontVariant","fontWeight","join"]
}
