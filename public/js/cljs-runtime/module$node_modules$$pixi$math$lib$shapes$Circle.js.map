{
"version":3,
"file":"module$node_modules$$pixi$math$lib$shapes$Circle.js",
"lineCount":31,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,GAAqE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAEzGC,SAASH,OAAA,CAAQ,0CAAR,CAFgG,EAExEI,YAAYJ,OAAA,CAAQ,qDAAR,CAF4D;AAG7G,OAAMK,OAAN;AAMEC,eAAW,CAACC,CAAA,GAAI,CAAL,EAAQC,CAAA,GAAI,CAAZ,EAAeC,MAAA,GAAS,CAAxB,CAA2B;AACpC,UAAKF,CAAAA,CAAL,GAASA,CAAT;AAAY,UAAKC,CAAAA,CAAL,GAASA,CAAT;AAAY,UAAKC,CAAAA,MAAL,GAAcA,MAAd;AAAsB,UAAKC,CAAAA,IAAL,GAAYP,MAAOQ,CAAAA,MAAOC,CAAAA,IAA1B;AADV;AAOtCC,SAAK,EAAG;AACN,aAAO,IAAIR,MAAJ,CAAW,IAAKE,CAAAA,CAAhB,EAAmB,IAAKC,CAAAA,CAAxB,EAA2B,IAAKC,CAAAA,MAAhC,CAAP;AADM;AASRK,YAAQ,CAACP,CAAD,EAAIC,CAAJ,CAAO;AACb,UAAmB,CAAnB,IAAI,IAAKC,CAAAA,MAAT;AACE,eAAO,CAAA,CAAP;AADF;AAEA,YAAMM,KAAK,IAAKN,CAAAA,MAAVM,GAAmB,IAAKN,CAAAA,MAA9B;AACIO,OAAAA,GAAK,IAAKT,CAAAA,CAAVS,GAAcT,CAAdS;AAAiBC,OAAAA,GAAK,IAAKT,CAAAA,CAAVS,GAAcT,CAAdS;AACrB,aAAOD,CAAA,IAAMA,CAAN,EAAUC,CAAV,IAAgBA,CAAhB,EAAoBD,CAApB,GAAyBC,CAAzB,IAA+BF,EAAtC;AALa;AAWfG,aAAS,EAAG;AACV,aAAO,IAAId,SAAUA,CAAAA,SAAd,CAAwB,IAAKG,CAAAA,CAA7B,GAAiC,IAAKE,CAAAA,MAAtC,EAA8C,IAAKD,CAAAA,CAAnD,GAAuD,IAAKC,CAAAA,MAA5D,EAAkF,CAAlF,GAAoE,IAAKA,CAAAA,MAAzE,EAAmG,CAAnG,GAAqF,IAAKA,CAAAA,MAA1F,CAAP;AADU;AAjCd;AAqCAJ,QAAOc,CAAAA,SAAUC,CAAAA,QAAjB,GAA4BC,QAAQ,EAAG;AACrC,WAAQ,wBAAuB,IAAKd,CAAAA,CAA5B,MAAmC,IAAKC,CAAAA,CAAxC,WAAoD,IAAKC,CAAAA,MAAzD,GAAR;AADqC,GAAvC;AAGAP,SAAQG,CAAAA,MAAR,GAAiBA,MAAjB;AA3C6G,CAA7G;;",
"sources":["node_modules/@pixi/math/lib/shapes/Circle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$math$lib$shapes$Circle\"] = function(global,require,module,exports) {\n\"use strict\";\nvar _const = require(\"../const.js\"), Rectangle = require(\"./Rectangle.js\");\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    this.x = x, this.y = y, this.radius = radius, this.type = _const.SHAPES.CIRC;\n  }\n  /**\n   * Creates a clone of this Circle instance\n   * @returns A copy of the Circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return !1;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x, dy = this.y - y;\n    return dx *= dx, dy *= dy, dx + dy <= r2;\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object\n   * @returns The framing rectangle\n   */\n  getBounds() {\n    return new Rectangle.Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n  }\n}\nCircle.prototype.toString = function() {\n  return `[@pixi/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n};\nexports.Circle = Circle;\n//# sourceMappingURL=Circle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","Rectangle","Circle","constructor","x","y","radius","type","SHAPES","CIRC","clone","contains","r2","dx","dy","getBounds","prototype","toString","Circle.prototype.toString"]
}
