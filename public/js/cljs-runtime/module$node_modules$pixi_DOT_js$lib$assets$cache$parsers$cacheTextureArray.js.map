{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$assets$cache$parsers$cacheTextureArray.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,GAA+F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGnIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,UAAUJ,OAAA,CAAQ,gFAAR,CAAd;AAEA,cAAA;AAkBAE,SAAQG,CAAAA,iBAAR,GAjB0BA,CACxBC,UAAW,CACTC,KAAMJ,MAAWK,CAAAA,aAAcC,CAAAA,WADtB,EAETC,KAAM,mBAFG,CADaL,EAKxBM,KAAOC,KAADD,IAAWE,KAAMC,CAAAA,OAAN,CAAcF,KAAd,CAAXD,IAAmCC,KAAMG,CAAAA,KAAN,CAAaC,CAAD,IAAOA,CAAP,YAAoBZ,OAAQA,CAAAA,OAAxC,CALjBC,EAMxBY,mBAAoB,CAACC,IAAD,EAAON,KAAP,CAAAK,IAAiB;AACnC,UAAME,MAAM,EAAZ;AACAD,QAAKE,CAAAA,OAAL,CAAcC,GAAD,IAAS;AACpBT,WAAMQ,CAAAA,OAAN,CAAc,CAACE,IAAD,EAAOC,CAAP,CAAA,IAAa;AACzBJ,WAAA,CAAIE,GAAJ,IAAiB,CAAN,KAAAE,CAAA,GAAU,EAAV,GAAeA,CAAf,GAAmB,CAA9B,EAAA,GAAoCD,IAApC;AADyB,OAA3B,CAAA;AADoB,KAAtB,CAAA;AAKA,WAAOH,GAAP;AAPmC,GANbd,CAiB1B;AAxBuI,CAAvI;;",
"sources":["node_modules/pixi_DOT_js/lib/assets/cache/parsers/cacheTextureArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$assets$cache$parsers$cacheTextureArray\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Texture = require('../../../rendering/renderers/shared/texture/Texture.js');\n\n\"use strict\";\nconst cacheTextureArray = {\n  extension: {\n    type: Extensions.ExtensionType.CacheParser,\n    name: \"cacheTextureArray\"\n  },\n  test: (asset) => Array.isArray(asset) && asset.every((t) => t instanceof Texture.Texture),\n  getCacheableAssets: (keys, asset) => {\n    const out = {};\n    keys.forEach((key) => {\n      asset.forEach((item, i) => {\n        out[key + (i === 0 ? \"\" : i + 1)] = item;\n      });\n    });\n    return out;\n  }\n};\n\nexports.cacheTextureArray = cacheTextureArray;\n//# sourceMappingURL=cacheTextureArray.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Texture","cacheTextureArray","extension","type","ExtensionType","CacheParser","name","test","asset","Array","isArray","every","t","getCacheableAssets","keys","out","forEach","key","item","i"]
}
