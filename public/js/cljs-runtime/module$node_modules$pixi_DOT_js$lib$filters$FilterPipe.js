shadow$provide.module$node_modules$pixi_DOT_js$lib$filters$FilterPipe = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  "use strict";
  class FilterPipe {
    constructor(renderer) {
      this._renderer = renderer;
    }
    push(filterEffect, container, instructionSet) {
      this._renderer.renderPipes.batch.break(instructionSet);
      instructionSet.add({renderPipeId:"filter", canBundle:!1, action:"pushFilter", container, filterEffect});
    }
    pop(_filterEffect, _container, instructionSet) {
      this._renderer.renderPipes.batch.break(instructionSet);
      instructionSet.add({renderPipeId:"filter", action:"popFilter", canBundle:!1});
    }
    execute(instruction) {
      "pushFilter" === instruction.action ? this._renderer.filter.push(instruction) : "popFilter" === instruction.action && this._renderer.filter.pop();
    }
    destroy() {
      this._renderer = null;
    }
  }
  FilterPipe.extension = {type:[global.ExtensionType.WebGLPipes, global.ExtensionType.WebGPUPipes, global.ExtensionType.CanvasPipes], name:"filter"};
  exports.FilterPipe = FilterPipe;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$filters$FilterPipe.js.map
