shadow$provide.module$node_modules$$pixi$mesh$lib$MeshBatchUvs = function(global, require, module, exports) {
  class MeshBatchUvs {
    constructor(uvBuffer, uvMatrix) {
      this.uvBuffer = uvBuffer;
      this.uvMatrix = uvMatrix;
      this.data = null;
      this._textureUpdateId = this._bufferUpdateId = -1;
      this._updateID = 0;
    }
    update(forceUpdate) {
      if (forceUpdate || this._bufferUpdateId !== this.uvBuffer._updateID || this._textureUpdateId !== this.uvMatrix._updateID) {
        this._bufferUpdateId = this.uvBuffer._updateID, this._textureUpdateId = this.uvMatrix._updateID, forceUpdate = this.uvBuffer.data, this.data && this.data.length === forceUpdate.length || (this.data = new Float32Array(forceUpdate.length)), this.uvMatrix.multiplyUvs(forceUpdate, this.data), this._updateID++;
      }
    }
  }
  exports.MeshBatchUvs = MeshBatchUvs;
};

//# sourceMappingURL=module$node_modules$$pixi$mesh$lib$MeshBatchUvs.js.map
