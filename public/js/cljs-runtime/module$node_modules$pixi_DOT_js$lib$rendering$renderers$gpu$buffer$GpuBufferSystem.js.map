{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$buffer$GpuBufferSystem.js",
"lineCount":59,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/buffer/GpuBufferSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$buffer$GpuBufferSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\nvar fastCopy = require('../../shared/buffer/utils/fastCopy.js');\n\n\"use strict\";\nclass GpuBufferSystem {\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._managedBuffers = [];\n    renderer.renderableGC.addManagedHash(this, \"_gpuBuffers\");\n  }\n  contextChange(gpu) {\n    this._gpu = gpu;\n  }\n  getGPUBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGPUBuffer(buffer);\n  }\n  updateBuffer(buffer) {\n    const gpuBuffer = this._gpuBuffers[buffer.uid] || this.createGPUBuffer(buffer);\n    const data = buffer.data;\n    if (buffer._updateID && data) {\n      buffer._updateID = 0;\n      this._gpu.device.queue.writeBuffer(\n        gpuBuffer,\n        0,\n        data.buffer,\n        0,\n        // round to the nearest 4 bytes\n        (buffer._updateSize || data.byteLength) + 3 & ~3\n      );\n    }\n    return gpuBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    for (const id in this._gpuBuffers) {\n      this._gpuBuffers[id].destroy();\n    }\n    this._gpuBuffers = {};\n  }\n  createGPUBuffer(buffer) {\n    if (!this._gpuBuffers[buffer.uid]) {\n      buffer.on(\"update\", this.updateBuffer, this);\n      buffer.on(\"change\", this.onBufferChange, this);\n      buffer.on(\"destroy\", this.onBufferDestroy, this);\n      this._managedBuffers.push(buffer);\n    }\n    const gpuBuffer = this._gpu.device.createBuffer(buffer.descriptor);\n    buffer._updateID = 0;\n    if (buffer.data) {\n      fastCopy.fastCopy(buffer.data.buffer, gpuBuffer.getMappedRange());\n      gpuBuffer.unmap();\n    }\n    this._gpuBuffers[buffer.uid] = gpuBuffer;\n    return gpuBuffer;\n  }\n  onBufferChange(buffer) {\n    const gpuBuffer = this._gpuBuffers[buffer.uid];\n    gpuBuffer.destroy();\n    buffer._updateID = 0;\n    this._gpuBuffers[buffer.uid] = this.createGPUBuffer(buffer);\n  }\n  /**\n   * Disposes buffer\n   * @param buffer - buffer with data\n   */\n  onBufferDestroy(buffer) {\n    this._managedBuffers.splice(this._managedBuffers.indexOf(buffer), 1);\n    this._destroyBuffer(buffer);\n  }\n  destroy() {\n    this._managedBuffers.forEach((buffer) => this._destroyBuffer(buffer));\n    this._managedBuffers = null;\n    this._gpuBuffers = null;\n  }\n  _destroyBuffer(buffer) {\n    const gpuBuffer = this._gpuBuffers[buffer.uid];\n    gpuBuffer.destroy();\n    buffer.off(\"update\", this.updateBuffer, this);\n    buffer.off(\"change\", this.onBufferChange, this);\n    buffer.off(\"destroy\", this.onBufferDestroy, this);\n    this._gpuBuffers[buffer.uid] = null;\n  }\n}\n/** @ignore */\nGpuBufferSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGPUSystem\n  ],\n  name: \"buffer\"\n};\n\nexports.GpuBufferSystem = GpuBufferSystem;\n//# sourceMappingURL=GpuBufferSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","fastCopy","GpuBufferSystem","constructor","renderer","_gpuBuffers","Object","create","_managedBuffers","renderableGC","addManagedHash","contextChange","gpu","_gpu","getGPUBuffer","buffer","uid","createGPUBuffer","updateBuffer","gpuBuffer","data","_updateID","device","queue","writeBuffer","_updateSize","byteLength","destroyAll","id","destroy","on","onBufferChange","onBufferDestroy","push","createBuffer","descriptor","getMappedRange","unmap","splice","indexOf","_destroyBuffer","forEach","off","extension","type","ExtensionType","WebGPUSystem","name"]
}
