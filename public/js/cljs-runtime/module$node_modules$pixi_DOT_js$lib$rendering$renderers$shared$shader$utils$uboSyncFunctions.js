shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$uboSyncFunctions = function(global, require, module, exports) {
  function loopMatrix(col, row) {
    return `
        for (let i = 0; i < ${col * row}; i++) {
            data[offset + (((i / ${col})|0) * 4) + (i % ${col})] = v[i];
        }
    `;
  }
  global = {f32:"\n        data[offset] \x3d v;", i32:"\n        dataInt32[offset] \x3d v;", "vec2\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];", "vec3\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];\n        data[offset + 2] \x3d v[2];", "vec4\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];\n        data[offset + 2] \x3d v[2];\n        data[offset + 3] \x3d v[3];", "vec2\x3ci32\x3e":"\n        dataInt32[offset] \x3d v[0];\n        dataInt32[offset + 1] \x3d v[1];", 
  "vec3\x3ci32\x3e":"\n        dataInt32[offset] \x3d v[0];\n        dataInt32[offset + 1] \x3d v[1];\n        dataInt32[offset + 2] \x3d v[2];", "vec4\x3ci32\x3e":"\n        dataInt32[offset] \x3d v[0];\n        dataInt32[offset + 1] \x3d v[1];\n        dataInt32[offset + 2] \x3d v[2];\n        dataInt32[offset + 3] \x3d v[3];", "mat2x2\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];\n        data[offset + 4] \x3d v[2];\n        data[offset + 5] \x3d v[3];", "mat3x3\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];\n        data[offset + 2] \x3d v[2];\n        data[offset + 4] \x3d v[3];\n        data[offset + 5] \x3d v[4];\n        data[offset + 6] \x3d v[5];\n        data[offset + 8] \x3d v[6];\n        data[offset + 9] \x3d v[7];\n        data[offset + 10] \x3d v[8];", 
  "mat4x4\x3cf32\x3e":"\n        for (let i \x3d 0; i \x3c 16; i++) {\n            data[offset + i] \x3d v[i];\n        }", "mat3x2\x3cf32\x3e":loopMatrix(3, 2), "mat4x2\x3cf32\x3e":loopMatrix(4, 2), "mat2x3\x3cf32\x3e":loopMatrix(2, 3), "mat4x3\x3cf32\x3e":loopMatrix(4, 3), "mat2x4\x3cf32\x3e":loopMatrix(2, 4), "mat3x4\x3cf32\x3e":loopMatrix(3, 4)};
  require = {...global, "mat2x2\x3cf32\x3e":"\n        data[offset] \x3d v[0];\n        data[offset + 1] \x3d v[1];\n        data[offset + 2] \x3d v[2];\n        data[offset + 3] \x3d v[3];\n    "};
  exports.uboSyncFunctionsSTD40 = global;
  exports.uboSyncFunctionsWGSL = require;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$uboSyncFunctions.js.map
