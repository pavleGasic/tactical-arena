{
"version":3,
"file":"module$node_modules$$pixi$core$lib$batch$BatchGeometry.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,GAA2E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAE/GC,YAAYH,OAAA,CAAQ,+CAAR,CAFmG,EAEvEI,SAASJ,OAAA,CAAQ,oDAAR,CAF8D;AAE5BK,QAAAA,GAAWL,OAAA,CAAQ,sDAAR,CAAXK;AACvF,OAAMC,cAAN,QAA4BD,OAASA,CAAAA,QAArC;AAKEE,eAAW,CAACC,OAAA,GAAU,CAAA,CAAX,CAAe;AACxB,WAAA,EAAA;AAAS,UAAKC,CAAAA,OAAL,GAAe,IAAIL,MAAOA,CAAAA,MAAX,CAAkB,IAAlB,EAAwBI,OAAxB,EAAiC,CAAA,CAAjC,CAAf;AAAqD,UAAKE,CAAAA,YAAL,GAAoB,IAAIN,MAAOA,CAAAA,MAAX,CAAkB,IAAlB,EAAwBI,OAAxB,EAAiC,CAAA,CAAjC,CAApB;AAA0D,UAAKG,CAAAA,YAAL,CAAkB,iBAAlB,EAAqC,IAAKF,CAAAA,OAA1C,EAAmD,CAAnD,EAAsD,CAAA,CAAtD,EAA0DN,SAAUS,CAAAA,KAAMC,CAAAA,KAA1E,CAAiFF,CAAAA,YAAjF,CAA8F,eAA9F,EAA+G,IAAKF,CAAAA,OAApH,EAA6H,CAA7H,EAAgI,CAAA,CAAhI,EAAoIN,SAAUS,CAAAA,KAAMC,CAAAA,KAApJ,CAA2JF,CAAAA,YAA3J,CAAwK,QAAxK,EAAkL,IAAKF,CAAAA,OAAvL,EAAgM,CAAhM,EAAmM,CAAA,CAAnM,EAAuMN,SAAUS,CAAAA,KAAME,CAAAA,aAAvN,CAAsOH,CAAAA,YAAtO,CAAmP,YAAnP,EAAiQ,IAAKF,CAAAA,OAAtQ,EAA+Q,CAA/Q,EAAkR,CAAA,CAAlR,EAAsRN,SAAUS,CAAAA,KAAMC,CAAAA,KAAtS,CAA6SE,CAAAA,QAA7S,CAAsT,IAAKL,CAAAA,YAA3T,CAAA;AADhG;AAL5B;AASAR,SAAQI,CAAAA,aAAR,GAAwBA,aAAxB;AAZmH,CAAnH;;",
"sources":["node_modules/@pixi/core/lib/batch/BatchGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$batch$BatchGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), Buffer = require(\"../geometry/Buffer.js\"), Geometry = require(\"../geometry/Geometry.js\");\nclass BatchGeometry extends Geometry.Geometry {\n  /**\n   * @param {boolean} [_static=false] - Optimization flag, where `false`\n   *        is updated every frame, `true` doesn't change frame-to-frame.\n   */\n  constructor(_static = !1) {\n    super(), this._buffer = new Buffer.Buffer(null, _static, !1), this._indexBuffer = new Buffer.Buffer(null, _static, !0), this.addAttribute(\"aVertexPosition\", this._buffer, 2, !1, constants.TYPES.FLOAT).addAttribute(\"aTextureCoord\", this._buffer, 2, !1, constants.TYPES.FLOAT).addAttribute(\"aColor\", this._buffer, 4, !0, constants.TYPES.UNSIGNED_BYTE).addAttribute(\"aTextureId\", this._buffer, 1, !0, constants.TYPES.FLOAT).addIndex(this._indexBuffer);\n  }\n}\nexports.BatchGeometry = BatchGeometry;\n//# sourceMappingURL=BatchGeometry.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","Buffer","Geometry","BatchGeometry","constructor","_static","_buffer","_indexBuffer","addAttribute","TYPES","FLOAT","UNSIGNED_BYTE","addIndex"]
}
