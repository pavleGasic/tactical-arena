shadow$provide.module$node_modules$pixi_DOT_js$lib$filters$blend_modes$hls$GPUhls = function(global, require, module, exports) {
  exports.hslgpu = "\n\tfn getLuminosity(c: vec3\x3cf32\x3e) -\x3e f32\n\t{\n\t\treturn 0.3*c.r + 0.59*c.g + 0.11*c.b;\n\t}\n\n\tfn setLuminosity(c: vec3\x3cf32\x3e, lum: f32) -\x3e vec3\x3cf32\x3e\n\t{\n\t\tvar modLum: f32 \x3d lum - getLuminosity(c);\n\t\tvar color: vec3\x3cf32\x3e \x3d c.rgb + modLum;\n\n\t\t// clip back into legal range\n\t\tmodLum \x3d getLuminosity(color);\n\t\tlet modLumVec \x3d vec3\x3cf32\x3e(modLum);\n\n\t\tlet cMin: f32 \x3d min(color.r, min(color.g, color.b));\n\t\tlet cMax: f32 \x3d max(color.r, max(color.g, color.b));\n\n\t\tif(cMin \x3c 0.0)\n\t\t{\n\t\t\tcolor \x3d mix(modLumVec, color, modLum / (modLum - cMin));\n\t\t}\n\n\t\tif(cMax \x3e 1.0)\n\t\t{\n\t\t\tcolor \x3d mix(modLumVec, color, (1 - modLum) / (cMax - modLum));\n\t\t}\n\n\t\treturn color;\n\t}\n\n\tfn getSaturation(c: vec3\x3cf32\x3e) -\x3e f32\n\t{\n\t\treturn max(c.r, max(c.g, c.b)) - min(c.r, min(c.g, c.b));\n\t}\n\n\tfn setSaturationMinMidMax(cSorted: vec3\x3cf32\x3e, s: f32) -\x3e vec3\x3cf32\x3e\n\t{\n\t\tvar colorSorted \x3d cSorted;\n\n\t\tif(colorSorted.z \x3e colorSorted.x)\n\t\t{\n\t\t\tcolorSorted.y \x3d (((colorSorted.y - colorSorted.x) * s) / (colorSorted.z - colorSorted.x));\n\t\t\tcolorSorted.z \x3d s;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcolorSorted.y \x3d 0;\n\t\t\tcolorSorted.z \x3d 0;\n\t\t}\n\n\t\tcolorSorted.x \x3d 0;\n\n\t\treturn colorSorted;\n\t}\n\n\tfn setSaturation(c: vec3\x3cf32\x3e, s: f32) -\x3e vec3\x3cf32\x3e\n\t{\n\t\tvar color \x3d c;\n\n\t\tif (color.r \x3c\x3d color.g \x26\x26 color.r \x3c\x3d color.b)\n\t\t{\n\t\t\tif (color.g \x3c\x3d color.b)\n\t\t\t{\n\t\t\t\tcolor \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.rgb, s)).rgb;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcolor \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.rbg, s)).rbg;\n\t\t\t}\n\t\t}\n\t\telse if (color.g \x3c\x3d color.r \x26\x26 color.g \x3c\x3d color.b)\n\t\t{\n\t\t\tif (color.r \x3c\x3d color.b)\n\t\t\t{\n\t\t\t\tcolor \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.grb, s)).grb;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcolor \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.gbr, s)).gbr;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Using bgr for both fixes part of hue\n\t\t\tif (color.r \x3c\x3d color.g)\n\t\t\t{\n\t\t\t\tcolor \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.brg, s)).brg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcolor  \x3d vec3\x3cf32\x3e(setSaturationMinMidMax(color.bgr, s)).bgr;\n\t\t\t}\n\t\t}\n\n\t\treturn color;\n\t}\n\t";
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$filters$blend_modes$hls$GPUhls.js.map
