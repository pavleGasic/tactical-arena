{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$utils$generateArraySyncSTD40.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAA,8FAAA,GAAmH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG3J,MAAIC,yBAAyBH,OAAA,CAAQ,gGAAR,CAA7B;AAEA,cAAA;AAyBAE,SAAQE,CAAAA,sBAAR,GAxBAA,QAA+B,CAACC,UAAD,EAAaC,WAAb,CAA0B;AACvD,UAAMC,UAAUC,IAAKC,CAAAA,GAAL,CAASN,sBAAuBO,CAAAA,kBAAvB,CAA0CL,UAAWM,CAAAA,IAAKC,CAAAA,IAA1D,CAAT,GAA2E,EAA3E,EAA+E,CAA/E,CAAhB,EACMC,cAAcR,UAAWM,CAAAA,IAAKG,CAAAA,KAAMC,CAAAA,MAApCF,GAA6CR,UAAWM,CAAAA,IAAKK,CAAAA,IADnE,EAEMC,aAAa,CAAbA,GAAiBJ,WAAjBI,GAA+B,CAA/BA,IAAoC,CAF1C,EAGMN,OAA8C,CAAvC,IAAAN,UAAWM,CAAAA,IAAKC,CAAAA,IAAKM,CAAAA,OAArB,CAA6B,KAA7B,CAAA,GAA2C,WAA3C,GAAyD,MAHtE;AAIA,WAAQ;iBACOb,UAAWM,CAAAA,IAAKQ,CAAAA,IADvB;oBAEUb,WAFV;;;;;;2BAQiBD,UAAWM,CAAAA,IAAKK,CAAAA,IARjC,GAQwCT,OARxC;;iCAUuBM,WAVvB;;kBAYQF,IAZR;;cAckB,CAAd,KAAAM,SAAA,GAAmB,kBAAiBA,SAAjB,GAAnB,GAAmD,EAdvD;;KAAR;AALuD,GAwBzD;AA9B2J,CAA3J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/utils/generateArraySyncSTD40.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$utils$generateArraySyncSTD40\"] = function(global,require,module,exports) {\n'use strict';\n\nvar createUboElementsSTD40 = require('./createUboElementsSTD40.js');\n\n\"use strict\";\nfunction generateArraySyncSTD40(uboElement, offsetToAdd) {\n  const rowSize = Math.max(createUboElementsSTD40.WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n  const elementSize = uboElement.data.value.length / uboElement.data.size;\n  const remainder = (4 - elementSize % 4) % 4;\n  const data = uboElement.data.type.indexOf(\"i32\") >= 0 ? \"dataInt32\" : \"data\";\n  return `\n        v = uv.${uboElement.data.name};\n        offset += ${offsetToAdd};\n\n        arrayOffset = offset;\n\n        t = 0;\n\n        for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n        {\n            for(var j = 0; j < ${elementSize}; j++)\n            {\n                ${data}[arrayOffset++] = v[t++];\n            }\n            ${remainder !== 0 ? `arrayOffset += ${remainder};` : \"\"}\n        }\n    `;\n}\n\nexports.generateArraySyncSTD40 = generateArraySyncSTD40;\n//# sourceMappingURL=generateArraySyncSTD40.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","createUboElementsSTD40","generateArraySyncSTD40","uboElement","offsetToAdd","rowSize","Math","max","WGSL_TO_STD40_SIZE","data","type","elementSize","value","length","size","remainder","indexOf","name"]
}
