{
"version":3,
"file":"module$node_modules$$pixi$mesh$lib$MeshGeometry.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAE5G,MAAIC,OAAOH,OAAA,CAAQ,0CAAR,CAAX;AACA,OAAMI,aAAN,QAA2BD,KAAKE,CAAAA,QAAhC;AAMEC,eAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,KAAhB,CAAuB;AAChC,WAAA,EAAA;AACMC,cAAAA,GAAiB,IAAIP,IAAKQ,CAAAA,MAAT,CAAgBJ,QAAhB,CAAjBG;AAA4CE,SAAAA,GAAY,IAAIT,IAAKQ,CAAAA,MAAT,CAAgBH,GAAhB,EAAqB,CAAA,CAArB,CAAZI;AAAsCC,WAAAA,GAAc,IAAIV,IAAKQ,CAAAA,MAAT,CAAgBF,KAAhB,EAAuB,CAAA,CAAvB,EAA2B,CAAA,CAA3B,CAAdI;AACxF,UAAKC,CAAAA,YAAL,CAAkB,iBAAlB,EAAqCJ,QAArC,EAAqD,CAArD,EAAwD,CAAA,CAAxD,EAA4DP,IAAKY,CAAAA,KAAMC,CAAAA,KAAvE,CAA8EF,CAAAA,YAA9E,CAA2F,eAA3F,EAA4GF,GAA5G,EAAuH,CAAvH,EAA0H,CAAA,CAA1H,EAA8HT,IAAKY,CAAAA,KAAMC,CAAAA,KAAzI,CAAgJC,CAAAA,QAAhJ,CAAyJJ,KAAzJ,CAAA;AAAuK,UAAKK,CAAAA,SAAL,GAAiB,CAAC,CAAlB;AAHvI;AAU9B,qBAAgB,EAAA;AAClB,aAAO,IAAKC,CAAAA,OAAL,CAAa,CAAb,CAAgBC,CAAAA,SAAvB;AADkB;AAhBtB;AAoBAlB,SAAQE,CAAAA,YAAR,GAAuBA,YAAvB;AAvB4G,CAA5G;;",
"sources":["node_modules/@pixi/mesh/lib/MeshGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mesh$lib$MeshGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nclass MeshGeometry extends core.Geometry {\n  /**\n   * @param {Float32Array|number[]} [vertices] - Positional data on geometry.\n   * @param {Float32Array|number[]} [uvs] - Texture UVs.\n   * @param {Uint16Array|number[]} [index] - IndexBuffer\n   */\n  constructor(vertices, uvs, index) {\n    super();\n    const verticesBuffer = new core.Buffer(vertices), uvsBuffer = new core.Buffer(uvs, !0), indexBuffer = new core.Buffer(index, !0, !0);\n    this.addAttribute(\"aVertexPosition\", verticesBuffer, 2, !1, core.TYPES.FLOAT).addAttribute(\"aTextureCoord\", uvsBuffer, 2, !1, core.TYPES.FLOAT).addIndex(indexBuffer), this._updateId = -1;\n  }\n  /**\n   * If the vertex position is updated.\n   * @readonly\n   * @private\n   */\n  get vertexDirtyId() {\n    return this.buffers[0]._updateID;\n  }\n}\nexports.MeshGeometry = MeshGeometry;\n//# sourceMappingURL=MeshGeometry.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","MeshGeometry","Geometry","constructor","vertices","uvs","index","verticesBuffer","Buffer","uvsBuffer","indexBuffer","addAttribute","TYPES","FLOAT","addIndex","_updateId","buffers","_updateID"]
}
