{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$accessibility$accessibilityTarget.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,GAA0F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAgFlIA,SAAQC,CAAAA,mBAAR,GA5E4BA,CAO1BC,WAAY,CAAA,CAPcD,EAc1BE,gBAAiB,IAdSF,EAoB1BG,eAAgB,IApBUH,EA0B1BI,SAAU,CA1BgBJ,EAgC1BK,kBAAmB,CAAA,CAhCOL,EAqC1BM,eAAgB,IArCUN,EA6C1BO,eAAgB,QA7CUP,EAmD1BQ,eAAgB,IAnDUR,EA2D1BS,wBAAyB,MA3DCT,EAmE1BU,mBAAoB,CAAA,CAnEMV,EAyE1BW,UAAW,CAAC,CAzEcX,CA4E5B;AAhFkI,CAAlI;;",
"sources":["node_modules/pixi_DOT_js/lib/accessibility/accessibilityTarget.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$accessibility$accessibilityTarget\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst accessibilityTarget = {\n  /**\n   * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   * shadow div with attributes set\n   * @member {boolean}\n   * @memberof scene.Container#\n   */\n  accessible: false,\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleTitle: null,\n  /**\n   * Sets the aria-label attribute of the shadow div\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleHint: null,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n  /**\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleActive: false,\n  /**\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleDiv: null,\n  /**\n   * Specify the type of div the accessible layer is. Screen readers treat the element differently\n   * depending on this type. Defaults to button.\n   * @member {string}\n   * @memberof scene.Container#\n   * @default 'button'\n   */\n  accessibleType: \"button\",\n  /**\n   * Sets the text content of the shadow div\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleText: null,\n  /**\n   * Specify the pointer-events the accessible div will use\n   * Defaults to auto.\n   * @type {PointerEvents}\n   * @memberof scene.Container#\n   * @default 'auto'\n   */\n  accessiblePointerEvents: \"auto\",\n  /**\n   * Setting to false will prevent any children inside this container to\n   * be accessible. Defaults to true.\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @default true\n   */\n  accessibleChildren: true,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @private\n   */\n  _renderId: -1\n};\n\nexports.accessibilityTarget = accessibilityTarget;\n//# sourceMappingURL=accessibilityTarget.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","accessibilityTarget","accessible","accessibleTitle","accessibleHint","tabIndex","_accessibleActive","_accessibleDiv","accessibleType","accessibleText","accessiblePointerEvents","accessibleChildren","_renderId"]
}
