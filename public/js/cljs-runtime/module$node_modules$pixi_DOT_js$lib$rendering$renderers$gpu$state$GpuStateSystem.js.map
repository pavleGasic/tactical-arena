{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStateSystem.js",
"lineCount":23,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,GAAqG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGzIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,QAAQJ,OAAA,CAAQ,4EAAR,CAAZ,EACIK,sBAAsBL,OAAA,CAAQ,uFAAR,CAD1B;AAGA,cAAA;AACA,OAAMM,eAAN;AACEC,eAAW,EAAG;AACZ,UAAKC,CAAAA,YAAL,GAAoB,IAAIJ,KAAMA,CAAAA,KAAV,EAApB;AACA,UAAKI,CAAAA,YAAaC,CAAAA,KAAlB,GAA0B,CAAA,CAA1B;AAFY;AAIdC,iBAAa,CAACC,GAAD,CAAM;AACjB,UAAKA,CAAAA,GAAL,GAAWA,GAAX;AADiB;AAOnBC,mBAAe,CAACC,KAAD,CAAQ;AAErB,aAAO,CACL,CACEC,OAAQ,YADV,EAEEC,UAAW,CAFb,EAGEN,MALUJ,mBAAoBA,CAAAA,mBAApB,CAAwCQ,KAAMG,CAAAA,SAA9C,CAKVP,IALsEJ,mBAAoBA,CAAAA,mBAAoBY,CAAAA,MAEhH,CADK,CAAP;AAFqB;AAUvBC,WAAO,EAAG;AACR,UAAKP,CAAAA,GAAL,GAAW,IAAX;AADQ;AAtBZ;AA2BAL,gBAAea,CAAAA,SAAf,GAA2B,CACzBC,KAAM,CACJjB,MAAWkB,CAAAA,aAAcC,CAAAA,YADrB,CADmB,EAIzBC,KAAM,OAJmB,CAA3B;AAOArB,SAAQI,CAAAA,cAAR,GAAyBA,cAAzB;AA1C6I,CAA7I;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/state/GpuStateSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStateSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\nvar State = require('../../shared/state/State.js');\nvar GpuBlendModesToPixi = require('./GpuBlendModesToPixi.js');\n\n\"use strict\";\nclass GpuStateSystem {\n  constructor() {\n    this.defaultState = new State.State();\n    this.defaultState.blend = true;\n  }\n  contextChange(gpu) {\n    this.gpu = gpu;\n  }\n  /**\n   * Gets the blend mode data for the current state\n   * @param state - The state to get the blend mode from\n   */\n  getColorTargets(state) {\n    const blend = GpuBlendModesToPixi.GpuBlendModesToPixi[state.blendMode] || GpuBlendModesToPixi.GpuBlendModesToPixi.normal;\n    return [\n      {\n        format: \"bgra8unorm\",\n        writeMask: 0,\n        blend\n      }\n    ];\n  }\n  destroy() {\n    this.gpu = null;\n  }\n}\n/** @ignore */\nGpuStateSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGPUSystem\n  ],\n  name: \"state\"\n};\n\nexports.GpuStateSystem = GpuStateSystem;\n//# sourceMappingURL=GpuStateSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","State","GpuBlendModesToPixi","GpuStateSystem","constructor","defaultState","blend","contextChange","gpu","getColorTargets","state","format","writeMask","blendMode","normal","destroy","extension","type","ExtensionType","WebGPUSystem","name"]
}
