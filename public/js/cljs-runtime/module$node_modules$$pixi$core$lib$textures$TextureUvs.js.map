{
"version":3,
"file":"module$node_modules$$pixi$core$lib$textures$TextureUvs.js",
"lineCount":51,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/textures/TextureUvs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$textures$TextureUvs\"] = function(global,require,module,exports) {\n\"use strict\";\nvar math = require(\"@pixi/math\");\nclass TextureUvs {\n  constructor() {\n    this.x0 = 0, this.y0 = 0, this.x1 = 1, this.y1 = 0, this.x2 = 1, this.y2 = 1, this.x3 = 0, this.y3 = 1, this.uvsFloat32 = new Float32Array(8);\n  }\n  /**\n   * Sets the texture Uvs based on the given frame information.\n   * @protected\n   * @param frame - The frame of the texture\n   * @param baseFrame - The base frame of the texture\n   * @param rotate - Rotation of frame, see {@link PIXI.groupD8}\n   */\n  set(frame, baseFrame, rotate) {\n    const tw = baseFrame.width, th = baseFrame.height;\n    if (rotate) {\n      const w2 = frame.width / 2 / tw, h2 = frame.height / 2 / th, cX = frame.x / tw + w2, cY = frame.y / th + h2;\n      rotate = math.groupD8.add(rotate, math.groupD8.NW), this.x0 = cX + w2 * math.groupD8.uX(rotate), this.y0 = cY + h2 * math.groupD8.uY(rotate), rotate = math.groupD8.add(rotate, 2), this.x1 = cX + w2 * math.groupD8.uX(rotate), this.y1 = cY + h2 * math.groupD8.uY(rotate), rotate = math.groupD8.add(rotate, 2), this.x2 = cX + w2 * math.groupD8.uX(rotate), this.y2 = cY + h2 * math.groupD8.uY(rotate), rotate = math.groupD8.add(rotate, 2), this.x3 = cX + w2 * math.groupD8.uX(rotate), this.y3 = cY + h2 * math.groupD8.uY(rotate);\n    } else\n      this.x0 = frame.x / tw, this.y0 = frame.y / th, this.x1 = (frame.x + frame.width) / tw, this.y1 = frame.y / th, this.x2 = (frame.x + frame.width) / tw, this.y2 = (frame.y + frame.height) / th, this.x3 = frame.x / tw, this.y3 = (frame.y + frame.height) / th;\n    this.uvsFloat32[0] = this.x0, this.uvsFloat32[1] = this.y0, this.uvsFloat32[2] = this.x1, this.uvsFloat32[3] = this.y1, this.uvsFloat32[4] = this.x2, this.uvsFloat32[5] = this.y2, this.uvsFloat32[6] = this.x3, this.uvsFloat32[7] = this.y3;\n  }\n}\nTextureUvs.prototype.toString = function() {\n  return `[@pixi/core:TextureUvs x0=${this.x0} y0=${this.y0} x1=${this.x1} y1=${this.y1} x2=${this.x2} y2=${this.y2} x3=${this.x3} y3=${this.y3}]`;\n};\nexports.TextureUvs = TextureUvs;\n//# sourceMappingURL=TextureUvs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","math","TextureUvs","constructor","y0","x0","x1","y1","y2","x2","x3","y3","uvsFloat32","Float32Array","set","frame","baseFrame","rotate","tw","width","th","height","w2","h2","cX","x","cY","y","groupD8","add","NW","uX","uY","prototype","toString","TextureUvs.prototype.toString"]
}
