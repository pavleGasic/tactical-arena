shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$fill$FillPattern = function(global, require, module, exports) {
  var Matrix = require("module$node_modules$pixi_DOT_js$lib$maths$matrix$Matrix"), uid = require("module$node_modules$pixi_DOT_js$lib$utils$data$uid");
  "use strict";
  const repetitionMap = {repeat:{addressModeU:"repeat", addressModeV:"repeat"}, "repeat-x":{addressModeU:"repeat", addressModeV:"clamp-to-edge"}, "repeat-y":{addressModeU:"clamp-to-edge", addressModeV:"repeat"}, "no-repeat":{addressModeU:"clamp-to-edge", addressModeV:"clamp-to-edge"}};
  class FillPattern {
    constructor(texture, repetition) {
      this.uid = uid.uid("fillPattern");
      this.transform = new Matrix.Matrix();
      this._styleKey = null;
      this.texture = texture;
      this.transform.scale(1 / texture.frame.width, 1 / texture.frame.height);
      repetition && (texture.source.style.addressModeU = repetitionMap[repetition].addressModeU, texture.source.style.addressModeV = repetitionMap[repetition].addressModeV);
    }
    setTransform(transform) {
      const texture = this.texture;
      this.transform.copyFrom(transform);
      this.transform.invert();
      this.transform.scale(1 / texture.frame.width, 1 / texture.frame.height);
      this._styleKey = null;
    }
    get styleKey() {
      return this._styleKey ? this._styleKey : this._styleKey = `fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join("-")}`;
    }
  }
  exports.FillPattern = FillPattern;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$fill$FillPattern.js.map
