{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gl$generateBlurVertSource.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,GAAwG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA6DhJA,SAAQC,CAAAA,sBAAR,GAtBAA,QAA+B,CAACC,UAAD,EAAaC,CAAb,CAAgB;AAC7C,UAAMC,aAAaC,IAAKC,CAAAA,IAAL,CAAUJ,UAAV,GAAuB,CAAvB,CAAnB;AACA,QAAIK,aArCgBC,q2BAqCpB;AACIC,eAAW,EADf,EAEIC,QAFJ;AAIEA,YAAA,GADEP,CAAJ,GACa,wFADb,GAGa,wFAFX;AAIF,SAAK,IAAIQ,IAAI,CAAb,EAAgBA,CAAhB,GAAoBT,UAApB,EAAgCS,CAAA,EAAhC,CAAqC;AACnC,UAAIC,OAAOF,QAASG,CAAAA,OAAT,CAAiB,SAAjB,EAA4BF,CAAEG,CAAAA,QAAF,EAA5B,CAAX;AACAF,UAAA,GAAOA,IAAKC,CAAAA,OAAL,CAAa,eAAb,EAA+B,GAAEF,CAAF,IAAOP,UAAP,GAAoB,CAApB,KAA/B,CAAP;AACAK,cAAA,IAAYG,IAAZ;AACAH,cAAA,IAAY,IAAZ;AAJmC;AAMrCF,cAAA,GAAaA,UAAWM,CAAAA,OAAX,CAAmB,QAAnB,EAA6BJ,QAA7B,CAAb;AACAF,cAAA,GAAaA,UAAWM,CAAAA,OAAX,CAAmB,QAAnB,EAA6BX,UAAWY,CAAAA,QAAX,EAA7B,CAAb;AAEA,WADAP,UACA,GADaA,UAAWM,CAAAA,OAAX,CAAmB,aAAnB,EAAkCV,CAAA,GAAI,GAAJ,GAAU,GAA5C,CACb;AAnB6C,GAsB/C;AA7DgJ,CAAhJ;;",
"sources":["node_modules/pixi_DOT_js/lib/filters/defaults/blur/gl/generateBlurVertSource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gl$generateBlurVertSource\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst vertTemplate = `\n    in vec2 aPosition;\n\n    uniform float uStrength;\n\n    out vec2 vBlurTexCoords[%size%];\n\n    uniform vec4 uInputSize;\n    uniform vec4 uOutputFrame;\n    uniform vec4 uOutputTexture;\n\n    vec4 filterVertexPosition( void )\n{\n    vec2 position = aPosition * uOutputFrame.zw + uOutputFrame.xy;\n    \n    position.x = position.x * (2.0 / uOutputTexture.x) - 1.0;\n    position.y = position.y * (2.0*uOutputTexture.z / uOutputTexture.y) - uOutputTexture.z;\n\n    return vec4(position, 0.0, 1.0);\n}\n\n    vec2 filterTextureCoord( void )\n    {\n        return aPosition * (uOutputFrame.zw * uInputSize.zw);\n    }\n\n    void main(void)\n    {\n        gl_Position = filterVertexPosition();\n\n        float pixelStrength = uInputSize.%dimension% * uStrength;\n\n        vec2 textureCoord = filterTextureCoord();\n        %blur%\n    }`;\nfunction generateBlurVertSource(kernelSize, x) {\n  const halfLength = Math.ceil(kernelSize / 2);\n  let vertSource = vertTemplate;\n  let blurLoop = \"\";\n  let template;\n  if (x) {\n    template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * pixelStrength, 0.0);\";\n  } else {\n    template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * pixelStrength);\";\n  }\n  for (let i = 0; i < kernelSize; i++) {\n    let blur = template.replace(\"%index%\", i.toString());\n    blur = blur.replace(\"%sampleIndex%\", `${i - (halfLength - 1)}.0`);\n    blurLoop += blur;\n    blurLoop += \"\\n\";\n  }\n  vertSource = vertSource.replace(\"%blur%\", blurLoop);\n  vertSource = vertSource.replace(\"%size%\", kernelSize.toString());\n  vertSource = vertSource.replace(\"%dimension%\", x ? \"z\" : \"w\");\n  return vertSource;\n}\n\nexports.generateBlurVertSource = generateBlurVertSource;\n//# sourceMappingURL=generateBlurVertSource.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","generateBlurVertSource","kernelSize","x","halfLength","Math","ceil","vertSource","vertTemplate","blurLoop","template","i","blur","replace","toString"]
}
