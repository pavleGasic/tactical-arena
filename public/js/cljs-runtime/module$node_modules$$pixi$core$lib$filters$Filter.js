shadow$provide.module$node_modules$$pixi$core$lib$filters$Filter = function(global, require, module, exports) {
  global = require("module$node_modules$$pixi$constants$lib$index");
  var Program = require("module$node_modules$$pixi$core$lib$shader$Program");
  module = require("module$node_modules$$pixi$core$lib$shader$Shader");
  var State = require("module$node_modules$$pixi$core$lib$state$State"), defaultFilter$1 = require("module$node_modules$$pixi$core$lib$filters$defaultFilter_frag"), defaultFilter = require("module$node_modules$$pixi$core$lib$filters$defaultFilter_vert");
  const node_modules$$pixi$core$lib$filters$Filter$classdecl$var4 = class extends module.Shader {
    constructor(vertexSrc, fragmentSrc, uniforms) {
      super(Program.Program.from(vertexSrc || node_modules$$pixi$core$lib$filters$Filter$classdecl$var4.defaultVertexSrc, fragmentSrc || node_modules$$pixi$core$lib$filters$Filter$classdecl$var4.defaultFragmentSrc), uniforms);
      this.padding = 0;
      this.resolution = node_modules$$pixi$core$lib$filters$Filter$classdecl$var4.defaultResolution;
      this.multisample = node_modules$$pixi$core$lib$filters$Filter$classdecl$var4.defaultMultisample;
      this.autoFit = this.enabled = !0;
      this.state = new State.State();
    }
    apply(filterManager, input, output, clearMode, _currentState) {
      filterManager.applyFilter(this, input, output, clearMode);
    }
    get blendMode() {
      return this.state.blendMode;
    }
    set blendMode(value) {
      this.state.blendMode = value;
    }
    get resolution() {
      return this._resolution;
    }
    set resolution(value) {
      this._resolution = value;
    }
    static get defaultVertexSrc() {
      return defaultFilter.default;
    }
    static get defaultFragmentSrc() {
      return defaultFilter$1.default;
    }
  };
  require = node_modules$$pixi$core$lib$filters$Filter$classdecl$var4;
  require.defaultResolution = 1;
  require.defaultMultisample = global.MSAA_QUALITY.NONE;
  exports.Filter = require;
};

//# sourceMappingURL=module$node_modules$$pixi$core$lib$filters$Filter.js.map
