{
"version":3,
"file":"module$node_modules$$pixi$core$lib$shader$utils$defaultValue.js",
"lineCount":54,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,GAAiF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEzHC,UAASA,aAAY,CAACC,IAAD,CAAO;AACpBC,QAAAA,GAAYC,KAAJ,CAAUF,IAAV,CAARC;AACN,SAAK,IAAIE,IAAI,CAAb,EAAgBA,CAAhB,GAAoBF,IAAMG,CAAAA,MAA1B,EAAkCD,CAAA,EAAlC;AACEF,UAAA,CAAME,CAAN,CAAA,GAAW,CAAA,CAAX;AADF;AAEA,WAAOF,IAAP;AAJ0B;AAkF5BH,SAAQO,CAAAA,YAAR,GA5EAA,QAAqB,CAACC,IAAD,EAAON,IAAP,CAAa;AAChC,WAAQM,IAAR;AACE,WAAK,OAAL;AACE,eAAO,CAAP;AACF,WAAK,MAAL;AACE,eAAO,IAAIC,YAAJ,CAAiB,CAAjB,GAAqBP,IAArB,CAAP;AACF,WAAK,MAAL;AACE,eAAO,IAAIO,YAAJ,CAAiB,CAAjB,GAAqBP,IAArB,CAAP;AACF,WAAK,MAAL;AACE,eAAO,IAAIO,YAAJ,CAAiB,CAAjB,GAAqBP,IAArB,CAAP;AACF,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,WAAL;AACA,WAAK,gBAAL;AACE,eAAO,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIQ,UAAJ,CAAe,CAAf,GAAmBR,IAAnB,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIQ,UAAJ,CAAe,CAAf,GAAmBR,IAAnB,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIQ,UAAJ,CAAe,CAAf,GAAmBR,IAAnB,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIS,WAAJ,CAAgB,CAAhB,GAAoBT,IAApB,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIS,WAAJ,CAAgB,CAAhB,GAAoBT,IAApB,CAAP;AACF,WAAK,OAAL;AACE,eAAO,IAAIS,WAAJ,CAAgB,CAAhB,GAAoBT,IAApB,CAAP;AACF,WAAK,MAAL;AACE,eAAO,CAAA,CAAP;AACF,WAAK,OAAL;AACE,eAAOD,YAAA,CAAa,CAAb,GAAiBC,IAAjB,CAAP;AACF,WAAK,OAAL;AACE,eAAOD,YAAA,CAAa,CAAb,GAAiBC,IAAjB,CAAP;AACF,WAAK,OAAL;AACE,eAAOD,YAAA,CAAa,CAAb,GAAiBC,IAAjB,CAAP;AACF,WAAK,MAAL;AACE,eAAO,IAAIO,YAAJ,CAAiB,CACtB,CADsB,EAEtB,CAFsB,EAGtB,CAHsB,EAItB,CAJsB,CAAjB,CAAP;AAMF,WAAK,MAAL;AACE,eAAO,IAAIA,YAAJ,CAAiB,CACtB,CADsB,EAEtB,CAFsB,EAGtB,CAHsB,EAItB,CAJsB,EAKtB,CALsB,EAMtB,CANsB,EAOtB,CAPsB,EAQtB,CARsB,EAStB,CATsB,CAAjB,CAAP;AAWF,WAAK,MAAL;AACE,eAAO,IAAIA,YAAJ,CAAiB,CACtB,CADsB,EAEtB,CAFsB,EAGtB,CAHsB,EAItB,CAJsB,EAKtB,CALsB,EAMtB,CANsB,EAOtB,CAPsB,EAQtB,CARsB,EAStB,CATsB,EAUtB,CAVsB,EAWtB,CAXsB,EAYtB,CAZsB,EAatB,CAbsB,EActB,CAdsB,EAetB,CAfsB,EAgBtB,CAhBsB,CAAjB,CAAP;AAtDJ;AAyEA,WAAO,IAAP;AA1EgC,GA4ElC;AApFyH,CAAzH;;",
"sources":["node_modules/@pixi/core/lib/shader/utils/defaultValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$shader$utils$defaultValue\"] = function(global,require,module,exports) {\n\"use strict\";\nfunction booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++)\n    array[i] = !1;\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return !1;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\nexports.defaultValue = defaultValue;\n//# sourceMappingURL=defaultValue.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","booleanArray","size","array","Array","i","length","defaultValue","type","Float32Array","Int32Array","Uint32Array"]
}
