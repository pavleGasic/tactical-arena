{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$createUboElementsWGSL.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/shader/utils/createUboElementsWGSL.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$createUboElementsWGSL\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst WGSL_ALIGN_SIZE_DATA = {\n  i32: { align: 4, size: 4 },\n  u32: { align: 4, size: 4 },\n  f32: { align: 4, size: 4 },\n  f16: { align: 2, size: 2 },\n  \"vec2<i32>\": { align: 8, size: 8 },\n  \"vec2<u32>\": { align: 8, size: 8 },\n  \"vec2<f32>\": { align: 8, size: 8 },\n  \"vec2<f16>\": { align: 4, size: 4 },\n  \"vec3<i32>\": { align: 16, size: 12 },\n  \"vec3<u32>\": { align: 16, size: 12 },\n  \"vec3<f32>\": { align: 16, size: 12 },\n  \"vec3<f16>\": { align: 8, size: 6 },\n  \"vec4<i32>\": { align: 16, size: 16 },\n  \"vec4<u32>\": { align: 16, size: 16 },\n  \"vec4<f32>\": { align: 16, size: 16 },\n  \"vec4<f16>\": { align: 8, size: 8 },\n  \"mat2x2<f32>\": { align: 8, size: 16 },\n  \"mat2x2<f16>\": { align: 4, size: 8 },\n  \"mat3x2<f32>\": { align: 8, size: 24 },\n  \"mat3x2<f16>\": { align: 4, size: 12 },\n  \"mat4x2<f32>\": { align: 8, size: 32 },\n  \"mat4x2<f16>\": { align: 4, size: 16 },\n  \"mat2x3<f32>\": { align: 16, size: 32 },\n  \"mat2x3<f16>\": { align: 8, size: 16 },\n  \"mat3x3<f32>\": { align: 16, size: 48 },\n  \"mat3x3<f16>\": { align: 8, size: 24 },\n  \"mat4x3<f32>\": { align: 16, size: 64 },\n  \"mat4x3<f16>\": { align: 8, size: 32 },\n  \"mat2x4<f32>\": { align: 16, size: 32 },\n  \"mat2x4<f16>\": { align: 8, size: 16 },\n  \"mat3x4<f32>\": { align: 16, size: 48 },\n  \"mat3x4<f16>\": { align: 8, size: 24 },\n  \"mat4x4<f32>\": { align: 16, size: 64 },\n  \"mat4x4<f16>\": { align: 8, size: 32 }\n};\nfunction createUboElementsWGSL(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    let size = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].size;\n    const align = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].align;\n    if (!WGSL_ALIGN_SIZE_DATA[uboElement.data.type]) {\n      throw new Error(`[Pixi.js] WebGPU UniformBuffer: Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, align) * uboElement.data.size;\n    }\n    offset = Math.ceil(offset / align) * align;\n    uboElement.size = size;\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexports.WGSL_ALIGN_SIZE_DATA = WGSL_ALIGN_SIZE_DATA;\nexports.createUboElementsWGSL = createUboElementsWGSL;\n//# sourceMappingURL=createUboElementsWGSL.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","WGSL_ALIGN_SIZE_DATA","i32","align","size","u32","f32","f16","createUboElementsWGSL","uniformData","uboElements","map","data","offset","i","length","uboElement","type","Error","Math","max","ceil"]
}
