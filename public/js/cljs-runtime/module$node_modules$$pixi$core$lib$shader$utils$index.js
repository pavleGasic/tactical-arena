shadow$provide.module$node_modules$$pixi$core$lib$shader$utils$index = function(global, require, module, exports) {
  global = require("module$node_modules$$pixi$core$lib$shader$utils$checkMaxIfStatementsInShader");
  module = require("module$node_modules$$pixi$core$lib$shader$utils$compileShader");
  var defaultValue = require("module$node_modules$$pixi$core$lib$shader$utils$defaultValue"), generateUniformsSync = require("module$node_modules$$pixi$core$lib$shader$utils$generateUniformsSync"), getMaxFragmentPrecision = require("module$node_modules$$pixi$core$lib$shader$utils$getMaxFragmentPrecision"), getTestContext = require("module$node_modules$$pixi$core$lib$shader$utils$getTestContext"), logProgramError = require("module$node_modules$$pixi$core$lib$shader$utils$logProgramError"), mapSize = 
  require("module$node_modules$$pixi$core$lib$shader$utils$mapSize"), mapType = require("module$node_modules$$pixi$core$lib$shader$utils$mapType"), setPrecision = require("module$node_modules$$pixi$core$lib$shader$utils$setPrecision"), uniformParsers = require("module$node_modules$$pixi$core$lib$shader$utils$uniformParsers");
  require = require("module$node_modules$$pixi$core$lib$shader$utils$unsafeEvalSupported");
  exports.checkMaxIfStatementsInShader = global.checkMaxIfStatementsInShader;
  exports.compileShader = module.compileShader;
  exports.defaultValue = defaultValue.defaultValue;
  exports.generateUniformsSync = generateUniformsSync.generateUniformsSync;
  exports.getMaxFragmentPrecision = getMaxFragmentPrecision.getMaxFragmentPrecision;
  exports.getTestContext = getTestContext.getTestContext;
  exports.logProgramError = logProgramError.logProgramError;
  exports.mapSize = mapSize.mapSize;
  exports.mapType = mapType.mapType;
  exports.setPrecision = setPrecision.setPrecision;
  exports.uniformParsers = uniformParsers.uniformParsers;
  exports.unsafeEvalSupported = require.unsafeEvalSupported;
};

//# sourceMappingURL=module$node_modules$$pixi$core$lib$shader$utils$index.js.map
