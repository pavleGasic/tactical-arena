shadow$provide.module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadSVG = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index"), checkDataUrl = require("module$node_modules$$pixi$assets$lib$utils$checkDataUrl"), checkExtension = require("module$node_modules$$pixi$assets$lib$utils$checkExtension");
  global = require("module$node_modules$$pixi$assets$lib$loader$parsers$LoaderParser");
  module = require("module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadTextures");
  var createTexture = require("module$node_modules$$pixi$assets$lib$loader$parsers$textures$utils$createTexture");
  require = {extension:{type:core.ExtensionType.LoadParser, priority:global.LoaderParserPriority.High}, name:"loadSVG", test(url) {
    return checkDataUrl.checkDataUrl(url, "image/svg+xml") || checkExtension.checkExtension(url, ".svg");
  }, async testParse(data) {
    return core.SVGResource.test(data);
  }, async parse(asset, data, loader) {
    const src = new core.SVGResource(asset, data?.data?.resourceOptions);
    await src.load();
    asset = new core.BaseTexture(src, {resolution:core.utils.getResolutionOfUrl(asset), ...data?.data});
    return asset.resource.src = data.src, createTexture.createTexture(asset, loader, data.src);
  }, async load(url, _options) {
    return (await core.settings.ADAPTER.fetch(url)).text();
  }, unload:module.loadTextures.unload};
  core.extensions.add(require);
  exports.loadSVG = require;
};

//# sourceMappingURL=module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadSVG.js.map
