{
"version":3,
"file":"module$node_modules$$pixi$graphics$lib$utils$BezierUtils.js",
"lineCount":37,
"mappings":"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",
"sources":["node_modules/@pixi/graphics/lib/utils/BezierUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$graphics$lib$utils$BezierUtils\"] = function(global,require,module,exports) {\n\"use strict\";\nvar _const = require(\"../const.js\");\nclass BezierUtils {\n  /**\n   * Calculate length of bezier curve.\n   * Analytical solution is impossible, since it involves an integral that does not integrate in general.\n   * Therefore numerical solution is used.\n   * @private\n   * @param fromX - Starting point x\n   * @param fromY - Starting point y\n   * @param cpX - Control point x\n   * @param cpY - Control point y\n   * @param cpX2 - Second Control point x\n   * @param cpY2 - Second Control point y\n   * @param toX - Destination point x\n   * @param toY - Destination point y\n   * @returns - Length of bezier curve\n   */\n  static curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY) {\n    let result = 0, t = 0, t2 = 0, t3 = 0, nt = 0, nt2 = 0, nt3 = 0, x = 0, y = 0, dx = 0, dy = 0, prevX = fromX, prevY = fromY;\n    for (let i = 1; i <= 10; ++i)\n      t = i / 10, t2 = t * t, t3 = t2 * t, nt = 1 - t, nt2 = nt * nt, nt3 = nt2 * nt, x = nt3 * fromX + 3 * nt2 * t * cpX + 3 * nt * t2 * cpX2 + t3 * toX, y = nt3 * fromY + 3 * nt2 * t * cpY + 3 * nt * t2 * cpY2 + t3 * toY, dx = prevX - x, dy = prevY - y, prevX = x, prevY = y, result += Math.sqrt(dx * dx + dy * dy);\n    return result;\n  }\n  /**\n   * Calculate the points for a bezier curve and then draws it.\n   *\n   * Ignored from docs since it is not directly exposed.\n   * @ignore\n   * @param cpX - Control point x\n   * @param cpY - Control point y\n   * @param cpX2 - Second Control point x\n   * @param cpY2 - Second Control point y\n   * @param toX - Destination point x\n   * @param toY - Destination point y\n   * @param points - Path array to push points into\n   */\n  static curveTo(cpX, cpY, cpX2, cpY2, toX, toY, points) {\n    const fromX = points[points.length - 2], fromY = points[points.length - 1];\n    points.length -= 2;\n    const n = _const.curves._segmentsCount(\n      BezierUtils.curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY)\n    );\n    let dt = 0, dt2 = 0, dt3 = 0, t2 = 0, t3 = 0;\n    points.push(fromX, fromY);\n    for (let i = 1, j = 0; i <= n; ++i)\n      j = i / n, dt = 1 - j, dt2 = dt * dt, dt3 = dt2 * dt, t2 = j * j, t3 = t2 * j, points.push(\n        dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX,\n        dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY\n      );\n  }\n}\nexports.BezierUtils = BezierUtils;\n//# sourceMappingURL=BezierUtils.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","BezierUtils","curveLength","fromX","fromY","cpX","cpY","cpX2","cpY2","toX","toY","result","nt","nt2","nt3","x","prevX","prevY","i","t","t2","t3","y","dx","dy","Math","sqrt","curveTo","points","length","n","curves","_segmentsCount","dt","dt2","dt3","push","j"]
}
