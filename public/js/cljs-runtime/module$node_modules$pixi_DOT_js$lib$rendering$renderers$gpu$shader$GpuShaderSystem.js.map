{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$GpuShaderSystem.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAA,kFAAA,GAAuG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG3IC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AAEJ,cAAA;AACA,OAAMC,gBAAN;AACEC,eAAW,EAAG;AACZ,UAAKC,CAAAA,eAAL,GAAuCC,MAAOC,CAAAA,MAAP,CAAc,IAAd,CAAvC;AADY;AAGdC,iBAAa,CAACC,GAAD,CAAM;AACjB,UAAKC,CAAAA,IAAL,GAAYD,GAAZ;AACA,UAAKE,CAAAA,WAAL,GAAmBF,GAAIG,CAAAA,MAAOC,CAAAA,MAAOC,CAAAA,gCAArC;AAFiB;AAInBC,kBAAc,CAACC,OAAD,CAAU;AACtB,aAAO,IAAKX,CAAAA,eAAL,CAAqBW,OAAQC,CAAAA,UAA7B,CAAP,IAAmD,IAAKC,CAAAA,qBAAL,CAA2BF,OAA3B,CAAnD;AADsB;AAGxBE,yBAAqB,CAACF,OAAD,CAAU;AAC7B,YAAMJ,SAAS,IAAKF,CAAAA,IAAKE,CAAAA,MAAzB,EACMO,aAAaH,OAAQI,CAAAA,SAAUC,CAAAA,GAAlB,CAAuBC,KAAD,IAAWV,MAAOW,CAAAA,qBAAP,CAA6B,CAAEC,QAASF,KAAX,CAA7B,CAAjC,CADnB;AAGA,UAAKjB,CAAAA,eAAL,CAAqBW,OAAQC,CAAAA,UAA7B,CAAA,GAA2C,CACzCE,UADyC,EAEzCM,SAAUb,MAAOc,CAAAA,oBAAP,CAHeC,CAAEC,iBAAkBT,UAApBQ,CAGf,CAF+B,CAA3C;AAIA,aAAO,IAAKtB,CAAAA,eAAL,CAAqBW,OAAQC,CAAAA,UAA7B,CAAP;AAR6B;AAU/BY,WAAO,EAAG;AAER,UAAKxB,CAAAA,eAAL,GADA,IAAKK,CAAAA,IACL,GADY,IACZ;AAFQ;AArBZ;AA2BAP,iBAAgB2B,CAAAA,SAAhB,GAA4B,CAC1BC,KAAM,CACJ7B,MAAW8B,CAAAA,aAAcC,CAAAA,YADrB,CADoB,EAI1BC,KAAM,QAJoB,CAA5B;AAOAjC,SAAQE,CAAAA,eAAR,GAA0BA,eAA1B;AAxC+I,CAA/I;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/shader/GpuShaderSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$GpuShaderSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\n\n\"use strict\";\nclass GpuShaderSystem {\n  constructor() {\n    this._gpuProgramData = /* @__PURE__ */ Object.create(null);\n  }\n  contextChange(gpu) {\n    this._gpu = gpu;\n    this.maxTextures = gpu.device.limits.maxSampledTexturesPerShaderStage;\n  }\n  getProgramData(program) {\n    return this._gpuProgramData[program._layoutKey] || this._createGPUProgramData(program);\n  }\n  _createGPUProgramData(program) {\n    const device = this._gpu.device;\n    const bindGroups = program.gpuLayout.map((group) => device.createBindGroupLayout({ entries: group }));\n    const pipelineLayoutDesc = { bindGroupLayouts: bindGroups };\n    this._gpuProgramData[program._layoutKey] = {\n      bindGroups,\n      pipeline: device.createPipelineLayout(pipelineLayoutDesc)\n    };\n    return this._gpuProgramData[program._layoutKey];\n  }\n  destroy() {\n    this._gpu = null;\n    this._gpuProgramData = null;\n  }\n}\n/** @ignore */\nGpuShaderSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGPUSystem\n  ],\n  name: \"shader\"\n};\n\nexports.GpuShaderSystem = GpuShaderSystem;\n//# sourceMappingURL=GpuShaderSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","GpuShaderSystem","constructor","_gpuProgramData","Object","create","contextChange","gpu","_gpu","maxTextures","device","limits","maxSampledTexturesPerShaderStage","getProgramData","program","_layoutKey","_createGPUProgramData","bindGroups","gpuLayout","map","group","createBindGroupLayout","entries","pipeline","createPipelineLayout","pipelineLayoutDesc","bindGroupLayouts","destroy","extension","type","ExtensionType","WebGPUSystem","name"]
}
