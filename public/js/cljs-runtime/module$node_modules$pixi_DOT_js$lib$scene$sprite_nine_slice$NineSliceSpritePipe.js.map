{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$sprite_nine_slice$NineSliceSpritePipe.js",
"lineCount":62,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/sprite-nine-slice/NineSliceSpritePipe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$sprite_nine_slice$NineSliceSpritePipe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../extensions/Extensions.js');\nvar PoolGroup = require('../../utils/pool/PoolGroup.js');\nvar BatchableMesh = require('../mesh/shared/BatchableMesh.js');\nvar NineSliceGeometry = require('./NineSliceGeometry.js');\n\n\"use strict\";\nclass NineSliceSpritePipe {\n  constructor(renderer) {\n    this._gpuSpriteHash = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuSpriteHash\");\n  }\n  addRenderable(sprite, instructionSet) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    this._renderer.renderPipes.batch.addToBatch(gpuSprite, instructionSet);\n  }\n  updateRenderable(sprite) {\n    const gpuSprite = this._gpuSpriteHash[sprite.uid];\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    gpuSprite._batcher.updateElement(gpuSprite);\n  }\n  validateRenderable(sprite) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    return !gpuSprite._batcher.checkAndUpdateTexture(\n      gpuSprite,\n      sprite._texture\n    );\n  }\n  destroyRenderable(sprite) {\n    const batchableMesh = this._gpuSpriteHash[sprite.uid];\n    PoolGroup.BigPool.return(batchableMesh.geometry);\n    PoolGroup.BigPool.return(batchableMesh);\n    this._gpuSpriteHash[sprite.uid] = null;\n    sprite.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  _updateBatchableSprite(sprite, batchableSprite) {\n    batchableSprite.geometry.update(sprite);\n    batchableSprite.setTexture(sprite._texture);\n  }\n  _getGpuSprite(sprite) {\n    return this._gpuSpriteHash[sprite.uid] || this._initGPUSprite(sprite);\n  }\n  _initGPUSprite(sprite) {\n    const batchableMesh = PoolGroup.BigPool.get(BatchableMesh.BatchableMesh);\n    batchableMesh.geometry = PoolGroup.BigPool.get(NineSliceGeometry.NineSliceGeometry);\n    batchableMesh.renderable = sprite;\n    batchableMesh.transform = sprite.groupTransform;\n    batchableMesh.texture = sprite._texture;\n    batchableMesh.roundPixels = this._renderer._roundPixels | sprite._roundPixels;\n    this._gpuSpriteHash[sprite.uid] = batchableMesh;\n    if (!sprite.didViewUpdate) {\n      this._updateBatchableSprite(sprite, batchableMesh);\n    }\n    sprite.on(\"destroyed\", this._destroyRenderableBound);\n    return batchableMesh;\n  }\n  destroy() {\n    for (const i in this._gpuSpriteHash) {\n      const batchableMesh = this._gpuSpriteHash[i];\n      batchableMesh.geometry.destroy();\n    }\n    this._gpuSpriteHash = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nNineSliceSpritePipe.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLPipes,\n    Extensions.ExtensionType.WebGPUPipes,\n    Extensions.ExtensionType.CanvasPipes\n  ],\n  name: \"nineSliceSprite\"\n};\n\nexports.NineSliceSpritePipe = NineSliceSpritePipe;\n//# sourceMappingURL=NineSliceSpritePipe.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","PoolGroup","BatchableMesh","NineSliceGeometry","NineSliceSpritePipe","constructor","renderer","_gpuSpriteHash","Object","create","_destroyRenderableBound","destroyRenderable","bind","_renderer","renderableGC","addManagedHash","addRenderable","sprite","instructionSet","gpuSprite","_getGpuSprite","didViewUpdate","_updateBatchableSprite","renderPipes","batch","addToBatch","updateRenderable","uid","_batcher","updateElement","validateRenderable","checkAndUpdateTexture","_texture","batchableMesh","BigPool","return","geometry","off","batchableSprite","update","setTexture","_initGPUSprite","get","renderable","transform","groupTransform","texture","roundPixels","_roundPixels","on","destroy","i","extension","type","ExtensionType","WebGLPipes","WebGPUPipes","CanvasPipes","name"]
}
