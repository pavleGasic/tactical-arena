{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$utils$createUboElementsSTD40.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAA,8FAAA,GAAmH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAI3J,QAAMC,qBAAqB,CACzBC,IAAK,CADoB,EAEzBC,IAAK,CAFoB,EAGzB,kBAAa,CAHY,EAIzB,kBAAa,EAJY,EAKzB,kBAAa,EALY,EAMzB,kBAAa,CANY,EAOzB,kBAAa,EAPY,EAQzB,kBAAa,EARY,EASzB,oBAAe,EATU,EAUzB,oBAAe,EAVU,EAWzB,oBAAe,EAXU,CAA3B;AA8DAH,SAAQC,CAAAA,kBAAR,GAA6BA,kBAA7B;AACAD,SAAQI,CAAAA,sBAAR,GAlCAA,QAA+B,CAACC,WAAD,CAAc;AACrCC,eAAAA,GAAcD,WAAYE,CAAAA,GAAZ,CAAiBC,IAAD,IAAW,EAC7CA,IAD6C,EAE7CC,OAAQ,CAFqC,EAG7CC,KAAM,CAHuC,EAA3B,CAAdJ;AAMN,QAAII,OAAO,CAAX,EACID,SAAS,CADb;AAEA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,CAAhB,GAAoBL,WAAYM,CAAAA,MAAhC,EAAwCD,CAAA,EAAxC,CAA6C;AAC3C,YAAME,aAAaP,WAAA,CAAYK,CAAZ,CAAnB;AACAD,UAAA,GAAOT,kBAAA,CAAmBY,UAAWL,CAAAA,IAAKM,CAAAA,IAAnC,CAAP;AACA,UAAI,CAACJ,IAAL;AACE,cAAUK,KAAJ,CAAW,gBAAeF,UAAWL,CAAAA,IAAKM,CAAAA,IAA/B,EAAX,CAAN;AADF;AAG2B,OAA3B,GAAID,UAAWL,CAAAA,IAAKE,CAAAA,IAApB,KACEA,IADF,GACSM,IAAKC,CAAAA,GAAL,CAASP,IAAT,EAVOQ,EAUP,CADT,GACqCL,UAAWL,CAAAA,IAAKE,CAAAA,IADrD;AAGA,YAAMS,WAAoB,EAAT,KAAAT,IAAA,GAAc,EAAd,GAAmBA,IAApC;AACAG,gBAAWH,CAAAA,IAAX,GAAkBA,IAAlB;AACA,YAAMU,YAAYX,MAAZW,GAdUF,EAchB;AAEET,YAAA,GADc,CAAhB,GAAIW,SAAJ,IAfgBF,EAehB,GAAiCE,SAAjC,GAA6CD,QAA7C,GACEV,MADF,IAfgBS,EAehB,GACyBE,SADzB,IACsC,EADtC,GAGEX,MAHF,IAGaC,IAHb,GAGoBU,SAHpB,GAGgCV,IAHhC,IAGwCA,IAFtC;AAIFG,gBAAWJ,CAAAA,MAAX,GAAoBA,MAApB;AACAA,YAAA,IAAUC,IAAV;AAlB2C;AAoB7CD,UAAA,GAAkC,EAAlC,GAASO,IAAKK,CAAAA,IAAL,CAAUZ,MAAV,GAAmB,EAAnB,CAAT;AACA,WAAO,CAAEH,YAAAA,WAAF,EAAeI,KAAMD,MAArB,CAAP;AA9B2C,GAkC7C;AAnE2J,CAA3J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/utils/createUboElementsSTD40.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$utils$createUboElementsSTD40\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst WGSL_TO_STD40_SIZE = {\n  f32: 4,\n  i32: 4,\n  \"vec2<f32>\": 8,\n  \"vec3<f32>\": 12,\n  \"vec4<f32>\": 16,\n  \"vec2<i32>\": 8,\n  \"vec3<i32>\": 12,\n  \"vec4<i32>\": 16,\n  \"mat2x2<f32>\": 16 * 2,\n  \"mat3x3<f32>\": 16 * 3,\n  \"mat4x4<f32>\": 16 * 4\n  // TODO - not essential for now but support these in the future\n  // int:      4,\n  // ivec2:    8,\n  // ivec3:    12,\n  // ivec4:    16,\n  // uint:     4,\n  // uvec2:    8,\n  // uvec3:    12,\n  // uvec4:    16,\n  // bool:     4,\n  // bvec2:    8,\n  // bvec3:    12,\n  // bvec4:    16,\n  // mat2:     16 * 2,\n  // mat3:     16 * 3,\n  // mat4:     16 * 4,\n};\nfunction createUboElementsSTD40(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  const chunkSize = 16;\n  let size = 0;\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    size = WGSL_TO_STD40_SIZE[uboElement.data.type];\n    if (!size) {\n      throw new Error(`Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, chunkSize) * uboElement.data.size;\n    }\n    const boundary = size === 12 ? 16 : size;\n    uboElement.size = size;\n    const curOffset = offset % chunkSize;\n    if (curOffset > 0 && chunkSize - curOffset < boundary) {\n      offset += (chunkSize - curOffset) % 16;\n    } else {\n      offset += (size - curOffset % size) % size;\n    }\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexports.WGSL_TO_STD40_SIZE = WGSL_TO_STD40_SIZE;\nexports.createUboElementsSTD40 = createUboElementsSTD40;\n//# sourceMappingURL=createUboElementsSTD40.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","WGSL_TO_STD40_SIZE","f32","i32","createUboElementsSTD40","uniformData","uboElements","map","data","offset","size","i","length","uboElement","type","Error","Math","max","chunkSize","boundary","curOffset","ceil"]
}
