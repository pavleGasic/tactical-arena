{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text_bitmap$asset$bitmapFontXMLParser.js",
"lineCount":33,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/text-bitmap/asset/bitmapFontXMLParser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text_bitmap$asset$bitmapFontXMLParser\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst bitmapFontXMLParser = {\n  test(data) {\n    const xml = data;\n    return typeof xml !== \"string\" && \"getElementsByTagName\" in xml && xml.getElementsByTagName(\"page\").length && xml.getElementsByTagName(\"info\")[0].getAttribute(\"face\") !== null;\n  },\n  parse(xml) {\n    const data = {\n      chars: {},\n      pages: [],\n      lineHeight: 0,\n      fontSize: 0,\n      fontFamily: \"\",\n      distanceField: null,\n      baseLineOffset: 0\n    };\n    const info = xml.getElementsByTagName(\"info\")[0];\n    const common = xml.getElementsByTagName(\"common\")[0];\n    const distanceField = xml.getElementsByTagName(\"distanceField\")[0];\n    if (distanceField) {\n      data.distanceField = {\n        type: distanceField.getAttribute(\"fieldType\"),\n        range: parseInt(distanceField.getAttribute(\"distanceRange\"), 10)\n      };\n    }\n    const page = xml.getElementsByTagName(\"page\");\n    const char = xml.getElementsByTagName(\"char\");\n    const kerning = xml.getElementsByTagName(\"kerning\");\n    data.fontSize = parseInt(info.getAttribute(\"size\"), 10);\n    data.fontFamily = info.getAttribute(\"face\");\n    data.lineHeight = parseInt(common.getAttribute(\"lineHeight\"), 10);\n    for (let i = 0; i < page.length; i++) {\n      data.pages.push({\n        id: parseInt(page[i].getAttribute(\"id\"), 10) || 0,\n        file: page[i].getAttribute(\"file\")\n      });\n    }\n    const map = {};\n    data.baseLineOffset = data.lineHeight - parseInt(common.getAttribute(\"base\"), 10);\n    for (let i = 0; i < char.length; i++) {\n      const charNode = char[i];\n      const id = parseInt(charNode.getAttribute(\"id\"), 10);\n      let letter = charNode.getAttribute(\"letter\") ?? charNode.getAttribute(\"char\") ?? String.fromCharCode(id);\n      if (letter === \"space\")\n        letter = \" \";\n      map[id] = letter;\n      data.chars[letter] = {\n        id,\n        // texture deets..\n        page: parseInt(charNode.getAttribute(\"page\"), 10) || 0,\n        x: parseInt(charNode.getAttribute(\"x\"), 10),\n        y: parseInt(charNode.getAttribute(\"y\"), 10),\n        width: parseInt(charNode.getAttribute(\"width\"), 10),\n        height: parseInt(charNode.getAttribute(\"height\"), 10),\n        // render deets..\n        xOffset: parseInt(charNode.getAttribute(\"xoffset\"), 10),\n        yOffset: parseInt(charNode.getAttribute(\"yoffset\"), 10),\n        // + baseLineOffset,\n        xAdvance: parseInt(charNode.getAttribute(\"xadvance\"), 10),\n        kerning: {}\n      };\n    }\n    for (let i = 0; i < kerning.length; i++) {\n      const first = parseInt(kerning[i].getAttribute(\"first\"), 10);\n      const second = parseInt(kerning[i].getAttribute(\"second\"), 10);\n      const amount = parseInt(kerning[i].getAttribute(\"amount\"), 10);\n      data.chars[map[second]].kerning[map[first]] = amount;\n    }\n    return data;\n  }\n};\n\nexports.bitmapFontXMLParser = bitmapFontXMLParser;\n//# sourceMappingURL=bitmapFontXMLParser.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","bitmapFontXMLParser","test","data","getElementsByTagName","length","getAttribute","parse","xml","chars","pages","lineHeight","fontSize","fontFamily","distanceField","baseLineOffset","info","common","type","range","parseInt","page","char","kerning","i","push","id","file","map","charNode","letter","String","fromCharCode","x","y","width","height","xOffset","yOffset","xAdvance","first","second","amount"]
}
