{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$utils$createIndicesForQuads.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,+FAAA,GAAoH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAyB5JA,SAAQC,CAAAA,qBAAR,GArBAA,QAA8B,CAACC,IAAD,EAAOC,SAAA,GAAY,IAAnB,CAAyB;AAChCD,QAAfE,IAAsB,CAAtBA;AACa,SAAnB,GAAIA,IAAJ,GACED,SADF,KACgBA,SADhB,GAC4B,IAAIE,WAAJ,CAAgBD,IAAhB,CAD5B,IAGED,SAHF,KAGgBA,SAHhB,GAG4B,IAAIG,WAAJ,CAAgBF,IAAhB,CAH5B,CAAA;AAKA,QAAID,SAAUI,CAAAA,MAAd,KAAyBH,IAAzB;AACE,YAAUI,KAAJ,CAAW,uCAAsCL,SAAUI,CAAAA,MAAhD,iBAAuEH,IAAvE,EAAX,CAAN;AADF;AAGA,SAAK,IAAIK,IAAI,CAAR,EAAWC,IAAI,CAApB,EAAuBD,CAAvB,GAA2BL,IAA3B,EAAyCK,CAAA,IAAK,CAAL,EAAQC,CAAR,IAAa,CAAtD;AACEP,eAAA,CAAUM,CAAV,GAAc,CAAd,CAKA,GALmBC,CAKnB,GALuB,CAKvB,EAJAP,SAAA,CAAUM,CAAV,GAAc,CAAd,CAIA,GAJmBC,CAInB,GAJuB,CAIvB,EAHAP,SAAA,CAAUM,CAAV,GAAc,CAAd,CAGA,GAHmBC,CAGnB,GAHuB,CAGvB,EAFAP,SAAA,CAAUM,CAAV,GAAc,CAAd,CAEA,GAFmBC,CAEnB,GAFuB,CAEvB,EADAP,SAAA,CAAUM,CAAV,GAAc,CAAd,CACA,GADmBC,CACnB,GADuB,CACvB,EAAAP,SAAA,CAAUM,CAAV,GAAc,CAAd,CAAA,GAAmBC,CAAnB,GAAuB,CAAvB;AANF;AAQA,WAAOP,SAAP;AAlBqD,GAqBvD;AAzB4J,CAA5J;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/particle-container/shared/utils/createIndicesForQuads.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$utils$createIndicesForQuads\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction createIndicesForQuads(size, outBuffer = null) {\n  const totalIndices = size * 6;\n  if (totalIndices > 65535) {\n    outBuffer || (outBuffer = new Uint32Array(totalIndices));\n  } else {\n    outBuffer || (outBuffer = new Uint16Array(totalIndices));\n  }\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n  }\n  for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n  return outBuffer;\n}\n\nexports.createIndicesForQuads = createIndicesForQuads;\n//# sourceMappingURL=createIndicesForQuads.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","createIndicesForQuads","size","outBuffer","totalIndices","Uint32Array","Uint16Array","length","Error","i","j"]
}
