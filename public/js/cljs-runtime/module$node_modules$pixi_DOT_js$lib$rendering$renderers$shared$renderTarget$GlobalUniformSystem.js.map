{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$renderTarget$GlobalUniformSystem.js",
"lineCount":74,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/renderTarget/GlobalUniformSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$renderTarget$GlobalUniformSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\nvar Matrix = require('../../../../maths/matrix/Matrix.js');\nvar Point = require('../../../../maths/point/Point.js');\nvar colorToUniform = require('../../../../scene/graphics/gpu/colorToUniform.js');\nvar BindGroup = require('../../gpu/shader/BindGroup.js');\nvar types = require('../../types.js');\nvar UniformGroup = require('../shader/UniformGroup.js');\n\n\"use strict\";\nclass GlobalUniformSystem {\n  constructor(renderer) {\n    this._stackIndex = 0;\n    this._globalUniformDataStack = [];\n    this._uniformsPool = [];\n    this._activeUniforms = [];\n    this._bindGroupPool = [];\n    this._activeBindGroups = [];\n    this._renderer = renderer;\n  }\n  reset() {\n    this._stackIndex = 0;\n    for (let i = 0; i < this._activeUniforms.length; i++) {\n      this._uniformsPool.push(this._activeUniforms[i]);\n    }\n    for (let i = 0; i < this._activeBindGroups.length; i++) {\n      this._bindGroupPool.push(this._activeBindGroups[i]);\n    }\n    this._activeUniforms.length = 0;\n    this._activeBindGroups.length = 0;\n  }\n  start(options) {\n    this.reset();\n    this.push(options);\n  }\n  bind({\n    size,\n    projectionMatrix,\n    worldTransformMatrix,\n    worldColor,\n    offset\n  }) {\n    const renderTarget = this._renderer.renderTarget.renderTarget;\n    const currentGlobalUniformData = this._stackIndex ? this._globalUniformDataStack[this._stackIndex - 1] : {\n      projectionData: renderTarget,\n      worldTransformMatrix: new Matrix.Matrix(),\n      worldColor: 4294967295,\n      offset: new Point.Point()\n    };\n    const globalUniformData = {\n      projectionMatrix: projectionMatrix || this._renderer.renderTarget.projectionMatrix,\n      resolution: size || renderTarget.size,\n      worldTransformMatrix: worldTransformMatrix || currentGlobalUniformData.worldTransformMatrix,\n      worldColor: worldColor || currentGlobalUniformData.worldColor,\n      offset: offset || currentGlobalUniformData.offset,\n      bindGroup: null\n    };\n    const uniformGroup = this._uniformsPool.pop() || this._createUniforms();\n    this._activeUniforms.push(uniformGroup);\n    const uniforms = uniformGroup.uniforms;\n    uniforms.uProjectionMatrix = globalUniformData.projectionMatrix;\n    uniforms.uResolution = globalUniformData.resolution;\n    uniforms.uWorldTransformMatrix.copyFrom(globalUniformData.worldTransformMatrix);\n    uniforms.uWorldTransformMatrix.tx -= globalUniformData.offset.x;\n    uniforms.uWorldTransformMatrix.ty -= globalUniformData.offset.y;\n    colorToUniform.color32BitToUniform(\n      globalUniformData.worldColor,\n      uniforms.uWorldColorAlpha,\n      0\n    );\n    uniformGroup.update();\n    let bindGroup;\n    if (this._renderer.renderPipes.uniformBatch) {\n      bindGroup = this._renderer.renderPipes.uniformBatch.getUniformBindGroup(uniformGroup, false);\n    } else {\n      bindGroup = this._bindGroupPool.pop() || new BindGroup.BindGroup();\n      this._activeBindGroups.push(bindGroup);\n      bindGroup.setResource(uniformGroup, 0);\n    }\n    globalUniformData.bindGroup = bindGroup;\n    this._currentGlobalUniformData = globalUniformData;\n  }\n  push(options) {\n    this.bind(options);\n    this._globalUniformDataStack[this._stackIndex++] = this._currentGlobalUniformData;\n  }\n  pop() {\n    this._currentGlobalUniformData = this._globalUniformDataStack[--this._stackIndex - 1];\n    if (this._renderer.type === types.RendererType.WEBGL) {\n      this._currentGlobalUniformData.bindGroup.resources[0].update();\n    }\n  }\n  get bindGroup() {\n    return this._currentGlobalUniformData.bindGroup;\n  }\n  get globalUniformData() {\n    return this._currentGlobalUniformData;\n  }\n  get uniformGroup() {\n    return this._currentGlobalUniformData.bindGroup.resources[0];\n  }\n  _createUniforms() {\n    const globalUniforms = new UniformGroup.UniformGroup({\n      uProjectionMatrix: { value: new Matrix.Matrix(), type: \"mat3x3<f32>\" },\n      uWorldTransformMatrix: { value: new Matrix.Matrix(), type: \"mat3x3<f32>\" },\n      // TODO - someone smart - set this to be a unorm8x4 rather than a vec4<f32>\n      uWorldColorAlpha: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uResolution: { value: [0, 0], type: \"vec2<f32>\" }\n    }, {\n      isStatic: true\n    });\n    return globalUniforms;\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlobalUniformSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLSystem,\n    Extensions.ExtensionType.WebGPUSystem,\n    Extensions.ExtensionType.CanvasSystem\n  ],\n  name: \"globalUniforms\"\n};\n\nexports.GlobalUniformSystem = GlobalUniformSystem;\n//# sourceMappingURL=GlobalUniformSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Matrix","Point","colorToUniform","BindGroup","types","UniformGroup","GlobalUniformSystem","constructor","renderer","_stackIndex","_globalUniformDataStack","_uniformsPool","_activeUniforms","_bindGroupPool","_activeBindGroups","_renderer","reset","i","length","push","start","options","bind","size","projectionMatrix","worldTransformMatrix","worldColor","offset","renderTarget","currentGlobalUniformData","projectionData","globalUniformData","resolution","bindGroup","uniformGroup","pop","_createUniforms","uniforms","uProjectionMatrix","uResolution","uWorldTransformMatrix","copyFrom","tx","x","ty","y","color32BitToUniform","uWorldColorAlpha","update","renderPipes","uniformBatch","getUniformBindGroup","setResource","_currentGlobalUniformData","type","RendererType","WEBGL","resources","globalUniforms","value","Float32Array","isStatic","destroy","extension","ExtensionType","WebGLSystem","WebGPUSystem","CanvasSystem","name"]
}
