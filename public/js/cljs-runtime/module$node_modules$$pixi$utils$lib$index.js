shadow$provide.module$node_modules$$pixi$utils$lib$index = function(global, require, module, exports) {
  require("module$node_modules$$pixi$utils$lib$settings");
  var settings = require("module$node_modules$$pixi$settings$lib$index");
  global = require("module$node_modules$eventemitter3$index");
  module = require("module$node_modules$earcut$src$earcut");
  var url = require("module$node_modules$$pixi$utils$lib$url"), path = require("module$node_modules$$pixi$utils$lib$path"), detectVideoAlphaMode = require("module$node_modules$$pixi$utils$lib$browser$detectVideoAlphaMode"), hello = require("module$node_modules$$pixi$utils$lib$browser$hello"), isWebGLSupported = require("module$node_modules$$pixi$utils$lib$browser$isWebGLSupported"), hex = require("module$node_modules$$pixi$utils$lib$color$hex"), premultiply = require("module$node_modules$$pixi$utils$lib$color$premultiply"), 
  _const = require("module$node_modules$$pixi$utils$lib$const"), createIndicesForQuads = require("module$node_modules$$pixi$utils$lib$data$createIndicesForQuads"), getBufferType = require("module$node_modules$$pixi$utils$lib$data$getBufferType"), interleaveTypedArrays = require("module$node_modules$$pixi$utils$lib$data$interleaveTypedArrays"), pow2 = require("module$node_modules$$pixi$utils$lib$data$pow2"), removeItems = require("module$node_modules$$pixi$utils$lib$data$removeItems"), sign = require("module$node_modules$$pixi$utils$lib$data$sign"), 
  uid = require("module$node_modules$$pixi$utils$lib$data$uid"), deprecation = require("module$node_modules$$pixi$utils$lib$logging$deprecation"), BoundingBox = require("module$node_modules$$pixi$utils$lib$media$BoundingBox"), caches = require("module$node_modules$$pixi$utils$lib$media$caches"), CanvasRenderTarget = require("module$node_modules$$pixi$utils$lib$media$CanvasRenderTarget"), getCanvasBoundingBox = require("module$node_modules$$pixi$utils$lib$media$getCanvasBoundingBox"), trimCanvas = 
  require("module$node_modules$$pixi$utils$lib$media$trimCanvas"), decomposeDataUri = require("module$node_modules$$pixi$utils$lib$network$decomposeDataUri"), determineCrossOrigin = require("module$node_modules$$pixi$utils$lib$network$determineCrossOrigin"), getResolutionOfUrl = require("module$node_modules$$pixi$utils$lib$network$getResolutionOfUrl");
  require("module$node_modules$$pixi$utils$lib$types$index");
  Object.defineProperty(exports, "isMobile", {enumerable:!0, get:function() {
    return settings.isMobile;
  }});
  exports.EventEmitter = global;
  exports.earcut = module;
  exports.url = url.url;
  exports.path = path.path;
  exports.detectVideoAlphaMode = detectVideoAlphaMode.detectVideoAlphaMode;
  exports.sayHello = hello.sayHello;
  exports.skipHello = hello.skipHello;
  exports.isWebGLSupported = isWebGLSupported.isWebGLSupported;
  exports.hex2rgb = hex.hex2rgb;
  exports.hex2string = hex.hex2string;
  exports.rgb2hex = hex.rgb2hex;
  exports.string2hex = hex.string2hex;
  exports.correctBlendMode = premultiply.correctBlendMode;
  exports.premultiplyBlendMode = premultiply.premultiplyBlendMode;
  exports.premultiplyRgba = premultiply.premultiplyRgba;
  exports.premultiplyTint = premultiply.premultiplyTint;
  exports.premultiplyTintToRgba = premultiply.premultiplyTintToRgba;
  exports.DATA_URI = _const.DATA_URI;
  exports.createIndicesForQuads = createIndicesForQuads.createIndicesForQuads;
  exports.getBufferType = getBufferType.getBufferType;
  exports.interleaveTypedArrays = interleaveTypedArrays.interleaveTypedArrays;
  exports.isPow2 = pow2.isPow2;
  exports.log2 = pow2.log2;
  exports.nextPow2 = pow2.nextPow2;
  exports.removeItems = removeItems.removeItems;
  exports.sign = sign.sign;
  exports.uid = uid.uid;
  exports.deprecation = deprecation.deprecation;
  exports.BoundingBox = BoundingBox.BoundingBox;
  exports.BaseTextureCache = caches.BaseTextureCache;
  exports.ProgramCache = caches.ProgramCache;
  exports.TextureCache = caches.TextureCache;
  exports.clearTextureCache = caches.clearTextureCache;
  exports.destroyTextureCache = caches.destroyTextureCache;
  exports.CanvasRenderTarget = CanvasRenderTarget.CanvasRenderTarget;
  exports.getCanvasBoundingBox = getCanvasBoundingBox.getCanvasBoundingBox;
  exports.trimCanvas = trimCanvas.trimCanvas;
  exports.decomposeDataUri = decomposeDataUri.decomposeDataUri;
  exports.determineCrossOrigin = determineCrossOrigin.determineCrossOrigin;
  exports.getResolutionOfUrl = getResolutionOfUrl.getResolutionOfUrl;
};

//# sourceMappingURL=module$node_modules$$pixi$utils$lib$index.js.map
