shadow$provide.module$node_modules$pixi_DOT_js$lib$culling$Culler = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$scene$container$bounds$Bounds");
  var getGlobalBounds = require("module$node_modules$pixi_DOT_js$lib$scene$container$bounds$getGlobalBounds");
  "use strict";
  const tempBounds = new global.Bounds();
  require = class {
    cull(container, view, skipUpdateTransform = !0) {
      this._cullRecursive(container, view, skipUpdateTransform);
    }
    _cullRecursive(container, view, skipUpdateTransform = !0) {
      if (container.cullable && container.measurable && container.includeInBuild) {
        var bounds = container.cullArea ?? getGlobalBounds.getGlobalBounds(container, skipUpdateTransform, tempBounds);
        container.culled = bounds.x >= view.x + view.width || bounds.y >= view.y + view.height || bounds.x + bounds.width <= view.x || bounds.y + bounds.height <= view.y;
      } else {
        container.culled = !1;
      }
      if (container.cullableChildren && !container.culled && container.renderable && container.measurable && container.includeInBuild) {
        for (bounds = 0; bounds < container.children.length; bounds++) {
          this._cullRecursive(container.children[bounds], view, skipUpdateTransform);
        }
      }
    }
  };
  require.shared = new require();
  exports.Culler = require;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$culling$Culler.js.map
