{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$NegationBlend.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,GAA2F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG/HC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACAC,SAAAA,GAAkBJ,OAAA,CAAQ,yEAAR,CAAlBI;AAEJ,cAAA;AACA,OAAMC,cAAN,QAA4BD,QAAgBA,CAAAA,eAA5C;AACEE,eAAW,EAAG;AACZ,WAAA,CAAM,CACJC,GAAI,CACFC,UAAY,+WADV,EAYFC,KAAO,+HAZL,CADA;AAiBJC,UAAK,CACHF,UAAY,mdADT,EAYHC,KAAO,oJAZJ,CAjBD,CAAN,CAAA;AADY;AADhB;AAuCAJ,eAAcM,CAAAA,SAAd,GAA0B,CACxBC,KAAM,UADkB,EAExBC,KAAMV,MAAWW,CAAAA,aAAcC,CAAAA,SAFP,CAA1B;AAKAb,SAAQG,CAAAA,aAAR,GAAwBA,aAAxB;AAnDmI,CAAnI;;",
"sources":["node_modules/pixi_DOT_js/lib/advanced-blend-modes/NegationBlend.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$NegationBlend\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar BlendModeFilter = require('../filters/blend-modes/BlendModeFilter.js');\n\n\"use strict\";\nclass NegationBlend extends BlendModeFilter.BlendModeFilter {\n  constructor() {\n    super({\n      gl: {\n        functions: `\n                vec3 negation(vec3 base, vec3 blend)\n                {\n                    return 1.0-abs(1.0-base-blend);\n                }\n\n                vec3 blendNegation(vec3 base, vec3 blend, float opacity)\n                {\n                    return (negation(base, blend) * opacity + base * (1.0 - opacity));\n                }\n                `,\n        main: `\n                finalColor = vec4(blendNegation(back.rgb, front.rgb, front.a), blendedAlpha) * uBlend;\n                `\n      },\n      gpu: {\n        functions: `\n                fn blendNegation(base: vec3<f32>, blend: vec3<f32>) -> vec3<f32>\n                {\n                    return 1.0-abs(1.0-base-blend);\n                }\n\n                fn blendNegationOpacity(base: vec3<f32>, blend: vec3<f32>, opacity: f32) -> vec3<f32>\n                {\n                    return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n                }\n            `,\n        main: `\n                out = vec4<f32>(blendNegationOpacity(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n            `\n      }\n    });\n  }\n}\n/** @ignore */\nNegationBlend.extension = {\n  name: \"negation\",\n  type: Extensions.ExtensionType.BlendMode\n};\n\nexports.NegationBlend = NegationBlend;\n//# sourceMappingURL=NegationBlend.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","BlendModeFilter","NegationBlend","constructor","gl","functions","main","gpu","extension","name","type","ExtensionType","BlendMode"]
}
