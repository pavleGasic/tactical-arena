{
"version":3,
"file":"module$node_modules$$pixi$sprite_tiling$lib$sprite_tiling_fallback_frag.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,GAA4F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEpIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAAA;AAmCAH,SAAQI,CAAAA,OAAR,GAlCsBC,83BAkCtB;AArCoI,CAApI;;",
"sources":["node_modules/@pixi/sprite-tiling/lib/sprite-tiling-fallback.frag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$sprite_tiling$lib$sprite_tiling_fallback_frag\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: !0 });\nvar gl1FragmentSrc = `#version 100\n#ifdef GL_EXT_shader_texture_lod\n    #extension GL_EXT_shader_texture_lod : enable\n#endif\n#define SHADER_NAME Tiling-Sprite-100\n\nprecision lowp float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 uColor;\nuniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;\n\nvoid main(void)\n{\n    vec2 coord = vTextureCoord + ceil(uClampOffset - vTextureCoord);\n    coord = (uMapCoord * vec3(coord, 1.0)).xy;\n    vec2 unclamped = coord;\n    coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n    #ifdef GL_EXT_shader_texture_lod\n        vec4 texSample = unclamped == coord\n            ? texture2D(uSampler, coord) \n            : texture2DLodEXT(uSampler, coord, 0);\n    #else\n        vec4 texSample = texture2D(uSampler, coord);\n    #endif\n\n    gl_FragColor = texSample * uColor;\n}\n`;\nexports.default = gl1FragmentSrc;\n//# sourceMappingURL=sprite-tiling-fallback.frag.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","gl1FragmentSrc"]
}
