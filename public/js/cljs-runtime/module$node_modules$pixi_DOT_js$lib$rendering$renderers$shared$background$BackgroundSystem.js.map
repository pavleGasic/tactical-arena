{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$background$BackgroundSystem.js",
"lineCount":41,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,GAA+G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvJ,MAAIC,QAAQH,OAAA,CAAQ,iDAAR,CAAZ;AACII,QAAAA,GAAaJ,OAAA,CAAQ,2DAAR,CAAbI;AAEJ,cAAA;AAC0B,QAAA,sGAAA,KAAA;AACxBC,eAAW,EAAG;AACZ,UAAKC,CAAAA,iBAAL,GAAyB,CAAA,CAAzB;AAEA,UAAKC,CAAAA,KAAL,GADA,IAAKC,CAAAA,gBACL,GADwB,IAAIL,KAAMA,CAAAA,KAAV,CAAgB,CAAhB,CACxB;AACA,UAAKM,CAAAA,KAAL,GAAa,CAAb;AAJY;AAUdC,QAAI,CAACC,OAAD,CAAU;AACZA,aAAA,GAAU,CAAE,GAAGC,mGAAkBC,CAAAA,cAAvB,EAAuC,GAAGF,OAA1C,CAAV;AACA,UAAKL,CAAAA,iBAAL,GAAyBK,OAAQL,CAAAA,iBAAjC;AACA,UAAKC,CAAAA,KAAL,GAAaI,OAAQG,CAAAA,UAArB,IAAmCH,OAAQI,CAAAA,eAA3C,IAA8D,IAAKP,CAAAA,gBAAnE;AACA,UAAKC,CAAAA,KAAL,GAAaE,OAAQK,CAAAA,eAArB;AACA,UAAKR,CAAAA,gBAAiBS,CAAAA,QAAtB,CAA+BN,OAAQK,CAAAA,eAAvC,CAAA;AALY;AAQV,aAAQ,EAAA;AACV,aAAO,IAAKR,CAAAA,gBAAZ;AADU;AAGR,aAAK,CAACU,KAAD,CAAQ;AACf,UAAKV,CAAAA,gBAAiBW,CAAAA,QAAtB,CAA+BD,KAA/B,CAAA;AADe;AAIb,aAAQ,EAAA;AACV,aAAO,IAAKV,CAAAA,gBAAiBC,CAAAA,KAA7B;AADU;AAGR,aAAK,CAACS,KAAD,CAAQ;AACf,UAAKV,CAAAA,gBAAiBS,CAAAA,QAAtB,CAA+BC,KAA/B,CAAA;AADe;AAIb,iBAAY,EAAA;AACd,aAAO,IAAKV,CAAAA,gBAAiBY,CAAAA,OAAtB,EAAP;AADc;AAQhBC,WAAO,EAAG;;AAzCc,GAAA;AAApBT,SAAAA,GAAoB,mGAApBA;AA6CNA,SAAkBU,CAAAA,SAAlB,GAA8B,CAC5BC,KAAM,CACJnB,MAAWoB,CAAAA,aAAcC,CAAAA,WADrB,EAEJrB,MAAWoB,CAAAA,aAAcE,CAAAA,YAFrB,EAGJtB,MAAWoB,CAAAA,aAAcG,CAAAA,YAHrB,CADsB,EAM5BC,KAAM,YANsB,EAO5BC,SAAU,CAPkB,CAA9B;AAUAjB,SAAkBC,CAAAA,cAAlB,GAAmC,CAKjCG,gBAAiB,CALgB,EAUjCD,gBAAiB,CAVgB,EAejCT,kBAAmB,CAAA,CAfc,CAAnC;AAmBAJ,SAAQ4B,CAAAA,gBAAR,GAFuBlB,OAEvB;AAjFuJ,CAAvJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/background/BackgroundSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$background$BackgroundSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Color = require('../../../../color/Color.js');\nvar Extensions = require('../../../../extensions/Extensions.js');\n\n\"use strict\";\nconst _BackgroundSystem = class _BackgroundSystem {\n  constructor() {\n    this.clearBeforeRender = true;\n    this._backgroundColor = new Color.Color(0);\n    this.color = this._backgroundColor;\n    this.alpha = 1;\n  }\n  /**\n   * initiates the background system\n   * @param options - the options for the background colors\n   */\n  init(options) {\n    options = { ..._BackgroundSystem.defaultOptions, ...options };\n    this.clearBeforeRender = options.clearBeforeRender;\n    this.color = options.background || options.backgroundColor || this._backgroundColor;\n    this.alpha = options.backgroundAlpha;\n    this._backgroundColor.setAlpha(options.backgroundAlpha);\n  }\n  /** The background color to fill if not transparent */\n  get color() {\n    return this._backgroundColor;\n  }\n  set color(value) {\n    this._backgroundColor.setValue(value);\n  }\n  /** The background color alpha. Setting this to 0 will make the canvas transparent. */\n  get alpha() {\n    return this._backgroundColor.alpha;\n  }\n  set alpha(value) {\n    this._backgroundColor.setAlpha(value);\n  }\n  /** The background color as an [R, G, B, A] array. */\n  get colorRgba() {\n    return this._backgroundColor.toArray();\n  }\n  /**\n   * destroys the background system\n   * @internal\n   * @ignore\n   */\n  destroy() {\n  }\n};\n/** @ignore */\n_BackgroundSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLSystem,\n    Extensions.ExtensionType.WebGPUSystem,\n    Extensions.ExtensionType.CanvasSystem\n  ],\n  name: \"background\",\n  priority: 0\n};\n/** default options used by the system */\n_BackgroundSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.backgroundAlpha}\n   * @default 1\n   */\n  backgroundAlpha: 1,\n  /**\n   * {@link WebGLOptions.backgroundColor}\n   * @default 0x000000\n   */\n  backgroundColor: 0,\n  /**\n   * {@link WebGLOptions.clearBeforeRender}\n   * @default true\n   */\n  clearBeforeRender: true\n};\nlet BackgroundSystem = _BackgroundSystem;\n\nexports.BackgroundSystem = BackgroundSystem;\n//# sourceMappingURL=BackgroundSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Color","Extensions","constructor","clearBeforeRender","color","_backgroundColor","alpha","init","options","_BackgroundSystem","defaultOptions","background","backgroundColor","backgroundAlpha","setAlpha","value","setValue","toArray","destroy","extension","type","ExtensionType","WebGLSystem","WebGPUSystem","CanvasSystem","name","priority","BackgroundSystem"]
}
