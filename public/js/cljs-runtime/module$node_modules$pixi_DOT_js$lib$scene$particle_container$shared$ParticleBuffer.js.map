{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$ParticleBuffer.js",
"lineCount":67,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/particle-container/shared/ParticleBuffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$ParticleBuffer\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Buffer = require('../../../rendering/renderers/shared/buffer/Buffer.js');\nvar _const = require('../../../rendering/renderers/shared/buffer/const.js');\nvar Geometry = require('../../../rendering/renderers/shared/geometry/Geometry.js');\nvar getAttributeInfoFromFormat = require('../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.js');\nvar ViewableBuffer = require('../../../utils/data/ViewableBuffer.js');\nvar createIndicesForQuads = require('./utils/createIndicesForQuads.js');\nvar generateParticleUpdateFunction = require('./utils/generateParticleUpdateFunction.js');\n\n\"use strict\";\nclass ParticleBuffer {\n  constructor(options) {\n    this._size = 0;\n    this._generateParticleUpdateCache = {};\n    const size = this._size = options.size ?? 1e3;\n    const properties = options.properties;\n    let staticVertexSize = 0;\n    let dynamicVertexSize = 0;\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat.getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        dynamicVertexSize += attributeInfo.stride;\n      } else {\n        staticVertexSize += attributeInfo.stride;\n      }\n    }\n    this._dynamicStride = dynamicVertexSize / 4;\n    this._staticStride = staticVertexSize / 4;\n    this.staticAttributeBuffer = new ViewableBuffer.ViewableBuffer(size * 4 * staticVertexSize);\n    this.dynamicAttributeBuffer = new ViewableBuffer.ViewableBuffer(size * 4 * dynamicVertexSize);\n    this.indexBuffer = createIndicesForQuads.createIndicesForQuads(size);\n    const geometry = new Geometry.Geometry();\n    let dynamicOffset = 0;\n    let staticOffset = 0;\n    this._staticBuffer = new Buffer.Buffer({\n      data: new Float32Array(1),\n      label: \"static-particle-buffer\",\n      shrinkToFit: false,\n      usage: _const.BufferUsage.VERTEX | _const.BufferUsage.COPY_DST\n    });\n    this._dynamicBuffer = new Buffer.Buffer({\n      data: new Float32Array(1),\n      label: \"dynamic-particle-buffer\",\n      shrinkToFit: false,\n      usage: _const.BufferUsage.VERTEX | _const.BufferUsage.COPY_DST\n    });\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat.getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._dynamicBuffer,\n          stride: this._dynamicStride * 4,\n          offset: dynamicOffset * 4,\n          format: property.format\n        });\n        dynamicOffset += attributeInfo.size;\n      } else {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._staticBuffer,\n          stride: this._staticStride * 4,\n          offset: staticOffset * 4,\n          format: property.format\n        });\n        staticOffset += attributeInfo.size;\n      }\n    }\n    geometry.addIndex(this.indexBuffer);\n    const uploadFunction = this.getParticleUpdate(properties);\n    this._dynamicUpload = uploadFunction.dynamicUpdate;\n    this._staticUpload = uploadFunction.staticUpdate;\n    this.geometry = geometry;\n  }\n  getParticleUpdate(properties) {\n    const key = getParticleSyncKey(properties);\n    if (this._generateParticleUpdateCache[key]) {\n      return this._generateParticleUpdateCache[key];\n    }\n    this._generateParticleUpdateCache[key] = this.generateParticleUpdate(properties);\n    return this._generateParticleUpdateCache[key];\n  }\n  generateParticleUpdate(properties) {\n    return generateParticleUpdateFunction.generateParticleUpdateFunction(properties);\n  }\n  update(particles, uploadStatic) {\n    if (particles.length > this._size) {\n      uploadStatic = true;\n      this._size = Math.max(particles.length, this._size * 1.5 | 0);\n      this.staticAttributeBuffer = new ViewableBuffer.ViewableBuffer(this._size * this._staticStride * 4 * 4);\n      this.dynamicAttributeBuffer = new ViewableBuffer.ViewableBuffer(this._size * this._dynamicStride * 4 * 4);\n      this.indexBuffer = createIndicesForQuads.createIndicesForQuads(this._size);\n      this.geometry.indexBuffer.setDataWithSize(\n        this.indexBuffer,\n        this.indexBuffer.byteLength,\n        true\n      );\n    }\n    const dynamicAttributeBuffer = this.dynamicAttributeBuffer;\n    this._dynamicUpload(particles, dynamicAttributeBuffer.float32View, dynamicAttributeBuffer.uint32View);\n    this._dynamicBuffer.setDataWithSize(\n      this.dynamicAttributeBuffer.float32View,\n      particles.length * this._dynamicStride * 4,\n      true\n    );\n    if (uploadStatic) {\n      const staticAttributeBuffer = this.staticAttributeBuffer;\n      this._staticUpload(particles, staticAttributeBuffer.float32View, staticAttributeBuffer.uint32View);\n      this._staticBuffer.setDataWithSize(\n        staticAttributeBuffer.float32View,\n        particles.length * this._staticStride * 4,\n        true\n      );\n    }\n  }\n  destroy() {\n    this._staticBuffer.destroy();\n    this._dynamicBuffer.destroy();\n    this.geometry.destroy();\n  }\n}\nfunction getParticleSyncKey(properties) {\n  const keyGen = [];\n  for (const key in properties) {\n    const property = properties[key];\n    keyGen.push(key, property.code, property.dynamic ? \"d\" : \"s\");\n  }\n  return keyGen.join(\"_\");\n}\n\nexports.ParticleBuffer = ParticleBuffer;\n//# sourceMappingURL=ParticleBuffer.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","_const","Geometry","getAttributeInfoFromFormat","ViewableBuffer","createIndicesForQuads","generateParticleUpdateFunction","ParticleBuffer","constructor","options","_size","_generateParticleUpdateCache","size","properties","staticVertexSize","dynamicVertexSize","i","property","attributeInfo","format","dynamic","stride","_dynamicStride","_staticStride","staticAttributeBuffer","dynamicAttributeBuffer","indexBuffer","geometry","staticOffset","dynamicOffset","_staticBuffer","data","Float32Array","label","shrinkToFit","usage","BufferUsage","VERTEX","COPY_DST","_dynamicBuffer","addAttribute","attributeName","buffer","offset","addIndex","uploadFunction","getParticleUpdate","_dynamicUpload","dynamicUpdate","_staticUpload","staticUpdate","keyGen","key","push","code","join","generateParticleUpdate","update","particles","uploadStatic","length","Math","max","setDataWithSize","byteLength","float32View","uint32View","destroy"]
}
