{
"version":3,
"file":"module$node_modules$$pixi$math$lib$groupD8.js",
"lineCount":31,
"mappings":"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",
"sources":["node_modules/@pixi/math/lib/groupD8.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$math$lib$groupD8\"] = function(global,require,module,exports) {\n\"use strict\";\nvar Matrix = require(\"./Matrix.js\");\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1], uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1], vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1], vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1], rotationCayley = [], rotationMatrices = [], signum = Math.sign;\nfunction init() {\n  for (let i = 0; i < 16; i++) {\n    const row = [];\n    rotationCayley.push(row);\n    for (let j = 0; j < 16; j++) {\n      const _ux = signum(ux[i] * ux[j] + vx[i] * uy[j]), _uy = signum(uy[i] * ux[j] + vy[i] * uy[j]), _vx = signum(ux[i] * vx[j] + vx[i] * vy[j]), _vy = signum(uy[i] * vx[j] + vy[i] * vy[j]);\n      for (let k = 0; k < 16; k++)\n        if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n          row.push(k);\n          break;\n        }\n    }\n  }\n  for (let i = 0; i < 16; i++) {\n    const mat = new Matrix.Matrix();\n    mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0), rotationMatrices.push(mat);\n  }\n}\ninit();\nconst groupD8 = {\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 0\u00b0       | East      |\n   * @readonly\n   */\n  E: 0,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 45\u00b0\u21bb     | Southeast |\n   * @readonly\n   */\n  SE: 1,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 90\u00b0\u21bb     | South     |\n   * @readonly\n   */\n  S: 2,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 135\u00b0\u21bb    | Southwest |\n   * @readonly\n   */\n  SW: 3,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 180\u00b0     | West      |\n   * @readonly\n   */\n  W: 4,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -135\u00b0/225\u00b0\u21bb | Northwest    |\n   * @readonly\n   */\n  NW: 5,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -90\u00b0/270\u00b0\u21bb  | North        |\n   * @readonly\n   */\n  N: 6,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -45\u00b0/315\u00b0\u21bb  | Northeast    |\n   * @readonly\n   */\n  NE: 7,\n  /**\n   * Reflection about Y-axis.\n   * @readonly\n   */\n  MIRROR_VERTICAL: 8,\n  /**\n   * Reflection about the main diagonal.\n   * @readonly\n   */\n  MAIN_DIAGONAL: 10,\n  /**\n   * Reflection about X-axis.\n   * @readonly\n   */\n  MIRROR_HORIZONTAL: 12,\n  /**\n   * Reflection about reverse diagonal.\n   * @readonly\n   */\n  REVERSE_DIAGONAL: 14,\n  /**\n   * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n   * @returns {PIXI.GD8Symmetry} The X-component of the U-axis\n   *    after rotating the axes.\n   */\n  uX: (ind) => ux[ind],\n  /**\n   * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n   * @returns {PIXI.GD8Symmetry} The Y-component of the U-axis\n   *    after rotating the axes.\n   */\n  uY: (ind) => uy[ind],\n  /**\n   * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n   * @returns {PIXI.GD8Symmetry} The X-component of the V-axis\n   *    after rotating the axes.\n   */\n  vX: (ind) => vx[ind],\n  /**\n   * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n   * @returns {PIXI.GD8Symmetry} The Y-component of the V-axis\n   *    after rotating the axes.\n   */\n  vY: (ind) => vy[ind],\n  /**\n   * @param {PIXI.GD8Symmetry} rotation - symmetry whose opposite\n   *   is needed. Only rotations have opposite symmetries while\n   *   reflections don't.\n   * @returns {PIXI.GD8Symmetry} The opposite symmetry of `rotation`\n   */\n  inv: (rotation) => rotation & 8 ? rotation & 15 : -rotation & 7,\n  /**\n   * Composes the two D8 operations.\n   *\n   * Taking `^` as reflection:\n   *\n   * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n   * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n   * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n   * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n   * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n   * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n   * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n   * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n   * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n   * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n   *\n   * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n   * @param {PIXI.GD8Symmetry} rotationSecond - Second operation, which\n   *   is the row in the above cayley table.\n   * @param {PIXI.GD8Symmetry} rotationFirst - First operation, which\n   *   is the column in the above cayley table.\n   * @returns {PIXI.GD8Symmetry} Composed operation\n   */\n  add: (rotationSecond, rotationFirst) => rotationCayley[rotationSecond][rotationFirst],\n  /**\n   * Reverse of `add`.\n   * @param {PIXI.GD8Symmetry} rotationSecond - Second operation\n   * @param {PIXI.GD8Symmetry} rotationFirst - First operation\n   * @returns {PIXI.GD8Symmetry} Result\n   */\n  sub: (rotationSecond, rotationFirst) => rotationCayley[rotationSecond][groupD8.inv(rotationFirst)],\n  /**\n   * Adds 180 degrees to rotation, which is a commutative\n   * operation.\n   * @param {number} rotation - The number to rotate.\n   * @returns {number} Rotated number\n   */\n  rotate180: (rotation) => rotation ^ 4,\n  /**\n   * Checks if the rotation angle is vertical, i.e. south\n   * or north. It doesn't work for reflections.\n   * @param {PIXI.GD8Symmetry} rotation - The number to check.\n   * @returns {boolean} Whether or not the direction is vertical\n   */\n  isVertical: (rotation) => (rotation & 3) === 2,\n  // rotation % 4 === 2\n  /**\n   * Approximates the vector `V(dx,dy)` into one of the\n   * eight directions provided by `groupD8`.\n   * @param {number} dx - X-component of the vector\n   * @param {number} dy - Y-component of the vector\n   * @returns {PIXI.GD8Symmetry} Approximation of the vector into\n   *  one of the eight symmetries.\n   */\n  byDirection: (dx, dy) => Math.abs(dx) * 2 <= Math.abs(dy) ? dy >= 0 ? groupD8.S : groupD8.N : Math.abs(dy) * 2 <= Math.abs(dx) ? dx > 0 ? groupD8.E : groupD8.W : dy > 0 ? dx > 0 ? groupD8.SE : groupD8.SW : dx > 0 ? groupD8.NE : groupD8.NW,\n  /**\n   * Helps sprite to compensate texture packer rotation.\n   * @param {PIXI.Matrix} matrix - sprite world matrix\n   * @param {PIXI.GD8Symmetry} rotation - The rotation factor to use.\n   * @param {number} tx - sprite anchoring\n   * @param {number} ty - sprite anchoring\n   */\n  matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) => {\n    const mat = rotationMatrices[groupD8.inv(rotation)];\n    mat.tx = tx, mat.ty = ty, matrix.append(mat);\n  }\n};\nexports.groupD8 = groupD8;\n//# sourceMappingURL=groupD8.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Matrix","ux","uy","vx","vy","rotationCayley","rotationMatrices","signum","Math","sign","init","i","row","push","j","_ux","_uy","_vx","_vy","k","mat","set","groupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MAIN_DIAGONAL","MIRROR_HORIZONTAL","REVERSE_DIAGONAL","uX","ind","uY","vX","vY","inv","rotation","add","rotationSecond","rotationFirst","sub","rotate180","isVertical","byDirection","dx","dy","abs","matrixAppendRotationInv","matrix","tx","ty","append"]
}
