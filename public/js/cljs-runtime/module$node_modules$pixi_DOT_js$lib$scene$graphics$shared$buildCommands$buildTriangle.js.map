{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildTriangle.js",
"lineCount":29,
"mappings":"AAAAA,cAAA,CAAA,qFAAA,GAA0G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9IC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AAEJ,cAAA;AAiCAD,SAAQE,CAAAA,aAAR,GAhCsBA,CACpBC,UAAW,CACTC,KAAMH,MAAWI,CAAAA,aAAcC,CAAAA,YADtB,EAETC,KAAM,UAFG,CADSL,EAKpBM,KAAK,CAACC,KAAD,EAAQC,MAAR,CAAgB;AACnBA,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAME,CAAAA,CAAlB;AACAD,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAMG,CAAAA,CAAlB;AACAF,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAMI,CAAAA,EAAlB;AACAH,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAMK,CAAAA,EAAlB;AACAJ,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAMM,CAAAA,EAAlB;AACAL,UAAA,CAAO,CAAP,CAAA,GAAYD,KAAMO,CAAAA,EAAlB;AACA,WAAON,MAAP;AAPmB,GALDR,EAcpBe,WAAW,CAACP,MAAD,EAASQ,QAAT,EAAmBC,cAAnB,EAAmCC,cAAnC,EAAmDC,OAAnD,EAA4DC,aAA5D,CAA2E;AACpF,QAAIC,QAAQ,CAAZ;AACAH,kBAAA,IAAkBD,cAAlB;AACAD,YAAA,CAASE,cAAT,GAA0BG,KAA1B,CAAA,GAAmCb,MAAA,CAAO,CAAP,CAAnC;AACAQ,YAAA,CAASE,cAAT,GAA0BG,KAA1B,GAAkC,CAAlC,CAAA,GAAuCb,MAAA,CAAO,CAAP,CAAvC;AACAa,SAAA,IAASJ,cAAT;AACAD,YAAA,CAASE,cAAT,GAA0BG,KAA1B,CAAA,GAAmCb,MAAA,CAAO,CAAP,CAAnC;AACAQ,YAAA,CAASE,cAAT,GAA0BG,KAA1B,GAAkC,CAAlC,CAAA,GAAuCb,MAAA,CAAO,CAAP,CAAvC;AACAa,SAAA,IAASJ,cAAT;AACAD,YAAA,CAASE,cAAT,GAA0BG,KAA1B,CAAA,GAAmCb,MAAA,CAAO,CAAP,CAAnC;AACAQ,YAAA,CAASE,cAAT,GAA0BG,KAA1B,GAAkC,CAAlC,CAAA,GAAuCb,MAAA,CAAO,CAAP,CAAvC;AACMc,UAAAA,GAAgBJ,cAAhBI,GAAiCL,cAAjCK;AACNH,WAAA,CAAQC,aAAA,EAAR,CAAA,GAA2BE,MAA3B;AACAH,WAAA,CAAQC,aAAA,EAAR,CAAA,GAA2BE,MAA3B,GAA2C,CAA3C;AACAH,WAAA,CAAQC,aAAA,EAAR,CAAA,GAA2BE,MAA3B,GAA2C,CAA3C;AAdoF,GAdlEtB,CAgCtB;AAtCkJ,CAAlJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/buildCommands/buildTriangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildTriangle\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\n\n\"use strict\";\nconst buildTriangle = {\n  extension: {\n    type: Extensions.ExtensionType.ShapeBuilder,\n    name: \"triangle\"\n  },\n  build(shape, points) {\n    points[0] = shape.x;\n    points[1] = shape.y;\n    points[2] = shape.x2;\n    points[3] = shape.y2;\n    points[4] = shape.x3;\n    points[5] = shape.y3;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexports.buildTriangle = buildTriangle;\n//# sourceMappingURL=buildTriangle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","buildTriangle","extension","type","ExtensionType","ShapeBuilder","name","build","shape","points","x","y","x2","y2","x3","y3","triangulate","vertices","verticesStride","verticesOffset","indices","indicesOffset","count","verticesIndex"]
}
