{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text$utils$generateTextStyleKey.js",
"lineCount":31,
"mappings":"AAAAA,cAAA,CAAA,yEAAA,GAA8F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAqCtIC,UAASA,gBAAe,CAACC,SAAD,EAAYC,GAAZ,EAAiBC,KAAjB,CAAwB;AAC9C,QAAI,CAACF,SAAL;AACE,aAAOE,KAAP;AADF;AAEAD,OAAA,CAAIC,KAAA,EAAJ,CAAA,GAAeF,SAAUG,CAAAA,KAAzB;AACAF,OAAA,CAAIC,KAAA,EAAJ,CAAA,GAAeF,SAAUI,CAAAA,KAAzB;AACAH,OAAA,CAAIC,KAAA,EAAJ,CAAA,GAAeF,SAAUK,CAAAA,IAAMC,EAAAA,QAA/B;AACA,WAAOJ,KAAP;AAN8C;AAlChD,MAAIK,QAAQX,OAAA,CAAQ,iDAAR,CAAZ;AAEA,cAAA;AACA,QAAMY,yBAAyB,iLAAA,CAAA,KAAA,CAAA,GAAA,CAA/B;AA6DAV,SAAQW,CAAAA,oBAAR,GA1CAA,QAA6B,CAACC,KAAD,CAAQ;AACnC,UAAMT,MAAM,EAAZ;AACA,QAAIC,QAAQ,CAAZ;AACA,SAAK,IAAIS,IAAI,CAAb,EAAgBA,CAAhB,GAAoBH,sBAAuBI,CAAAA,MAA3C,EAAmDD,CAAA,EAAnD,CAAwD;AACtD,YAAME,OAAQ,IAAGL,sBAAA,CAAuBG,CAAvB,CAAH,EAAd;AACAV,SAAA,CAAIC,KAAA,EAAJ,CAAA,GAAeQ,KAAA,CAAMG,IAAN,CAAf;AAFsD;AAIxDX,SAAA,GAAQH,eAAA,CAAgBW,KAAMI,CAAAA,KAAtB,EAA6Bb,GAA7B,EAAkCC,KAAlC,CAAR;AAcA,QAb+Ba,CAa/B,GAbyBL,KAAMK,CAAAA,OAa/B;AAEAb,WAKA,GALQH,eAAA,CAAgBiB,CAAhB,EAfgCf,GAehC,EAAkCC,KAAlC,CAKR,EApBwCD,GAgBxC,CAAIC,KAAA,EAAJ,CAIA,GAJec,CAAYC,CAAAA,KAI3B,EApBwChB,GAiBxC,CAAIC,KAAA,EAAJ,CAGA,GAHec,CAAYE,CAAAA,SAG3B,EApBwCjB,GAkBxC,CAAIC,KAAA,EAAJ,CAEA,GAFec,CAAYG,CAAAA,GAE3B,EApBwClB,GAmBxC,CAAIC,KAAA,EAAJ,CACA,GADec,CAAYI,CAAAA,IAC3B,EApBwCnB,GAoBxC,CAAIC,KAAA,EAAJ,CAAA,GAAec,CAAYK,CAAAA,UAA3B;AAPA;AAWA,QAvB+BC,KAuB/B,GAvByBZ,KAAMY,CAAAA,UAuB/B;AAvB2CrB,SAyB3C,CAAIC,KAAA,EAAJ,CAIA,GAJeoB,KAAWlB,CAAAA,KAI1B,EA7B2CH,GA0B3C,CAAIC,KAAA,EAAJ,CAGA,GAHeoB,KAAWC,CAAAA,KAG1B,EA7B2CtB,GA2B3C,CAAIC,KAAA,EAAJ,CAEA,GAFeoB,KAAWE,CAAAA,IAE1B,EA7B2CvB,GA4B3C,CAAIC,KAAA,EAAJ,CACA,GADeoB,KAAWG,CAAAA,QAC1B,EA7B2CxB,GA6B3C,CAAIC,KAAA,EAAJ,CAAA,GAAeK,KAAMA,CAAAA,KAAMmB,CAAAA,MAAOC,CAAAA,QAAnB,CAA4BL,KAAWnB,CAAAA,KAAvC,CAA8CyB,CAAAA,QAA9C,EAAf;AANA;AAtBA,WAAO3B,GAAImB,CAAAA,IAAJ,CAAS,GAAT,CAAP;AAVmC,GA0CrC;AAnEsI,CAAtI;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text/utils/generateTextStyleKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text$utils$generateTextStyleKey\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Color = require('../../../color/Color.js');\n\n\"use strict\";\nconst valuesToIterateForKeys = [\n  \"align\",\n  \"breakWords\",\n  \"cssOverrides\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"leading\",\n  \"letterSpacing\",\n  \"lineHeight\",\n  \"padding\",\n  \"textBaseline\",\n  \"trim\",\n  \"whiteSpace\",\n  \"wordWrap\",\n  \"wordWrapWidth\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontSize\"\n];\nfunction generateTextStyleKey(style) {\n  const key = [];\n  let index = 0;\n  for (let i = 0; i < valuesToIterateForKeys.length; i++) {\n    const prop = `_${valuesToIterateForKeys[i]}`;\n    key[index++] = style[prop];\n  }\n  index = addFillStyleKey(style._fill, key, index);\n  index = addStokeStyleKey(style._stroke, key, index);\n  index = addDropShadowKey(style.dropShadow, key, index);\n  return key.join(\"-\");\n}\nfunction addFillStyleKey(fillStyle, key, index) {\n  if (!fillStyle)\n    return index;\n  key[index++] = fillStyle.color;\n  key[index++] = fillStyle.alpha;\n  key[index++] = fillStyle.fill?.styleKey;\n  return index;\n}\nfunction addStokeStyleKey(strokeStyle, key, index) {\n  if (!strokeStyle)\n    return index;\n  index = addFillStyleKey(strokeStyle, key, index);\n  key[index++] = strokeStyle.width;\n  key[index++] = strokeStyle.alignment;\n  key[index++] = strokeStyle.cap;\n  key[index++] = strokeStyle.join;\n  key[index++] = strokeStyle.miterLimit;\n  return index;\n}\nfunction addDropShadowKey(dropShadow, key, index) {\n  if (!dropShadow)\n    return index;\n  key[index++] = dropShadow.alpha;\n  key[index++] = dropShadow.angle;\n  key[index++] = dropShadow.blur;\n  key[index++] = dropShadow.distance;\n  key[index++] = Color.Color.shared.setValue(dropShadow.color).toNumber();\n  return index;\n}\n\nexports.generateTextStyleKey = generateTextStyleKey;\n//# sourceMappingURL=generateTextStyleKey.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","addFillStyleKey","fillStyle","key","index","color","alpha","fill","styleKey","Color","valuesToIterateForKeys","generateTextStyleKey","style","i","length","prop","_fill","_stroke","strokeStyle","width","alignment","cap","join","miterLimit","dropShadow","angle","blur","distance","shared","setValue","toNumber"]
}
