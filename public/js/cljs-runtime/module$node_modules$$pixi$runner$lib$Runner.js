shadow$provide.module$node_modules$$pixi$runner$lib$Runner = function(global, require, module, exports) {
  class Runner {
    constructor(name) {
      this.items = [];
      this._name = name;
      this._aliasCount = 0;
    }
    emit(a0, a1, a2, a3, a4, a5, a6, a7) {
      if (8 < arguments.length) {
        throw Error("max arguments reached");
      }
      const {name, items} = this;
      this._aliasCount++;
      for (let i = 0, len = items.length; i < len; i++) {
        items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);
      }
      return items === this.items && this._aliasCount--, this;
    }
    ensureNonAliasedItems() {
      0 < this._aliasCount && 1 < this.items.length && (this._aliasCount = 0, this.items = this.items.slice(0));
    }
    add(item) {
      return item[this._name] && (this.ensureNonAliasedItems(), this.remove(item), this.items.push(item)), this;
    }
    remove(item) {
      item = this.items.indexOf(item);
      return -1 !== item && (this.ensureNonAliasedItems(), this.items.splice(item, 1)), this;
    }
    contains(item) {
      return this.items.includes(item);
    }
    removeAll() {
      return this.ensureNonAliasedItems(), this.items.length = 0, this;
    }
    destroy() {
      this.removeAll();
      this.items.length = 0;
      this._name = "";
    }
    get empty() {
      return 0 === this.items.length;
    }
    get name() {
      return this._name;
    }
  }
  Object.defineProperties(Runner.prototype, {dispatch:{value:Runner.prototype.emit}, run:{value:Runner.prototype.emit}});
  exports.Runner = Runner;
};

//# sourceMappingURL=module$node_modules$$pixi$runner$lib$Runner.js.map
