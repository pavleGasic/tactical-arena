shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$utils$getSupportedTextureFormats = function(global, require, module, exports) {
  var getSupportedCompressedTextureFormats = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$utils$getSupportedCompressedTextureFormats");
  "use strict";
  const nonCompressedFormats = "r8unorm r8snorm r8uint r8sint r16uint r16sint r16float rg8unorm rg8snorm rg8uint rg8sint r32uint r32sint r32float rg16uint rg16sint rg16float rgba8unorm rgba8unorm-srgb rgba8snorm rgba8uint rgba8sint bgra8unorm bgra8unorm-srgb rgb9e5ufloat rgb10a2unorm rg11b10ufloat rg32uint rg32sint rg32float rgba16uint rgba16sint rgba16float rgba32uint rgba32sint rgba32float stencil8 depth16unorm depth24plus depth24plus-stencil8 depth32float depth32float-stencil8".split(" ");
  let supportedTextureFormats;
  exports.getSupportedTextureFormats = async function() {
    if (void 0 !== supportedTextureFormats) {
      return supportedTextureFormats;
    }
    const compressedTextureFormats = await getSupportedCompressedTextureFormats.getSupportedCompressedTextureFormats();
    return supportedTextureFormats = [...nonCompressedFormats, ...compressedTextureFormats];
  };
  exports.nonCompressedFormats = nonCompressedFormats;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$utils$getSupportedTextureFormats.js.map
