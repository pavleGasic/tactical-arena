shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStateSystem = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  var State = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$state$State"), GpuBlendModesToPixi = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuBlendModesToPixi");
  "use strict";
  class GpuStateSystem {
    constructor() {
      this.defaultState = new State.State();
      this.defaultState.blend = !0;
    }
    contextChange(gpu) {
      this.gpu = gpu;
    }
    getColorTargets(state) {
      return [{format:"bgra8unorm", writeMask:0, blend:GpuBlendModesToPixi.GpuBlendModesToPixi[state.blendMode] || GpuBlendModesToPixi.GpuBlendModesToPixi.normal}];
    }
    destroy() {
      this.gpu = null;
    }
  }
  GpuStateSystem.extension = {type:[global.ExtensionType.WebGPUSystem], name:"state"};
  exports.GpuStateSystem = GpuStateSystem;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStateSystem.js.map
