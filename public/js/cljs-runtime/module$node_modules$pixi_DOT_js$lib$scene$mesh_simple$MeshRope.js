shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$mesh_simple$MeshRope = function(global, require, module, exports) {
  var definedProps = require("module$node_modules$pixi_DOT_js$lib$scene$container$utils$definedProps");
  global = require("module$node_modules$pixi_DOT_js$lib$scene$mesh$shared$Mesh");
  var RopeGeometry = require("module$node_modules$pixi_DOT_js$lib$scene$mesh_simple$RopeGeometry");
  "use strict";
  const node_modules$pixi_DOT_js$lib$scene$mesh_simple$MeshRope$classdecl$var44 = class extends global.Mesh {
    constructor(options) {
      const {texture, points, textureScale, ...rest} = {...node_modules$pixi_DOT_js$lib$scene$mesh_simple$MeshRope$classdecl$var44.defaultOptions, ...options};
      options = new RopeGeometry.RopeGeometry(definedProps.definedProps({width:texture.height, points, textureScale}));
      0 < textureScale && (texture.source.style.addressMode = "repeat");
      super(definedProps.definedProps({...rest, texture, geometry:options}));
      this.autoUpdate = !0;
      this.onRender = this._render;
    }
    _render() {
      const geometry = this.geometry;
      if (this.autoUpdate || geometry._width !== this.texture.height) {
        geometry._width = this.texture.height, geometry.update();
      }
    }
  };
  require = node_modules$pixi_DOT_js$lib$scene$mesh_simple$MeshRope$classdecl$var44;
  require.defaultOptions = {textureScale:0};
  exports.MeshRope = require;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$mesh_simple$MeshRope.js.map
