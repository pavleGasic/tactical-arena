{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$ensureAttributes.js",
"lineCount":23,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,GAA+G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvJ,MAAIC,OAAOH,OAAA,CAAQ,wDAAR,CAAX,EACII,6BAA6BJ,OAAA,CAAQ,0GAAR,CADjC;AAGA,cAAA;AAoCAE,SAAQG,CAAAA,gBAAR,GAnCAA,QAAyB,CAACC,QAAD,EAAWC,aAAX,CAA0B;AACjD,SAAK,IAAMC,CAAX,GAAgBF,SAASG,CAAAA,UAAzB,CAAqC;AACnC,YAAMC,YAAYJ,QAASG,CAAAA,UAAT,CAAoBD,CAApB,CAAlB,EACMG,gBAAgBJ,aAAA,CAAcC,CAAd,CADtB;AAEIG,mBAAJ,IACED,SAAUE,CAAAA,MAEV,KAFqBF,SAAUE,CAAAA,MAE/B,GAFwCD,aAAcC,CAAAA,MAEtD,GADAF,SAAUG,CAAAA,MACV,KADqBH,SAAUG,CAAAA,MAC/B,GADwCF,aAAcE,CAAAA,MACtD,GAAAH,SAAUI,CAAAA,QAAV,KAAuBJ,SAAUI,CAAAA,QAAjC,GAA4CH,aAAcG,CAAAA,QAA1D,CAHF,IAKEX,IAAKA,CAAAA,IAAL,CAAW,aAAYK,CAAZ,mGAAX,CALF;AAHmC;AAcrC,UAAM,CAAEO,OAAF,EAAWN,UAAX,CAAA,GAHeH,QAGrB;AACMU,YAAAA,GAAa,EAAbA;AACAC,iBAAAA,GAAY,EAAZA;AACN,SAAK,IAAMC,CAAX,GAAgBH,QAAhB;AACQI,OAEN,GAFeJ,OAAA,CAAQG,CAAR,CAEf,EADAF,QAAA,CAAWG,CAAOC,CAAAA,GAAlB,CACA,GADyB,CACzB,EAAAH,aAAA,CAAUE,CAAOC,CAAAA,GAAjB,CAAA,GAAwB,CAAxB;AAHF;AAKA,SAAK,IAAMF,UAAX,GAAgBT,WAAhB;AACQC,OACN,GADkBD,UAAA,CAAWS,UAAX,CAClB,EAAAF,QAAA,CAAWN,CAAUS,CAAAA,MAAOC,CAAAA,GAA5B,CAAA,IAAoChB,0BAA2BA,CAAAA,0BAA3B,CAAsDM,CAAUE,CAAAA,MAAhE,CAAwES,CAAAA,MAA5G;AAFF;AAIA,SAAK,MAAMH,CAAX,GAAgBT,WAAhB;AACQC,gBAGN,GAHkBD,UAAA,CAAWS,CAAX,CAGlB,EAFAR,UAAUW,CAAAA,MAEV,KAFqBX,UAAUW,CAAAA,MAE/B,GAFwCL,QAAA,CAAWN,UAAUS,CAAAA,MAAOC,CAAAA,GAA5B,CAExC,GADAV,UAAUY,CAAAA,KACV,KADoBZ,UAAUY,CAAAA,KAC9B,GADsCL,aAAA,CAAUP,UAAUS,CAAAA,MAAOC,CAAAA,GAA3B,CACtC,GAAAH,aAAA,CAAUP,UAAUS,CAAAA,MAAOC,CAAAA,GAA3B,CAAA,IAAmChB,0BAA2BA,CAAAA,0BAA3B,CAAsDM,UAAUE,CAAAA,MAAhE,CAAwES,CAAAA,MAA3G;AAJF;AA3BiD,GAmCnD;AA1CuJ,CAAvJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/program/ensureAttributes.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$ensureAttributes\"] = function(global,require,module,exports) {\n'use strict';\n\nvar warn = require('../../../../../utils/logging/warn.js');\nvar getAttributeInfoFromFormat = require('../../../shared/geometry/utils/getAttributeInfoFromFormat.js');\n\n\"use strict\";\nfunction ensureAttributes(geometry, extractedData) {\n  for (const i in geometry.attributes) {\n    const attribute = geometry.attributes[i];\n    const attributeData = extractedData[i];\n    if (attributeData) {\n      attribute.format ?? (attribute.format = attributeData.format);\n      attribute.offset ?? (attribute.offset = attributeData.offset);\n      attribute.instance ?? (attribute.instance = attributeData.instance);\n    } else {\n      warn.warn(`Attribute ${i} is not present in the shader, but is present in the geometry. Unable to infer attribute details.`);\n    }\n  }\n  ensureStartAndStride(geometry);\n}\nfunction ensureStartAndStride(geometry) {\n  const { buffers, attributes } = geometry;\n  const tempStride = {};\n  const tempStart = {};\n  for (const j in buffers) {\n    const buffer = buffers[j];\n    tempStride[buffer.uid] = 0;\n    tempStart[buffer.uid] = 0;\n  }\n  for (const j in attributes) {\n    const attribute = attributes[j];\n    tempStride[attribute.buffer.uid] += getAttributeInfoFromFormat.getAttributeInfoFromFormat(attribute.format).stride;\n  }\n  for (const j in attributes) {\n    const attribute = attributes[j];\n    attribute.stride ?? (attribute.stride = tempStride[attribute.buffer.uid]);\n    attribute.start ?? (attribute.start = tempStart[attribute.buffer.uid]);\n    tempStart[attribute.buffer.uid] += getAttributeInfoFromFormat.getAttributeInfoFromFormat(attribute.format).stride;\n  }\n}\n\nexports.ensureAttributes = ensureAttributes;\n//# sourceMappingURL=ensureAttributes.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","warn","getAttributeInfoFromFormat","ensureAttributes","geometry","extractedData","i","attributes","attribute","attributeData","format","offset","instance","buffers","tempStride","tempStart","j","buffer","uid","stride","start"]
}
