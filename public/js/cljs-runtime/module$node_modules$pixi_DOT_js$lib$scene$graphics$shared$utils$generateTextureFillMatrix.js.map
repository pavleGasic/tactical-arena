{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$utils$generateTextureFillMatrix.js",
"lineCount":31,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/utils/generateTextureFillMatrix.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$utils$generateTextureFillMatrix\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Matrix = require('../../../../maths/matrix/Matrix.js');\nvar Rectangle = require('../../../../maths/shapes/Rectangle.js');\nvar FillGradient = require('../fill/FillGradient.js');\n\n\"use strict\";\nconst tempTextureMatrix = new Matrix.Matrix();\nconst tempRect = new Rectangle.Rectangle();\nfunction generateTextureMatrix(out, style, shape, matrix) {\n  const textureMatrix = style.matrix ? out.copyFrom(style.matrix).invert() : out.identity();\n  if (style.textureSpace === \"local\") {\n    const bounds = shape.getBounds(tempRect);\n    if (style.width) {\n      bounds.pad(style.width);\n    }\n    const { x: tx, y: ty } = bounds;\n    const sx = 1 / bounds.width;\n    const sy = 1 / bounds.height;\n    const mTx = -tx * sx;\n    const mTy = -ty * sy;\n    const a1 = textureMatrix.a;\n    const b1 = textureMatrix.b;\n    const c1 = textureMatrix.c;\n    const d1 = textureMatrix.d;\n    textureMatrix.a *= sx;\n    textureMatrix.b *= sx;\n    textureMatrix.c *= sy;\n    textureMatrix.d *= sy;\n    textureMatrix.tx = mTx * a1 + mTy * c1 + textureMatrix.tx;\n    textureMatrix.ty = mTx * b1 + mTy * d1 + textureMatrix.ty;\n  } else {\n    textureMatrix.translate(style.texture.frame.x, style.texture.frame.y);\n    textureMatrix.scale(1 / style.texture.source.width, 1 / style.texture.source.height);\n  }\n  const sourceStyle = style.texture.source.style;\n  if (!(style.fill instanceof FillGradient.FillGradient) && sourceStyle.addressMode === \"clamp-to-edge\") {\n    sourceStyle.addressMode = \"repeat\";\n    sourceStyle.update();\n  }\n  if (matrix) {\n    textureMatrix.append(tempTextureMatrix.copyFrom(matrix).invert());\n  }\n  return textureMatrix;\n}\n\nexports.generateTextureMatrix = generateTextureMatrix;\n//# sourceMappingURL=generateTextureFillMatrix.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Matrix","Rectangle","FillGradient","tempTextureMatrix","tempRect","generateTextureMatrix","out","style","shape","matrix","textureMatrix","copyFrom","invert","identity","textureSpace","bounds","getBounds","width","pad","tx","ty","sx","sy","height","mTx","mTy","a1","a","b1","b","c1","c","d1","d","translate","texture","frame","x","y","scale","source","sourceStyle","fill","addressMode","update","append"]
}
