shadow$provide.module$node_modules$$pixi$graphics$lib$utils$buildPoly = function(global, require, module, exports) {
  function fixOrientation(points, hole = !1) {
    const m = points.length;
    if (!(6 > m)) {
      var area = 0;
      for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {
        var x2 = points[i], y2 = points[i + 1];
        area += (x2 - x1) * (y2 + y1);
        x1 = x2;
        y1 = y2;
      }
      if (!hole && 0 < area || hole && 0 >= area) {
        for (hole = m / 2, hole += hole % 2; hole < m; hole += 2) {
          area = m - hole - 2;
          x2 = m - hole - 1;
          y2 = hole;
          const i4 = hole + 1;
          [points[area], points[y2]] = [points[y2], points[area]];
          [points[x2], points[i4]] = [points[i4], points[x2]];
        }
      }
    }
  }
  var core = require("module$node_modules$$pixi$core$lib$index");
  exports.buildPoly = {build(graphicsData) {
    graphicsData.points = graphicsData.shape.points.slice();
  }, triangulate(graphicsData, graphicsGeometry) {
    let points = graphicsData.points;
    var holes = graphicsData.holes;
    graphicsData = graphicsGeometry.points;
    graphicsGeometry = graphicsGeometry.indices;
    if (6 <= points.length) {
      fixOrientation(points, !1);
      var holeArray = [];
      for (var i = 0; i < holes.length; i++) {
        const hole = holes[i];
        fixOrientation(hole.points, !0);
        holeArray.push(points.length / 2);
        points = points.concat(hole.points);
      }
      if (holeArray = core.utils.earcut(points, holeArray, 2)) {
        holes = graphicsData.length / 2;
        for (i = 0; i < holeArray.length; i += 3) {
          graphicsGeometry.push(holeArray[i] + holes), graphicsGeometry.push(holeArray[i + 1] + holes), graphicsGeometry.push(holeArray[i + 2] + holes);
        }
        for (graphicsGeometry = 0; graphicsGeometry < points.length; graphicsGeometry++) {
          graphicsData.push(points[graphicsGeometry]);
        }
      }
    }
  }};
};

//# sourceMappingURL=module$node_modules$$pixi$graphics$lib$utils$buildPoly.js.map
