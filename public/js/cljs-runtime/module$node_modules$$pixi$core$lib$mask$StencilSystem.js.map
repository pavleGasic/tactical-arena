{
"version":3,
"file":"module$node_modules$$pixi$core$lib$mask$StencilSystem.js",
"lineCount":55,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/mask/StencilSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$mask$StencilSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar extensions = require(\"@pixi/extensions\"), settings = require(\"@pixi/settings\"), AbstractMaskSystem = require(\"./AbstractMaskSystem.js\");\nclass StencilSystem extends AbstractMaskSystem.AbstractMaskSystem {\n  /**\n   * @param renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    super(renderer), this.glConst = settings.settings.ADAPTER.getWebGLRenderingContext().STENCIL_TEST;\n  }\n  getStackLength() {\n    const maskData = this.maskStack[this.maskStack.length - 1];\n    return maskData ? maskData._stencilCounter : 0;\n  }\n  /**\n   * Applies the Mask and adds it to the current stencil stack.\n   * @param maskData - The mask data\n   */\n  push(maskData) {\n    const maskObject = maskData.maskObject, { gl } = this.renderer, prevMaskCount = maskData._stencilCounter;\n    prevMaskCount === 0 && (this.renderer.framebuffer.forceStencil(), gl.clearStencil(0), gl.clear(gl.STENCIL_BUFFER_BIT), gl.enable(gl.STENCIL_TEST)), maskData._stencilCounter++;\n    const colorMask = maskData._colorMask;\n    colorMask !== 0 && (maskData._colorMask = 0, gl.colorMask(!1, !1, !1, !1)), gl.stencilFunc(gl.EQUAL, prevMaskCount, 4294967295), gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR), maskObject.renderable = !0, maskObject.render(this.renderer), this.renderer.batch.flush(), maskObject.renderable = !1, colorMask !== 0 && (maskData._colorMask = colorMask, gl.colorMask(\n      (colorMask & 1) !== 0,\n      (colorMask & 2) !== 0,\n      (colorMask & 4) !== 0,\n      (colorMask & 8) !== 0\n    )), this._useCurrent();\n  }\n  /**\n   * Pops stencil mask. MaskData is already removed from stack\n   * @param {PIXI.DisplayObject} maskObject - object of popped mask data\n   */\n  pop(maskObject) {\n    const gl = this.renderer.gl;\n    if (this.getStackLength() === 0)\n      gl.disable(gl.STENCIL_TEST);\n    else {\n      const maskData = this.maskStack.length !== 0 ? this.maskStack[this.maskStack.length - 1] : null, colorMask = maskData ? maskData._colorMask : 15;\n      colorMask !== 0 && (maskData._colorMask = 0, gl.colorMask(!1, !1, !1, !1)), gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR), maskObject.renderable = !0, maskObject.render(this.renderer), this.renderer.batch.flush(), maskObject.renderable = !1, colorMask !== 0 && (maskData._colorMask = colorMask, gl.colorMask(\n        (colorMask & 1) !== 0,\n        (colorMask & 2) !== 0,\n        (colorMask & 4) !== 0,\n        (colorMask & 8) !== 0\n      )), this._useCurrent();\n    }\n  }\n  /**\n   * Setup renderer to use the current stencil data.\n   * @private\n   */\n  _useCurrent() {\n    const gl = this.renderer.gl;\n    gl.stencilFunc(gl.EQUAL, this.getStackLength(), 4294967295), gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n  }\n}\nStencilSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"stencil\"\n};\nextensions.extensions.add(StencilSystem);\nexports.StencilSystem = StencilSystem;\n//# sourceMappingURL=StencilSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","extensions","settings","AbstractMaskSystem","StencilSystem","constructor","renderer","glConst","ADAPTER","getWebGLRenderingContext","STENCIL_TEST","getStackLength","maskData","maskStack","length","_stencilCounter","push","maskObject","gl","prevMaskCount","framebuffer","forceStencil","clearStencil","clear","STENCIL_BUFFER_BIT","enable","colorMask","_colorMask","stencilFunc","EQUAL","stencilOp","KEEP","INCR","renderable","render","batch","flush","_useCurrent","pop","disable","DECR","extension","type","ExtensionType","RendererSystem","name","add"]
}
