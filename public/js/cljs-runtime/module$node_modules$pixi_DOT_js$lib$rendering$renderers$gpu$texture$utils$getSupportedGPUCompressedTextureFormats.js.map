{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$texture$utils$getSupportedGPUCompressedTextureFormats.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,iHAAA,GAAsI,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9K,MAAIC,UAAUH,OAAA,CAAQ,yDAAR,CAAd;AAEA,cAAA;AACA,MAAII,oCAAJ;AA0EAF,SAAQG,CAAAA,uCAAR,GAzEAA,cAAsD,EAAG;AACvD,QAAID,oCAAJ;AACE,aAAOA,oCAAP;AADF;AAEA,UAAME,YAAY,MAAMH,OAAQI,CAAAA,UAAWC,CAAAA,GAAnB,EAAyBC,CAAAA,YAAzB,EAAwCC,CAAAA,GAAIC,CAAAA,cAA5C,EAAxB;AAmEA,WAlEAP,oCAkEA,GAlEuC,CACrC,IAAGE,SAAUM,CAAAA,QAASC,CAAAA,GAAnB,CAAuB,wBAAvB,CAAA,GAAmD,8NAAA,CAAA,KAAA,CAAA,GAAA,CAAnD,GAiBC,EAjBJ,CADqC,EAmBrC,IAAGP,SAAUM,CAAAA,QAASC,CAAAA,GAAnB,CAAuB,0BAAvB,CAAA,GAAqD,sKAAA,CAAA,KAAA,CAAA,GAAA,CAArD;AAaC,MAbJ,CAnBqC,EAiCrC,IAAGP,SAAUM,CAAAA,QAASC,CAAAA,GAAnB,CAAuB,0BAAvB,CAAA,GAAqD,6fAAA,CAAA,KAAA,CAAA,GAAA,CAArD;AA+BC,MA/BJ,CAjCqC,CAkEvC;AAtEuD,GAyEzD;AAhF8K,CAA9K;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$texture$utils$getSupportedGPUCompressedTextureFormats\"] = function(global,require,module,exports) {\n'use strict';\n\nvar adapter = require('../../../../../environment/adapter.js');\n\n\"use strict\";\nlet supportedGPUCompressedTextureFormats;\nasync function getSupportedGPUCompressedTextureFormats() {\n  if (supportedGPUCompressedTextureFormats)\n    return supportedGPUCompressedTextureFormats;\n  const adapter$1 = await adapter.DOMAdapter.get().getNavigator().gpu.requestAdapter();\n  supportedGPUCompressedTextureFormats = [\n    ...adapter$1.features.has(\"texture-compression-bc\") ? [\n      // BC compressed formats usable if \"texture-compression-bc\" is both\n      // supported by the device/user agent and enabled in requestDevice.\n      \"bc1-rgba-unorm\",\n      \"bc1-rgba-unorm-srgb\",\n      \"bc2-rgba-unorm\",\n      \"bc2-rgba-unorm-srgb\",\n      \"bc3-rgba-unorm\",\n      \"bc3-rgba-unorm-srgb\",\n      \"bc4-r-unorm\",\n      \"bc4-r-snorm\",\n      \"bc5-rg-unorm\",\n      \"bc5-rg-snorm\",\n      \"bc6h-rgb-ufloat\",\n      \"bc6h-rgb-float\",\n      \"bc7-rgba-unorm\",\n      \"bc7-rgba-unorm-srgb\"\n    ] : [],\n    ...adapter$1.features.has(\"texture-compression-etc2\") ? [\n      // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n      // supported by the device/user agent and enabled in requestDevice.\n      \"etc2-rgb8unorm\",\n      \"etc2-rgb8unorm-srgb\",\n      \"etc2-rgb8a1unorm\",\n      \"etc2-rgb8a1unorm-srgb\",\n      \"etc2-rgba8unorm\",\n      \"etc2-rgba8unorm-srgb\",\n      \"eac-r11unorm\",\n      \"eac-r11snorm\",\n      \"eac-rg11unorm\",\n      \"eac-rg11snorm\"\n    ] : [],\n    ...adapter$1.features.has(\"texture-compression-astc\") ? [\n      // ASTC compressed formats usable if \"texture-compression-astc\" is both\n      // supported by the device/user agent and enabled in requestDevice.\n      \"astc-4x4-unorm\",\n      \"astc-4x4-unorm-srgb\",\n      \"astc-5x4-unorm\",\n      \"astc-5x4-unorm-srgb\",\n      \"astc-5x5-unorm\",\n      \"astc-5x5-unorm-srgb\",\n      \"astc-6x5-unorm\",\n      \"astc-6x5-unorm-srgb\",\n      \"astc-6x6-unorm\",\n      \"astc-6x6-unorm-srgb\",\n      \"astc-8x5-unorm\",\n      \"astc-8x5-unorm-srgb\",\n      \"astc-8x6-unorm\",\n      \"astc-8x6-unorm-srgb\",\n      \"astc-8x8-unorm\",\n      \"astc-8x8-unorm-srgb\",\n      \"astc-10x5-unorm\",\n      \"astc-10x5-unorm-srgb\",\n      \"astc-10x6-unorm\",\n      \"astc-10x6-unorm-srgb\",\n      \"astc-10x8-unorm\",\n      \"astc-10x8-unorm-srgb\",\n      \"astc-10x10-unorm\",\n      \"astc-10x10-unorm-srgb\",\n      \"astc-12x10-unorm\",\n      \"astc-12x10-unorm-srgb\",\n      \"astc-12x12-unorm\",\n      \"astc-12x12-unorm-srgb\"\n    ] : []\n  ];\n  return supportedGPUCompressedTextureFormats;\n}\n\nexports.getSupportedGPUCompressedTextureFormats = getSupportedGPUCompressedTextureFormats;\n//# sourceMappingURL=getSupportedGPUCompressedTextureFormats.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","adapter","supportedGPUCompressedTextureFormats","getSupportedGPUCompressedTextureFormats","adapter$1","DOMAdapter","get","getNavigator","gpu","requestAdapter","features","has"]
}
