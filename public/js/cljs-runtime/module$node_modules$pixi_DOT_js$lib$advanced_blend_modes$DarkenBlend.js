shadow$provide.module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$DarkenBlend = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  require = require("module$node_modules$pixi_DOT_js$lib$filters$blend_modes$BlendModeFilter");
  "use strict";
  class DarkenBlend extends require.BlendModeFilter {
    constructor() {
      super({gl:{functions:"\n                vec3 blendDarken(vec3 base, vec3 blend, float opacity)\n                {\n                    return (min(base, blend) * opacity + base * (1.0 - opacity));\n                }\n                ", main:"\n                finalColor \x3d vec4(blendDarken(back.rgb, front.rgb,front.a), blendedAlpha) * uBlend;\n                "}, gpu:{functions:"\n                fn blendDarken(base:vec3\x3cf32\x3e,  blend:vec3\x3cf32\x3e,  opacity:f32) -\x3e vec3\x3cf32\x3e\n                {\n                    return (min(blend,base) * opacity + base * (1.0 - opacity));\n                }\n                ", 
      main:"\n                out \x3d vec4\x3cf32\x3e(blendDarken(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n                "}});
    }
  }
  DarkenBlend.extension = {name:"darken", type:global.ExtensionType.BlendMode};
  exports.DarkenBlend = DarkenBlend;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$DarkenBlend.js.map
