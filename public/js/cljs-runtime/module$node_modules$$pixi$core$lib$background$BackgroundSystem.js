shadow$provide.module$node_modules$$pixi$core$lib$background$BackgroundSystem = function(global, require, module, exports) {
  var color = require("module$node_modules$$pixi$color$lib$index");
  global = require("module$node_modules$$pixi$extensions$lib$index");
  class BackgroundSystem {
    constructor() {
      this.clearBeforeRender = !0;
      this._backgroundColor = new color.Color(0);
      this.alpha = 1;
    }
    init(options) {
      this.clearBeforeRender = options.clearBeforeRender;
      const {backgroundColor, background, backgroundAlpha} = options;
      options = background ?? backgroundColor;
      void 0 !== options && (this.color = options);
      this.alpha = backgroundAlpha;
    }
    get color() {
      return this._backgroundColor.value;
    }
    set color(value) {
      this._backgroundColor.setValue(value);
    }
    get alpha() {
      return this._backgroundColor.alpha;
    }
    set alpha(value) {
      this._backgroundColor.setAlpha(value);
    }
    get backgroundColor() {
      return this._backgroundColor;
    }
    destroy() {
    }
  }
  BackgroundSystem.defaultOptions = {backgroundAlpha:1, backgroundColor:0, clearBeforeRender:!0};
  BackgroundSystem.extension = {type:[global.ExtensionType.RendererSystem, global.ExtensionType.CanvasRendererSystem], name:"background"};
  global.extensions.add(BackgroundSystem);
  exports.BackgroundSystem = BackgroundSystem;
};

//# sourceMappingURL=module$node_modules$$pixi$core$lib$background$BackgroundSystem.js.map
