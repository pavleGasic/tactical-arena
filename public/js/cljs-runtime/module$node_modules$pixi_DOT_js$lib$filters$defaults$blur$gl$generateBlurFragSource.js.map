{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gl$generateBlurFragSource.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,GAAwG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhJ,MAAIC,SAASH,OAAA,CAAQ,iEAAR,CAAb;AAEA,cAAA;AAiCAE,SAAQE,CAAAA,sBAAR,GAtBAA,QAA+B,CAACC,UAAD,CAAa;AAC1C,UAAMC,SAASH,MAAOI,CAAAA,eAAP,CAAuBF,UAAvB,CAAf,EACMG,aAAaF,MAAOG,CAAAA,MAD1B;AAEA,QAAIC,aALJC,uJAKA,EACIC,WAAW,EADf,EAGIC,KAHJ;AAIA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBT,UAApB,EAAgCS,CAAA,EAAhC,CAAqC;AACnC,UAAIC,OAHWC,wEAGKC,CAAAA,OAAT,CAAiB,SAAjB,EAA4BH,CAAEI,CAAAA,QAAF,EAA5B,CAAX;AACAL,WAAA,GAAQC,CAAR;AACIA,OAAJ,IAASN,UAAT,KACEK,KADF,GACUR,UADV,GACuBS,CADvB,GAC2B,CAD3B;AAGAC,UAAA,GAAOA,IAAKE,CAAAA,OAAL,CAAa,SAAb,EAAwBX,MAAA,CAAOO,KAAP,CAAcK,CAAAA,QAAd,EAAxB,CAAP;AACAN,cAAA,IAAYG,IAAZ;AACAH,cAAA,IAAY,IAAZ;AARmC;AAUrCF,cAAA,GAAaA,UAAWO,CAAAA,OAAX,CAAmB,QAAnB,EAA6BL,QAA7B,CAAb;AAEA,WADAF,UACA,GADaA,UAAWO,CAAAA,OAAX,CAAmB,QAAnB,EAA6BZ,UAAWa,CAAAA,QAAX,EAA7B,CACb;AAnB0C,GAsB5C;AAtCgJ,CAAhJ;;",
"sources":["node_modules/pixi_DOT_js/lib/filters/defaults/blur/gl/generateBlurFragSource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$filters$defaults$blur$gl$generateBlurFragSource\"] = function(global,require,module,exports) {\n'use strict';\n\nvar _const = require('../const.js');\n\n\"use strict\";\nconst fragTemplate = [\n  \"in vec2 vBlurTexCoords[%size%];\",\n  \"uniform sampler2D uTexture;\",\n  \"out vec4 finalColor;\",\n  \"void main(void)\",\n  \"{\",\n  \"    finalColor = vec4(0.0);\",\n  \"    %blur%\",\n  \"}\"\n].join(\"\\n\");\nfunction generateBlurFragSource(kernelSize) {\n  const kernel = _const.GAUSSIAN_VALUES[kernelSize];\n  const halfLength = kernel.length;\n  let fragSource = fragTemplate;\n  let blurLoop = \"\";\n  const template = \"finalColor += texture(uTexture, vBlurTexCoords[%index%]) * %value%;\";\n  let value;\n  for (let i = 0; i < kernelSize; i++) {\n    let blur = template.replace(\"%index%\", i.toString());\n    value = i;\n    if (i >= halfLength) {\n      value = kernelSize - i - 1;\n    }\n    blur = blur.replace(\"%value%\", kernel[value].toString());\n    blurLoop += blur;\n    blurLoop += \"\\n\";\n  }\n  fragSource = fragSource.replace(\"%blur%\", blurLoop);\n  fragSource = fragSource.replace(\"%size%\", kernelSize.toString());\n  return fragSource;\n}\n\nexports.generateBlurFragSource = generateBlurFragSource;\n//# sourceMappingURL=generateBlurFragSource.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","generateBlurFragSource","kernelSize","kernel","GAUSSIAN_VALUES","halfLength","length","fragSource","fragTemplate","blurLoop","value","i","blur","template","replace","toString"]
}
