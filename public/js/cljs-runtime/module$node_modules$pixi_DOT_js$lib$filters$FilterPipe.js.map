{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$filters$FilterPipe.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,GAA2E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG/GC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AAEJ,cAAA;AACA,OAAMC,WAAN;AACEC,eAAW,CAACC,QAAD,CAAW;AACpB,UAAKC,CAAAA,SAAL,GAAiBD,QAAjB;AADoB;AAGtBE,QAAI,CAACC,YAAD,EAAeC,SAAf,EAA0BC,cAA1B,CAA0C;AACxB,UAAKJ,CAAAA,SAAUK,CAAAA,WACvBC,CAAAA,KAAMC,CAAAA,KAAlB,CAAwBH,cAAxB,CAAA;AACAA,oBAAeI,CAAAA,GAAf,CAAmB,CACjBC,aAAc,QADG,EAEjBC,UAAW,CAAA,CAFM,EAGjBC,OAAQ,YAHS,EAIjBR,SAJiB,EAKjBD,YALiB,CAAnB,CAAA;AAH4C;AAW9CU,OAAG,CAACC,aAAD,EAAgBC,UAAhB,EAA4BV,cAA5B,CAA4C;AAC7C,UAAKJ,CAAAA,SAAUK,CAAAA,WAAYC,CAAAA,KAAMC,CAAAA,KAAjC,CAAuCH,cAAvC,CAAA;AACAA,oBAAeI,CAAAA,GAAf,CAAmB,CACjBC,aAAc,QADG,EAEjBE,OAAQ,WAFS,EAGjBD,UAAW,CAAA,CAHM,CAAnB,CAAA;AAF6C;AAQ/CK,WAAO,CAACC,WAAD,CAAc;AACQ,kBAA3B,KAAIA,WAAYL,CAAAA,MAAhB,GACE,IAAKX,CAAAA,SAAUiB,CAAAA,MAAOhB,CAAAA,IAAtB,CAA2Be,WAA3B,CADF,GAEkC,WAFlC,KAEWA,WAAYL,CAAAA,MAFvB,IAGE,IAAKX,CAAAA,SAAUiB,CAAAA,MAAOL,CAAAA,GAAtB,EAHF;AADmB;AAOrBM,WAAO,EAAG;AACR,UAAKlB,CAAAA,SAAL,GAAiB,IAAjB;AADQ;AA9BZ;AAkCAH,YAAWsB,CAAAA,SAAX,GAAuB,CACrBC,KAAM,CACJxB,MAAWyB,CAAAA,aAAcC,CAAAA,UADrB,EAEJ1B,MAAWyB,CAAAA,aAAcE,CAAAA,WAFrB,EAGJ3B,MAAWyB,CAAAA,aAAcG,CAAAA,WAHrB,CADe,EAMrBC,KAAM,QANe,CAAvB;AASA9B,SAAQE,CAAAA,UAAR,GAAqBA,UAArB;AAjDmH,CAAnH;;",
"sources":["node_modules/pixi_DOT_js/lib/filters/FilterPipe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$filters$FilterPipe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\n\n\"use strict\";\nclass FilterPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  push(filterEffect, container, instructionSet) {\n    const renderPipes = this._renderer.renderPipes;\n    renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      canBundle: false,\n      action: \"pushFilter\",\n      container,\n      filterEffect\n    });\n  }\n  pop(_filterEffect, _container, instructionSet) {\n    this._renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      action: \"popFilter\",\n      canBundle: false\n    });\n  }\n  execute(instruction) {\n    if (instruction.action === \"pushFilter\") {\n      this._renderer.filter.push(instruction);\n    } else if (instruction.action === \"popFilter\") {\n      this._renderer.filter.pop();\n    }\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\nFilterPipe.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLPipes,\n    Extensions.ExtensionType.WebGPUPipes,\n    Extensions.ExtensionType.CanvasPipes\n  ],\n  name: \"filter\"\n};\n\nexports.FilterPipe = FilterPipe;\n//# sourceMappingURL=FilterPipe.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","FilterPipe","constructor","renderer","_renderer","push","filterEffect","container","instructionSet","renderPipes","batch","break","add","renderPipeId","canBundle","action","pop","_filterEffect","_container","execute","instruction","filter","destroy","extension","type","ExtensionType","WebGLPipes","WebGPUPipes","CanvasPipes","name"]
}
