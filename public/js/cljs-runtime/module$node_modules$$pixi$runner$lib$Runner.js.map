{
"version":3,
"file":"module$node_modules$$pixi$runner$lib$Runner.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/@pixi/runner/lib/Runner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$runner$lib$Runner\"] = function(global,require,module,exports) {\n\"use strict\";\nclass Runner {\n  /**\n   * @param {string} name - The function name that will be executed on the listeners added to this Runner.\n   */\n  constructor(name) {\n    this.items = [], this._name = name, this._aliasCount = 0;\n  }\n  /* eslint-disable jsdoc/require-param, jsdoc/check-param-names */\n  /**\n   * Dispatch/Broadcast Runner to all listeners added to the queue.\n   * @param {...any} params - (optional) parameters to pass to each listener\n   */\n  /*  eslint-enable jsdoc/require-param, jsdoc/check-param-names */\n  emit(a0, a1, a2, a3, a4, a5, a6, a7) {\n    if (arguments.length > 8)\n      throw new Error(\"max arguments reached\");\n    const { name, items } = this;\n    this._aliasCount++;\n    for (let i = 0, len = items.length; i < len; i++)\n      items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n    return items === this.items && this._aliasCount--, this;\n  }\n  ensureNonAliasedItems() {\n    this._aliasCount > 0 && this.items.length > 1 && (this._aliasCount = 0, this.items = this.items.slice(0));\n  }\n  /**\n   * Add a listener to the Runner\n   *\n   * Runners do not need to have scope or functions passed to them.\n   * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n   * as the name provided to the Runner when it was created.\n   *\n   * E.g. A listener passed to this Runner will require a 'complete' function.\n   *\n   * ```js\n   * import { Runner } from '@pixi/runner';\n   *\n   * const complete = new Runner('complete');\n   * ```\n   *\n   * The scope used will be the object itself.\n   * @param {any} item - The object that will be listening.\n   */\n  add(item) {\n    return item[this._name] && (this.ensureNonAliasedItems(), this.remove(item), this.items.push(item)), this;\n  }\n  /**\n   * Remove a single listener from the dispatch queue.\n   * @param {any} item - The listener that you would like to remove.\n   */\n  remove(item) {\n    const index = this.items.indexOf(item);\n    return index !== -1 && (this.ensureNonAliasedItems(), this.items.splice(index, 1)), this;\n  }\n  /**\n   * Check to see if the listener is already in the Runner\n   * @param {any} item - The listener that you would like to check.\n   */\n  contains(item) {\n    return this.items.includes(item);\n  }\n  /** Remove all listeners from the Runner */\n  removeAll() {\n    return this.ensureNonAliasedItems(), this.items.length = 0, this;\n  }\n  /** Remove all references, don't use after this. */\n  destroy() {\n    this.removeAll(), this.items.length = 0, this._name = \"\";\n  }\n  /**\n   * `true` if there are no this Runner contains no listeners\n   * @readonly\n   */\n  get empty() {\n    return this.items.length === 0;\n  }\n  /**\n   * The name of the runner.\n   * @type {string}\n   */\n  get name() {\n    return this._name;\n  }\n}\nObject.defineProperties(Runner.prototype, {\n  /**\n   * Alias for `emit`\n   * @memberof PIXI.Runner#\n   * @method dispatch\n   * @see PIXI.Runner#emit\n   */\n  dispatch: { value: Runner.prototype.emit },\n  /**\n   * Alias for `emit`\n   * @memberof PIXI.Runner#\n   * @method run\n   * @see PIXI.Runner#emit\n   */\n  run: { value: Runner.prototype.emit }\n});\nexports.Runner = Runner;\n//# sourceMappingURL=Runner.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Runner","constructor","name","items","_name","_aliasCount","emit","a0","a1","a2","a3","a4","a5","a6","a7","arguments","length","Error","i","len","ensureNonAliasedItems","slice","add","item","remove","push","index","indexOf","splice","contains","includes","removeAll","destroy","Object","defineProperties","prototype","dispatch","value","run"]
}
