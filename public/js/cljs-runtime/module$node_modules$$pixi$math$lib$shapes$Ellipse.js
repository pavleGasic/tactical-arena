shadow$provide.module$node_modules$$pixi$math$lib$shapes$Ellipse = function(global, require, module, exports) {
  var _const = require("module$node_modules$$pixi$math$lib$const"), Rectangle = require("module$node_modules$$pixi$math$lib$shapes$Rectangle");
  class Ellipse {
    constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0) {
      this.x = x;
      this.y = y;
      this.width = halfWidth;
      this.height = halfHeight;
      this.type = _const.SHAPES.ELIP;
    }
    clone() {
      return new Ellipse(this.x, this.y, this.width, this.height);
    }
    contains(x, y) {
      if (0 >= this.width || 0 >= this.height) {
        return !1;
      }
      x = (x - this.x) / this.width;
      y = (y - this.y) / this.height;
      return x *= x, y *= y, 1 >= x + y;
    }
    getBounds() {
      return new Rectangle.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);
    }
  }
  Ellipse.prototype.toString = function() {
    return `[@pixi/math:Ellipse x=${this.x} y=${this.y} width=${this.width} height=${this.height}]`;
  };
  exports.Ellipse = Ellipse;
};

//# sourceMappingURL=module$node_modules$$pixi$math$lib$shapes$Ellipse.js.map
