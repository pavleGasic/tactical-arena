{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$utils$getSupportedGlCompressedTextureFormats.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,+GAAA,GAAoI,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAI5K,MAAIC,mCAAJ;AAgGAD,SAAQE,CAAAA,sCAAR,GA/FAA,QAA+C,EAAG;AAChD,QAAID,mCAAJ;AACE,aAAOA,mCAAP;AADF;AAGA,UAAME,KADSC,QAASC,CAAAA,aAATC,CAAuB,QAAvBA,CACGC,CAAAA,UAAP,CAAkB,OAAlB,CAAX;AACA,WAAKJ,EAAL,GAGAF,mCAHA,GAGsC,CAOpC,IAAGE,EAAGK,CAAAA,YAAH,CAAgB,8BAAhB,CAAA,GAAkD,CACnD,iBADmD,EAEnD,gBAFmD,EAGnD,gBAHmD,EAInD,qBAJmD,CAAlD,GAKC,EALJ,CAPoC,EAqBpC,IAAGL,EAAGK,CAAAA,YAAH,CAAgB,+BAAhB,CAAA,GAAmD,CACpD,gBADoD,EAEpD,gBAFoD,EAGpD,gBAHoD,CAAnD,GAIC,EAJJ,CArBoC,EA0BpC,IAAGL,EAAGK,CAAAA,YAAH,CAAgB,oCAAhB,CAAA,GAAwD,CACzD,qBADyD,EAEzD,qBAFyD,EAGzD,qBAHyD,CAAxD,GAIC,EAJJ,CA1BoC,EA+BpC,IAAGL,EAAGK,CAAAA,YAAH,CAAgB,8BAAhB,CAAA;AAAkD,KACnD,aADmD,EAEnD,aAFmD,EAGnD,cAHmD,EAInD,cAJmD,CAAlD,GAKC,EALJ,CA/BoC,EAuCpC,IAAGL,EAAGK,CAAAA,YAAH,CAAgB,8BAAhB,CAAA,GAAkD,2IAAA,CAAA,KAAA,CAAA,GAAA,CAAlD,GASC,EATJ,CAvCoC,EAqDpC,IAAGL,EAAGK,CAAAA,YAAH,CAAgB,+BAAhB,CAAA,GAAmD,6fAAA,CAAA,KAAA,CAAA,GAAA,CAAnD;AA6BC,MA7BJ,CArDoC,CAHtC,GACS,EADT;AALgD,GA+FlD;AApG4K,CAA5K;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$utils$getSupportedGlCompressedTextureFormats\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nlet supportedGLCompressedTextureFormats;\nfunction getSupportedGlCompressedTextureFormats() {\n  if (supportedGLCompressedTextureFormats)\n    return supportedGLCompressedTextureFormats;\n  const canvas = document.createElement(\"canvas\");\n  const gl = canvas.getContext(\"webgl\");\n  if (!gl) {\n    return [];\n  }\n  supportedGLCompressedTextureFormats = [\n    // BC compressed formats usable if \"texture-compression-bc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    // 'bc6h-rgb-ufloat'\n    // 'bc6h-rgb-float'\n    // 'bc7-rgba-unorm',\n    // 'bc7-rgba-unorm-srgb',\n    ...gl.getExtension(\"EXT_texture_compression_bptc\") ? [\n      \"bc6h-rgb-ufloat\",\n      \"bc6h-rgb-float\",\n      \"bc7-rgba-unorm\",\n      \"bc7-rgba-unorm-srgb\"\n    ] : [],\n    // BC compressed formats usable if \"texture-compression-bc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    // 'bc1-rgba-unorm',\n    // 'bc1-rgba-unorm-srgb',\n    // 'bc4-r-unorm'\n    // 'bc4-r-snorm'\n    // 'bc5-rg-unorm'\n    // 'bc5-rg-snorm'\n    ...gl.getExtension(\"WEBGL_compressed_texture_s3tc\") ? [\n      \"bc1-rgba-unorm\",\n      \"bc2-rgba-unorm\",\n      \"bc3-rgba-unorm\"\n    ] : [],\n    ...gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\") ? [\n      \"bc1-rgba-unorm-srgb\",\n      \"bc2-rgba-unorm-srgb\",\n      \"bc3-rgba-unorm-srgb\"\n    ] : [],\n    ...gl.getExtension(\"EXT_texture_compression_rgtc\") ? [\n      \"bc4-r-unorm\",\n      \"bc4-r-snorm\",\n      \"bc5-rg-unorm\",\n      \"bc5-rg-snorm\"\n    ] : [],\n    // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    ...gl.getExtension(\"WEBGL_compressed_texture_etc\") ? [\n      \"etc2-rgb8unorm\",\n      \"etc2-rgb8unorm-srgb\",\n      \"etc2-rgba8unorm\",\n      \"etc2-rgba8unorm-srgb\",\n      \"etc2-rgb8a1unorm\",\n      \"etc2-rgb8a1unorm-srgb\",\n      \"eac-r11unorm\",\n      \"eac-rg11unorm\"\n    ] : [],\n    // 'eac-r11snorm',\n    // 'eac-rg11snorm',\n    // ASTC compressed formats usable if \"texture-compression-astc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    ...gl.getExtension(\"WEBGL_compressed_texture_astc\") ? [\n      \"astc-4x4-unorm\",\n      \"astc-4x4-unorm-srgb\",\n      \"astc-5x4-unorm\",\n      \"astc-5x4-unorm-srgb\",\n      \"astc-5x5-unorm\",\n      \"astc-5x5-unorm-srgb\",\n      \"astc-6x5-unorm\",\n      \"astc-6x5-unorm-srgb\",\n      \"astc-6x6-unorm\",\n      \"astc-6x6-unorm-srgb\",\n      \"astc-8x5-unorm\",\n      \"astc-8x5-unorm-srgb\",\n      \"astc-8x6-unorm\",\n      \"astc-8x6-unorm-srgb\",\n      \"astc-8x8-unorm\",\n      \"astc-8x8-unorm-srgb\",\n      \"astc-10x5-unorm\",\n      \"astc-10x5-unorm-srgb\",\n      \"astc-10x6-unorm\",\n      \"astc-10x6-unorm-srgb\",\n      \"astc-10x8-unorm\",\n      \"astc-10x8-unorm-srgb\",\n      \"astc-10x10-unorm\",\n      \"astc-10x10-unorm-srgb\",\n      \"astc-12x10-unorm\",\n      \"astc-12x10-unorm-srgb\",\n      \"astc-12x12-unorm\",\n      \"astc-12x12-unorm-srgb\"\n    ] : []\n  ];\n  return supportedGLCompressedTextureFormats;\n}\n\nexports.getSupportedGlCompressedTextureFormats = getSupportedGlCompressedTextureFormats;\n//# sourceMappingURL=getSupportedGlCompressedTextureFormats.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","supportedGLCompressedTextureFormats","getSupportedGlCompressedTextureFormats","gl","document","createElement","canvas","getContext","getExtension"]
}
