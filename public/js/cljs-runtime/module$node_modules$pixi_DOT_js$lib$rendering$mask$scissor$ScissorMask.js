shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$mask$scissor$ScissorMask = function(global, require, module, exports) {
  var addMaskBounds = require("module$node_modules$pixi_DOT_js$lib$rendering$mask$utils$addMaskBounds"), addMaskLocalBounds = require("module$node_modules$pixi_DOT_js$lib$rendering$mask$utils$addMaskLocalBounds");
  "use strict";
  class ScissorMask {
    constructor(mask) {
      this.priority = 0;
      this.pipe = "scissorMask";
      this.mask = mask;
      this.mask.renderable = !1;
      this.mask.measurable = !1;
    }
    addBounds(bounds, skipUpdateTransform) {
      addMaskBounds.addMaskBounds(this.mask, bounds, skipUpdateTransform);
    }
    addLocalBounds(bounds, localRoot) {
      addMaskLocalBounds.addMaskLocalBounds(this.mask, bounds, localRoot);
    }
    containsPoint(point, hitTestFn) {
      return hitTestFn(this.mask, point);
    }
    reset() {
      this.mask.measurable = !0;
      this.mask = null;
    }
    destroy() {
      this.reset();
    }
  }
  exports.ScissorMask = ScissorMask;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$mask$scissor$ScissorMask.js.map
