{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStencilModesToPixi.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,uFAAA,GAA4G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhJC,QAAAA,GAASH,OAAA,CAAQ,4EAAR,CAATG;AAEJ,cAAA;AACMC,SAAAA,GAAwB,EAAxBA;AACNA,SAAA,CAAsBD,MAAOE,CAAAA,aAAcC,CAAAA,IAA3C,CAAA,GAAmD,IAAK,EAAxD;AACAF,SAAA,CAAsBD,MAAOE,CAAAA,aAAcE,CAAAA,QAA3C,CAAA,GAAuD,CACrDC,iBAAkB,CADmC,EAErDC,gBAAiB,CAFoC,CAAvD;AAIAL,SAAA,CAAsBD,MAAOE,CAAAA,aAAcK,CAAAA,kBAA3C,CAAA,GAAiE,CAC/DC,aAAc,CACZC,QAAS,OADG,EAEZC,OAAQ,iBAFI,CADiD,EAK/DC,YAAa,CACXF,QAAS,OADE,EAEXC,OAAQ,iBAFG,CALkD,CAAjE;AAUAT,SAAA,CAAsBD,MAAOE,CAAAA,aAAcU,CAAAA,qBAA3C,CAAA,GAAoE,CAClEJ,aAAc,CACZC,QAAS,OADG,EAEZC,OAAQ,iBAFI,CADoD,EAKlEC,YAAa,CACXF,QAAS,OADE,EAEXC,OAAQ,iBAFG,CALqD,CAApE;AAUAT,SAAA,CAAsBD,MAAOE,CAAAA,aAAcW,CAAAA,WAA3C,CAAA,GAA0D,CACxDR,iBAAkB,CADsC,EAExDG,aAAc,CACZC,QAAS,OADG,EAEZC,OAAQ,MAFI,CAF0C,EAMxDC,YAAa,CACXF,QAAS,OADE,EAEXC,OAAQ,MAFG,CAN2C,CAA1D;AAWAT,SAAA,CAAsBD,MAAOE,CAAAA,aAAcY,CAAAA,mBAA3C,CAAA,GAAkE,CAChET,iBAAkB,CAD8C,EAEhEG,aAAc,CACZC,QAAS,WADG,EAEZC,OAAQ,SAFI,CAFkD,EAMhEC,YAAa,CACXF,QAAS,WADE,EAEXC,OAAQ,SAFG,CANmD,CAAlE;AAYAX,SAAQE,CAAAA,qBAAR,GAAgCA,OAAhC;AAvDoJ,CAApJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/state/GpuStencilModesToPixi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStencilModesToPixi\"] = function(global,require,module,exports) {\n'use strict';\n\nvar _const = require('../../shared/state/const.js');\n\n\"use strict\";\nconst GpuStencilModesToPixi = [];\nGpuStencilModesToPixi[_const.STENCIL_MODES.NONE] = void 0;\nGpuStencilModesToPixi[_const.STENCIL_MODES.DISABLED] = {\n  stencilWriteMask: 0,\n  stencilReadMask: 0\n};\nGpuStencilModesToPixi[_const.STENCIL_MODES.RENDERING_MASK_ADD] = {\n  stencilFront: {\n    compare: \"equal\",\n    passOp: \"increment-clamp\"\n  },\n  stencilBack: {\n    compare: \"equal\",\n    passOp: \"increment-clamp\"\n  }\n};\nGpuStencilModesToPixi[_const.STENCIL_MODES.RENDERING_MASK_REMOVE] = {\n  stencilFront: {\n    compare: \"equal\",\n    passOp: \"decrement-clamp\"\n  },\n  stencilBack: {\n    compare: \"equal\",\n    passOp: \"decrement-clamp\"\n  }\n};\nGpuStencilModesToPixi[_const.STENCIL_MODES.MASK_ACTIVE] = {\n  stencilWriteMask: 0,\n  stencilFront: {\n    compare: \"equal\",\n    passOp: \"keep\"\n  },\n  stencilBack: {\n    compare: \"equal\",\n    passOp: \"keep\"\n  }\n};\nGpuStencilModesToPixi[_const.STENCIL_MODES.INVERSE_MASK_ACTIVE] = {\n  stencilWriteMask: 0,\n  stencilFront: {\n    compare: \"not-equal\",\n    passOp: \"replace\"\n  },\n  stencilBack: {\n    compare: \"not-equal\",\n    passOp: \"replace\"\n  }\n};\n\nexports.GpuStencilModesToPixi = GpuStencilModesToPixi;\n//# sourceMappingURL=GpuStencilModesToPixi.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","GpuStencilModesToPixi","STENCIL_MODES","NONE","DISABLED","stencilWriteMask","stencilReadMask","RENDERING_MASK_ADD","stencilFront","compare","passOp","stencilBack","RENDERING_MASK_REMOVE","MASK_ACTIVE","INVERSE_MASK_ACTIVE"]
}
