{
"version":3,
"file":"module$node_modules$$pixi$text_bitmap$lib$formats$XMLStringFormat.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,GAAsF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAE1HC,OAAOH,OAAA,CAAQ,0CAAR,CAFmH,EAE5FI,YAAYJ,OAAA,CAAQ,6DAAR,CAFgF;AAG9H,OAAMK,gBAAN;AAMSC,eAAI,CAACC,IAAD,CAAO;AAChB,aAAsB,QAAf,IAAA,MAAOA,KAAP,IAA2BA,IAAKC,CAAAA,QAAL,CAAc,cAAd,CAA3B,GAAqDJ,SAAUA,CAAAA,SAAUE,CAAAA,IAApB,CAAyBH,IAAKM,CAAAA,QAASC,CAAAA,OAAQC,CAAAA,QAAtB,CAA+BJ,IAA/B,CAAzB,CAArD,GAAsH,CAAA,CAA7H;AADgB;AAQXK,gBAAK,CAACC,MAAD,CAAS;AACnB,aAAOT,SAAUA,CAAAA,SAAUQ,CAAAA,KAApB,CAA0BT,IAAKM,CAAAA,QAASC,CAAAA,OAAQC,CAAAA,QAAtB,CAA+BE,MAA/B,CAA1B,CAAP;AADmB;AAdvB;AAkBAX,SAAQG,CAAAA,eAAR,GAA0BA,eAA1B;AArB8H,CAA9H;;",
"sources":["node_modules/@pixi/text-bitmap/lib/formats/XMLStringFormat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$text_bitmap$lib$formats$XMLStringFormat\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), XMLFormat = require(\"./XMLFormat.js\");\nclass XMLStringFormat {\n  /**\n   * Check if resource refers to text xml font data.\n   * @param data\n   * @returns - True if resource could be treated as font data, false otherwise.\n   */\n  static test(data) {\n    return typeof data == \"string\" && data.includes(\"<font>\") ? XMLFormat.XMLFormat.test(core.settings.ADAPTER.parseXML(data)) : !1;\n  }\n  /**\n   * Convert the text XML into BitmapFontData that we can use.\n   * @param xmlTxt\n   * @returns - Data to use for BitmapFont\n   */\n  static parse(xmlTxt) {\n    return XMLFormat.XMLFormat.parse(core.settings.ADAPTER.parseXML(xmlTxt));\n  }\n}\nexports.XMLStringFormat = XMLStringFormat;\n//# sourceMappingURL=XMLStringFormat.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","XMLFormat","XMLStringFormat","test","data","includes","settings","ADAPTER","parseXML","parse","xmlTxt"]
}
