{
"version":3,
"file":"module$node_modules$$pixi$core$lib$utils$QuadUv.js",
"lineCount":24,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAExGC,SAASH,OAAA,CAAQ,oDAAR,CAF+F;AAE7DI,QAAAA,GAAWJ,OAAA,CAAQ,sDAAR,CAAXI;AAC/C,OAAMC,OAAN,QAAqBD,OAASA,CAAAA,QAA9B;AACEE,eAAW,EAAG;AACZ,WAAA,EAAA;AAAS,UAAKC,CAAAA,QAAL,GAAgB,IAAIC,YAAJ,CAAiB,CACxC,CAAC,CADuC,EAExC,CAAC,CAFuC,EAGxC,CAHwC,EAIxC,CAAC,CAJuC,EAKxC,CALwC,EAMxC,CANwC,EAOxC,CAAC,CAPuC,EAQxC,CARwC,CAAjB,CAAhB;AASL,UAAKC,CAAAA,GAAL,GAAW,IAAID,YAAJ,CAAiB,CAC9B,CAD8B,EAE9B,CAF8B,EAG9B,CAH8B,EAI9B,CAJ8B,EAK9B,CAL8B,EAM9B,CAN8B,EAO9B,CAP8B,EAQ9B,CAR8B,CAAjB,CAAX;AASA,UAAKE,CAAAA,YAAL,GAAoB,IAAIP,MAAOA,CAAAA,MAAX,CAAkB,IAAKI,CAAAA,QAAvB,CAApB;AAAsD,UAAKI,CAAAA,QAAL,GAAgB,IAAIR,MAAOA,CAAAA,MAAX,CAAkB,IAAKM,CAAAA,GAAvB,CAAhB;AAA6C,UAAKG,CAAAA,YAAL,CAAkB,iBAAlB,EAAqC,IAAKF,CAAAA,YAA1C,CAAwDE,CAAAA,YAAxD,CAAqE,eAArE,EAAsF,IAAKD,CAAAA,QAA3F,CAAqGE,CAAAA,QAArG,CAA8G,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAA9G,CAAA;AAnB3F;AA2BdC,OAAG,CAACC,kBAAD,EAAqBC,gBAArB,CAAuC;AAAA,UACpCC,IAAI,CADgC,EAC7BC,IAAI,CADyB;AAExC,aAAO,IAAKT,CAAAA,GAAL,CAAS,CAAT,CAAA,GAAcQ,CAAd,EAAiB,IAAKR,CAAAA,GAAL,CAAS,CAAT,CAAjB,GAA+BS,CAA/B,EAAkC,IAAKT,CAAAA,GAAL,CAAS,CAAT,CAAlC,GAAgDQ,CAAhD,GAAoDD,gBAAiBG,CAAAA,KAArE,GAA6EJ,kBAAmBI,CAAAA,KAAhG,EAAuG,IAAKV,CAAAA,GAAL,CAAS,CAAT,CAAvG,GAAqHS,CAArH,EAAwH,IAAKT,CAAAA,GAAL,CAAS,CAAT,CAAxH,GAAsIQ,CAAtI,GAA0ID,gBAAiBG,CAAAA,KAA3J,GAAmKJ,kBAAmBI,CAAAA,KAAtL,EAA6L,IAAKV,CAAAA,GAAL,CAAS,CAAT,CAA7L,GAA2MS,CAA3M,GAA+MF,gBAAiBI,CAAAA,MAAhO,GAAyOL,kBAAmBK,CAAAA,MAA5P,EAAoQ,IAAKX,CAAAA,GAAL,CAAS,CAAT,CAApQ,GAAkRQ,CAAlR,EAAqR,IAAKR,CAAAA,GAAL,CAAS,CAAT,CAArR,GAAmSS,CAAnS,GAAuSF,gBAAiBI,CAAAA,MAAxT,GAAiUL,kBAAmBK,CAAAA,MAApV,EAA4VH,CAA5V,GAAgWD,gBAAiBC,CAAAA,CAAjX,EAAoXC,CAApX,GAAwXF,gBAAiBE,CAAAA,CAAzY,EAA4Y,IAAKX,CAAAA,QAAL,CAAc,CAAd,CAA5Y,GAA+ZU,CAA/Z,EAAka,IAAKV,CAAAA,QAAL,CAAc,CAAd,CAAla,GAAqbW,CAArb,EAAwb,IAAKX,CAAAA,QAAL,CAAc,CAAd,CAAxb,GAA2cU,CAA3c,GAA+cD,gBAAiBG,CAAAA,KAAhe,EAAue,IAAKZ,CAAAA,QAAL,CAAc,CAAd,CAAve;AAA0fW,OAA1f,EAA6f,IAAKX,CAAAA,QAAL,CAAc,CAAd,CAA7f,GAAghBU,CAAhhB,GAAohBD,gBAAiBG,CAAAA,KAAriB,EAA4iB,IAAKZ,CAAAA,QAAL,CAAc,CAAd,CAA5iB,GAA+jBW,CAA/jB,GAAmkBF,gBAAiBI,CAAAA,MAAplB,EAA4lB,IAAKb,CAAAA,QAAL,CAAc,CAAd,CAA5lB,GAA+mBU,CAA/mB,EAAknB,IAAKV,CAAAA,QAAL,CAAc,CAAd,CAAlnB,GAAqoBW,CAAroB,GAAyoBF,gBAAiBI,CAAAA,MAA1pB,EAAkqB,IAAKC,CAAAA,UAAL,EAAlqB,EAAqrB,IAA5rB;AAFwC;AAQ1CA,cAAU,EAAG;AACX,aAAO,IAAKX,CAAAA,YAAaY,CAAAA,SAAlB,EAAA,EAA+B,IAAKX,CAAAA,QAASW,CAAAA,SAAd,EAA/B,EAA0D,IAAjE;AADW;AApCf;AAwCApB,SAAQG,CAAAA,MAAR,GAAiBA,MAAjB;AA3C4G,CAA5G;;",
"sources":["node_modules/@pixi/core/lib/utils/QuadUv.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$utils$QuadUv\"] = function(global,require,module,exports) {\n\"use strict\";\nvar Buffer = require(\"../geometry/Buffer.js\"), Geometry = require(\"../geometry/Geometry.js\");\nclass QuadUv extends Geometry.Geometry {\n  constructor() {\n    super(), this.vertices = new Float32Array([\n      -1,\n      -1,\n      1,\n      -1,\n      1,\n      1,\n      -1,\n      1\n    ]), this.uvs = new Float32Array([\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1\n    ]), this.vertexBuffer = new Buffer.Buffer(this.vertices), this.uvBuffer = new Buffer.Buffer(this.uvs), this.addAttribute(\"aVertexPosition\", this.vertexBuffer).addAttribute(\"aTextureCoord\", this.uvBuffer).addIndex([0, 1, 2, 0, 2, 3]);\n  }\n  /**\n   * Maps two Rectangle to the quad.\n   * @param targetTextureFrame - The first rectangle\n   * @param destinationFrame - The second rectangle\n   * @returns - Returns itself.\n   */\n  map(targetTextureFrame, destinationFrame) {\n    let x = 0, y = 0;\n    return this.uvs[0] = x, this.uvs[1] = y, this.uvs[2] = x + destinationFrame.width / targetTextureFrame.width, this.uvs[3] = y, this.uvs[4] = x + destinationFrame.width / targetTextureFrame.width, this.uvs[5] = y + destinationFrame.height / targetTextureFrame.height, this.uvs[6] = x, this.uvs[7] = y + destinationFrame.height / targetTextureFrame.height, x = destinationFrame.x, y = destinationFrame.y, this.vertices[0] = x, this.vertices[1] = y, this.vertices[2] = x + destinationFrame.width, this.vertices[3] = y, this.vertices[4] = x + destinationFrame.width, this.vertices[5] = y + destinationFrame.height, this.vertices[6] = x, this.vertices[7] = y + destinationFrame.height, this.invalidate(), this;\n  }\n  /**\n   * Legacy upload method, just marks buffers dirty.\n   * @returns - Returns itself.\n   */\n  invalidate() {\n    return this.vertexBuffer._updateID++, this.uvBuffer._updateID++, this;\n  }\n}\nexports.QuadUv = QuadUv;\n//# sourceMappingURL=QuadUv.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Geometry","QuadUv","constructor","vertices","Float32Array","uvs","vertexBuffer","uvBuffer","addAttribute","addIndex","map","targetTextureFrame","destinationFrame","x","y","width","height","invalidate","_updateID"]
}
