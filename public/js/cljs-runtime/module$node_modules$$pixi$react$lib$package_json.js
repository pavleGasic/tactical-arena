shadow$provide.module$node_modules$$pixi$react$lib$package_json = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  global = ["react", "pixi"];
  require = {url:"https://github.com/pixijs/pixi-react/issues"};
  module = {type:"git", url:"git+https://github.com/pixijs/pixi-react.git"};
  var exports$1 = {".":{"import":{types:"./types/index.d.ts", "default":"./lib/index.mjs"}, require:{types:"./types/index.d.ts", "default":"./lib/index.js"}}}, files = ["lib", "dist", "types"], workspaces = ["docs"], scripts = {build:"rimraf dist lib types \x26\x26 rollup -c \x26\x26 tsc", "build:docs":"npm run --workspace docs build", deploy:"npm run deploy --workspace docs", "start:docs":"npm run --workspace docs start", clean:"xs clean", docs:"xs docs", lint:"xs lint", "lint:fix":"xs lint --fix", 
  prepare:"husky install", prerelease:"npm run test:lint \x26\x26 npm run build", release:"xs bump,publish,git-push", test:"tsc --project tsconfig.test.json \x26\x26 vitest run", "test:e2e":"tsc --project tsconfig.test.json \x26\x26 vitest run e2e", "test:unit":"tsc --project tsconfig.test.json \x26\x26 vitest run unit", "test:lint":"xs lint", "test:watch":"vitest", "test:types":"tsc --noEmit --emitDeclarationOnly false"}, husky = {hooks:{"pre-commit":"lint-staged"}}, dependencies = {"its-fine":"^2.0.0", 
  "react-reconciler":"0.31.0"}, devDependencies = {"@pixi/extension-scripts":"^4.0.0", "@rollup/plugin-commonjs":"^25.0.8", "@rollup/plugin-json":"^6.1.0", "@rollup/plugin-node-resolve":"^15.2.3", "@testing-library/jest-dom":"^6.4.8", "@testing-library/react":"^16.1.0", "@testing-library/user-event":"^14.5.2", "@types/react":"^19.0.0", "@types/react-reconciler":"^0.28.9", "@vitejs/plugin-react":"^4.3.1", "@vitest/browser":"^2.0.4", "eslint-plugin-react-hooks":"^5.2.0", husky:"^8.0.0", jsdom:"^25.0.0", 
  "pixi.js":"8.2.6", playwright:"^1.45.3", react:"^19.0.0", "react-dom":"^19.0.0", rollup:"^4.18.0", "rollup-plugin-esbuild":"^6.1.1", "rollup-plugin-inject-process-env":"^1.3.1", "rollup-plugin-peer-deps-external":"^2.2.4", "rollup-plugin-sourcemaps":"^0.6.3", typescript:"^5.4.5", vitest:"^2.0.0"}, peerDependencies = {"pixi.js":"^8.2.6", react:"\x3e\x3d19.0.0"}, overrides = {rollup:"^4.18.0"}, publishConfig = {access:"public"}, extensionConfig = {lint:["test", "src", "docs"], environments:["node"], 
  docsName:"PixiJS React", docsTitle:"PixiJS React API Documentation", docsDescription:"Documentation for PixiJS React library", docsKeyword:"docs, documentation, pixi, pixijs, react, html5, javascript, jsdoc"}, packageData = {name:"@pixi/react", version:"0.0.0-development", description:"Write PixiJS applications using React declarative style.", keywords:global, homepage:"https://github.com/pixijs/pixi-react#readme", bugs:require, repository:module, license:"MIT", exports:exports$1, main:"lib/index.js", 
  module:"lib/index.mjs", types:"types/index.d.ts", files, workspaces, scripts, husky, "lint-staged":{"*.{ts,js,mjs}":["eslint --cache --fix --max-warnings 0"]}, dependencies, devDependencies, peerDependencies, overrides, publishConfig, extensionConfig};
  exports.bugs = require;
  exports.default = packageData;
  exports.dependencies = dependencies;
  exports.description = "Write PixiJS applications using React declarative style.";
  exports.devDependencies = devDependencies;
  exports.exports = exports$1;
  exports.extensionConfig = extensionConfig;
  exports.files = files;
  exports.homepage = "https://github.com/pixijs/pixi-react#readme";
  exports.husky = husky;
  exports.keywords = global;
  exports.license = "MIT";
  exports.main = "lib/index.js";
  exports.module = "lib/index.mjs";
  exports.name = "@pixi/react";
  exports.overrides = overrides;
  exports.peerDependencies = peerDependencies;
  exports.publishConfig = publishConfig;
  exports.repository = module;
  exports.scripts = scripts;
  exports.types = "types/index.d.ts";
  exports.version = "0.0.0-development";
  exports.workspaces = workspaces;
};

//# sourceMappingURL=module$node_modules$$pixi$react$lib$package_json.js.map
