{"version":3,"sources":["app/frontend/ui/battlefield/characters.cljs"],"mappings":"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","names":["app.frontend.ui.battlefield.characters/load-character-asset","asset-path","js/module$node_modules$pixi_DOT_js$lib$index.Assets","_","texture","module$node_modules$pixi_DOT_js$lib$index/Texture","module$node_modules$pixi_DOT_js$lib$index/SCALE_MODES","app.frontend.ui.battlefield.characters/animate-move!","sprite","from-x","from-y","to-x","to-y","start-time","js/performance","pixel-from-x","app.frontend.ui.battlefield.config/tile-size","app.frontend.ui.battlefield.config/tile-scale","pixel-from-y","pixel-to-x","pixel-to-y","now","elapsed","t","x__5090__auto__","y__5091__auto__","new-x","new-y","js/requestAnimationFrame","step","app.frontend.ui.battlefield.characters/render-characters!","map-container","seq__36989","cljs.core/seq","cljs.core/deref","chunk__36990","count__36991","i__36992","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","character","app.frontend.ui.battlefield.state/characters","load-promise-texture","G__37012","cljs.core/Keyword","js/Error","G__37015","app.frontend.ui.battlefield.config/warrior-path","app.frontend.ui.battlefield.config/wizard-path","app.frontend.ui.battlefield.config/medic-path","app.frontend.ui.battlefield.sprites/create-character-sprite","p1__36988#","cljs.core.swap_BANG_","cljs.core.mapv","c","cljs.core._EQ_","cljs.core.assoc"],"sourcesContent":["(ns app.frontend.ui.battlefield.characters\n  (:require [app.frontend.ui.battlefield.state :as state]\n            [app.frontend.ui.battlefield.sprites :as sprites]\n            [\"pixi.js\" :refer [Texture Assets SCALE_MODES]]\n            [app.frontend.ui.battlefield.config :as config]))\n\n(defn load-character-asset [asset-path]\n  (-> (.load Assets asset-path)\n      (.then (fn [_]\n               (let [texture (Texture.from asset-path)]\n                 (set! (.-scaleMode (.-baseTexture texture)) SCALE_MODES.NEAREST)\n                 texture)))))\n\n(defn animate-move! [sprite from-x from-y to-x to-y]\n  (let [start-time (.now js/performance)\n        pixel-from-x (* from-x config/tile-size config/tile-scale)\n        pixel-from-y (* from-y config/tile-size config/tile-scale)\n        pixel-to-x (* to-x config/tile-size config/tile-scale)\n        pixel-to-y (* to-y config/tile-size config/tile-scale)]\n    (letfn [(step []\n              (let [now (.now js/performance)\n                    elapsed (- now start-time)\n                    t (min 1 (/ elapsed 300))\n                    new-x (+ pixel-from-x (* (- pixel-to-x pixel-from-x) t))\n                    new-y (+ pixel-from-y (* (- pixel-to-y pixel-from-y) t))]\n                (set! (.-x sprite) new-x)\n                (set! (.-y sprite) new-y)\n                (when (< t 1)\n                  (js/requestAnimationFrame step))))]\n      (js/requestAnimationFrame step))))\n\n(defn render-characters! [map-container]\n  (doseq [character @state/characters]\n    (let [load-promise-texture (case (:type character)\n                         :warrior (load-character-asset config/warrior-path)\n                         :wizard (load-character-asset config/wizard-path)\n                         :medic (load-character-asset config/medic-path))]\n      (.then load-promise-texture\n             (fn [texture]\n               (let [sprite (sprites/create-character-sprite character texture)]\n                 (swap! state/characters\n                        #(mapv (fn [c]\n                                 (if (= (:id c) (:id character))\n                                   (assoc c :sprite sprite)\n                                   c))\n                               %))\n                 (.addChild ^js map-container sprite)))))))"]}