{"version":3,"sources":["app/frontend/ui/battlefield/characters.cljs"],"mappings":";;AAOA,4DAAA,5DAAMA,gIAAeC,OAAOC,OAAOC,OAAOC,KAAKC;AAA/C,AACE,IAAMC,aAAW,AAAMC;IACjBC,eAAa,CAAA,CAAGN,SAAOO,gDAAiBC;IACxCC,eAAa,CAAA,CAAGR,SAAOM,gDAAiBC;IACxCE,aAAW,CAAA,CAAGR,OAAKK,gDAAiBC;IACpCG,aAAW,CAAA,CAAGR,OAAKI,gDAAiBC;AAJ1C,AAKE,WAAA;AAAA,AACU,IAAMI,MAAI,AAAMP;IACVQ,UAAQ,CAAGD,MAAIR;IACfU,IAAE,iBAAAC,kBAAA;IAAAC,kBAAO,WAAA,VAAGH;AAAV,AAAA,SAAAE,kBAAAC,mBAAAD,kBAAAC;;IACFC,QAAM,CAAGX,eAAa,CAAG,CAAGI,aAAWJ,gBAAcQ;IACrDI,QAAM,CAAGT,eAAa,CAAG,CAAGE,aAAWF,gBAAcK;AAJ3D,AAKE,CAAM,AAAKf,WAAQkB;;AACnB,CAAM,AAAKlB,WAAQmB;;AACnB,GAAM,KAAA,JAAGJ;AAAT,AACE,OAACK,sBAAyBC;;AAD5B;;;AARZ,AAUE,OAACD,sBAAyBC;;AAEhC,iEAAA,jEAAMC,0IAAoBC;AAA1B,OACM,AAAOC,sDAAOC,7DACd,0HAAO,WAAKC;AAAL,AACE,IAAMC,UAAQ,CAAC,AAAAC,uFAAA,AAAAA,+IAAA,AAAAA,1DAAaH,4HAAAA;AAA5B,AACE,CAAM,AAAa,AAAeE,gCAAU,AAAAE;;AAC5C,IAAAC,aAAA,AAAAC,cAAA,AAAAC,gBAAmBa;IAAnBZ,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,gBAAA,AAAAD,mDAAAE,/DAAQS;AAAR,AAAA,AACE,IAAM5C,eAAO,AAAC8C,4DAAgCF,UAAUjB;AAAxD,AACE,gGAAA,hGAACqB,mDAAMH;kBAAPE;AAAA,AAAyB,OAACE,6CAAK;kBAAKC;AAAL,AACJ,GAAI,AAACC,6CAAE,AAAA,gFAAKD,GAAG,AAAA,gFAAKN;AAClB,uDAAA,hDAACQ,8CAAMF,0DAAUlD;;AAAQkD;;;CAF7BH;;;;AAGzB,AAAexB,uBAAcvB;;AALjC;AAAA,eAAA8B;eAAAG;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAC,qBAAA,AAAAL,cAAAD;AAAA,AAAA,GAAAM;AAAA,AAAA,IAAAN,iBAAAM;AAAA,AAAA,GAAA,AAAAC,6BAAAP;AAAA,IAAAQ,kBAAA,AAAAC,sBAAAT;AAAA,AAAA,eAAA,AAAAU,qBAAAV;eAAAQ;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,gBAAA,AAAAI,gBAAAZ,5BAAQc;AAAR,AAAA,AACE,IAAM5C,eAAO,AAAC8C,4DAAgCF,UAAUjB;AAAxD,AACE,gGAAA,hGAACqB,mDAAMH;kBAAPE;AAAA,AAAyB,OAACE,6CAAK;kBAAKC;AAAL,AACJ,GAAI,AAACC,6CAAE,AAAA,gFAAKD,GAAG,AAAA,gFAAKN;AAClB,uDAAA,hDAACQ,8CAAMF,0DAAUlD;;AAAQkD;;;CAF7BH;;;;AAGzB,AAAexB,uBAAcvB;;AALjC;AAAA,eAAA,AAAA2C,eAAAb;eAAA;eAAA;eAAA;;;;;;;;AAAA","names":["app.frontend.ui.battlefield.characters/animate-move!","sprite","from-x","from-y","to-x","to-y","start-time","js/performance","pixel-from-x","app.frontend.ui.battlefield.config/tile-size","app.frontend.ui.battlefield.config/tile-scale","pixel-from-y","pixel-to-x","pixel-to-y","now","elapsed","t","x__5090__auto__","y__5091__auto__","new-x","new-y","js/requestAnimationFrame","step","app.frontend.ui.battlefield.characters/render-characters!","map-container","js/module$node_modules$pixi_DOT_js$lib$index.Assets","app.frontend.ui.battlefield.config/warrior-sprite-path","_","texture","module$node_modules$pixi_DOT_js$lib$index/Texture","module$node_modules$pixi_DOT_js$lib$index/SCALE_MODES","seq__40453","cljs.core/seq","cljs.core/deref","chunk__40454","count__40455","i__40456","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","character","app.frontend.ui.battlefield.state/characters","app.frontend.ui.battlefield.sprites/create-character-sprite","p1__40440#","cljs.core.swap_BANG_","cljs.core.mapv","c","cljs.core._EQ_","cljs.core.assoc"],"sourcesContent":["(ns app.frontend.ui.battlefield.characters\n  (:require [app.frontend.ui.battlefield.state :as state]\n            [app.frontend.ui.battlefield.sprites :as sprites]\n            [\"pixi.js\" :refer [Texture Assets SCALE_MODES]]\n            [app.frontend.ui.battlefield.config :as config]))\n\n\n(defn animate-move! [sprite from-x from-y to-x to-y]\n  (let [start-time (.now js/performance)\n        pixel-from-x (* from-x config/tile-size config/tile-scale)\n        pixel-from-y (* from-y config/tile-size config/tile-scale)\n        pixel-to-x (* to-x config/tile-size config/tile-scale)\n        pixel-to-y (* to-y config/tile-size config/tile-scale)]\n    (letfn [(step []\n              (let [now (.now js/performance)\n                    elapsed (- now start-time)\n                    t (min 1 (/ elapsed 300))\n                    new-x (+ pixel-from-x (* (- pixel-to-x pixel-from-x) t))\n                    new-y (+ pixel-from-y (* (- pixel-to-y pixel-from-y) t))]\n                (set! (.-x sprite) new-x)\n                (set! (.-y sprite) new-y)\n                (when (< t 1)\n                  (js/requestAnimationFrame step))))]\n      (js/requestAnimationFrame step))))\n\n(defn render-characters! [map-container]\n  (-> (.load Assets config/warrior-sprite-path)\n      (.then (fn [_]\n               (let [texture (Texture.from config/warrior-sprite-path)]\n                 (set! (.-scaleMode (.-baseTexture texture)) SCALE_MODES.NEAREST)\n                 (doseq [character @state/characters]\n                   (let [sprite (sprites/create-character-sprite character texture)]\n                     (swap! state/characters #(mapv (fn [c]\n                                                (if (= (:id c) (:id character))\n                                                  (assoc c :sprite sprite) c)) %))\n                     (.addChild ^js map-container sprite))))))))"]}