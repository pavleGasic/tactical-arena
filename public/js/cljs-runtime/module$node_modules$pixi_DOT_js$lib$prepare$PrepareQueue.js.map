{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$prepare$PrepareQueue.js",
"lineCount":32,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/prepare/PrepareQueue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$prepare$PrepareQueue\"] = function(global,require,module,exports) {\n'use strict';\n\nvar TextureSource = require('../rendering/renderers/shared/texture/sources/TextureSource.js');\nvar Texture = require('../rendering/renderers/shared/texture/Texture.js');\nvar Container = require('../scene/container/Container.js');\nvar Graphics = require('../scene/graphics/shared/Graphics.js');\nvar GraphicsContext = require('../scene/graphics/shared/GraphicsContext.js');\nvar Mesh = require('../scene/mesh/shared/Mesh.js');\nvar Sprite = require('../scene/sprite/Sprite.js');\nvar AnimatedSprite = require('../scene/sprite-animated/AnimatedSprite.js');\nvar TilingSprite = require('../scene/sprite-tiling/TilingSprite.js');\nvar Text = require('../scene/text/Text.js');\nvar PrepareBase = require('./PrepareBase.js');\n\n\"use strict\";\nclass PrepareQueue extends PrepareBase.PrepareBase {\n  /**\n   * Resolve the given resource type and return an item for the queue\n   * @param source\n   * @param queue\n   */\n  resolveQueueItem(source, queue) {\n    if (source instanceof Container.Container) {\n      this.resolveContainerQueueItem(source, queue);\n    } else if (source instanceof TextureSource.TextureSource || source instanceof Texture.Texture) {\n      queue.push(source.source);\n    } else if (source instanceof GraphicsContext.GraphicsContext) {\n      queue.push(source);\n    }\n    return null;\n  }\n  /**\n   * Resolve the given container and return an item for the queue\n   * @param container\n   * @param queue\n   */\n  resolveContainerQueueItem(container, queue) {\n    if (container instanceof Sprite.Sprite || container instanceof TilingSprite.TilingSprite || container instanceof Mesh.Mesh) {\n      queue.push(container.texture.source);\n    } else if (container instanceof Text.Text) {\n      queue.push(container);\n    } else if (container instanceof Graphics.Graphics) {\n      queue.push(container.context);\n    } else if (container instanceof AnimatedSprite.AnimatedSprite) {\n      container.textures.forEach((textureOrFrame) => {\n        if (textureOrFrame.source) {\n          queue.push(textureOrFrame.source);\n        } else {\n          queue.push(textureOrFrame.texture.source);\n        }\n      });\n    }\n  }\n  /**\n   * Resolve the given graphics context and return an item for the queue\n   * @param graphicsContext\n   */\n  resolveGraphicsContextQueueItem(graphicsContext) {\n    this.renderer.graphicsContext.getGpuContext(graphicsContext);\n    const { instructions } = graphicsContext;\n    for (const instruction of instructions) {\n      if (instruction.action === \"texture\") {\n        const { image } = instruction.data;\n        return image.source;\n      } else if (instruction.action === \"fill\") {\n        const { texture } = instruction.data.style;\n        return texture.source;\n      }\n    }\n    return null;\n  }\n}\n\nexports.PrepareQueue = PrepareQueue;\n//# sourceMappingURL=PrepareQueue.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","TextureSource","Texture","Container","Graphics","GraphicsContext","Mesh","Sprite","AnimatedSprite","TilingSprite","Text","PrepareBase","PrepareQueue","resolveQueueItem","source","queue","resolveContainerQueueItem","push","container","texture","context","textures","forEach","textureOrFrame","resolveGraphicsContextQueueItem","graphicsContext","renderer","getGpuContext","instructions","instruction","action","image","data","style"]
}
