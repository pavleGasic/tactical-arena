shadow$provide.module$node_modules$$pixi$math$lib$shapes$Circle = function(global, require, module, exports) {
  var _const = require("module$node_modules$$pixi$math$lib$const"), Rectangle = require("module$node_modules$$pixi$math$lib$shapes$Rectangle");
  class Circle {
    constructor(x = 0, y = 0, radius = 0) {
      this.x = x;
      this.y = y;
      this.radius = radius;
      this.type = _const.SHAPES.CIRC;
    }
    clone() {
      return new Circle(this.x, this.y, this.radius);
    }
    contains(x, y) {
      if (0 >= this.radius) {
        return !1;
      }
      const r2 = this.radius * this.radius;
      x = this.x - x;
      y = this.y - y;
      return x *= x, y *= y, x + y <= r2;
    }
    getBounds() {
      return new Rectangle.Rectangle(this.x - this.radius, this.y - this.radius, 2 * this.radius, 2 * this.radius);
    }
  }
  Circle.prototype.toString = function() {
    return `[@pixi/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;
  };
  exports.Circle = Circle;
};

//# sourceMappingURL=module$node_modules$$pixi$math$lib$shapes$Circle.js.map
