{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,GAAyF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEjI,MAAIC,OAAOH,OAAA,CAAQ,0CAAR,CAAX;AACMI,QAAAA,GAAoB,CACxBC,UAAWF,IAAKG,CAAAA,aAAcC,CAAAA,WADN,EAExBC,KAAOC,KAADD,IAAWE,KAAMC,CAAAA,OAAN,CAAcF,KAAd,CAAXD,IAAmCC,KAAMG,CAAAA,KAAN,CAAaC,CAAD,IAAOA,CAAP,YAAoBV,IAAKW,CAAAA,OAArC,CAFjB,EAGxBC,mBAAoB,CAACC,IAAD,EAAOP,KAAP,CAAAM,IAAiB;AACnC,UAAME,MAAM,EAAZ;AACA,WAAOD,IAAKE,CAAAA,OAAL,CAAcC,GAAD,IAAS;AAC3BV,WAAMS,CAAAA,OAAN,CAAc,CAACE,IAAD,EAAOC,CAAP,CAAA,IAAa;AACzBJ,WAAA,CAAIE,GAAJ,IAAiB,CAAN,KAAAE,CAAA,GAAU,EAAV,GAAeA,CAAf,GAAmB,CAA9B,EAAA,GAAoCD,IAApC;AADyB,OAA3B,CAAA;AAD2B,KAAtB,CAAA,EAIHH,GAJJ;AAFmC,GAHb,CAApBb;AAYND,MAAKmB,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBnB,MAApB,CAAA;AACAF,SAAQE,CAAAA,iBAAR,GAA4BA,MAA5B;AAhBiI,CAAjI;;",
"sources":["node_modules/@pixi/assets/lib/cache/parsers/cacheTextureArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nconst cacheTextureArray = {\n  extension: core.ExtensionType.CacheParser,\n  test: (asset) => Array.isArray(asset) && asset.every((t) => t instanceof core.Texture),\n  getCacheableAssets: (keys, asset) => {\n    const out = {};\n    return keys.forEach((key) => {\n      asset.forEach((item, i) => {\n        out[key + (i === 0 ? \"\" : i + 1)] = item;\n      });\n    }), out;\n  }\n};\ncore.extensions.add(cacheTextureArray);\nexports.cacheTextureArray = cacheTextureArray;\n//# sourceMappingURL=cacheTextureArray.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","cacheTextureArray","extension","ExtensionType","CacheParser","test","asset","Array","isArray","every","t","Texture","getCacheableAssets","keys","out","forEach","key","item","i","extensions","add"]
}
