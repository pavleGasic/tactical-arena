{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$measureHtmlText.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,yEAAA,GAA8F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGtI,MAAIC,qBAAqBH,OAAA,CAAQ,wEAAR,CAAzB;AAEA,cAAA;AACA,MAAII,sBAAJ;AAmBAF,SAAQG,CAAAA,eAAR,GAlBAA,QAAwB,CAACC,IAAD,EAAOC,KAAP,EAAcC,YAAd,EAA4BC,kBAA5B,CAAgD;AACtEA,sBAAA,KAAuBA,kBAAvB,GAA4CL,sBAA5C,KAAuEA,sBAAvE,GAAgG,IAAID,kBAAmBA,CAAAA,kBAAvB,EAAhG;AACA,UAAM,CAAEO,UAAF,EAAcC,YAAd,EAA4BC,OAA5B,CAAA,GAAwCH,kBAA9C;AACAC,cAAWG,CAAAA,SAAX,GAAwB,UAASN,KAAMO,CAAAA,QAAf,mCAA0DR,IAA1D,QAAxB;AACAI,cAAWK,CAAAA,YAAX,CAAwB,OAAxB,EAAiC,mDAAjC,CAAA;AACIP,gBAAJ,KACEG,YAAaK,CAAAA,WADf,GAC6BR,YAD7B;AAGAS,YAASC,CAAAA,IAAKC,CAAAA,WAAd,CAA0BP,OAA1B,CAAA;AACMQ,QAAAA,GAAgBV,UAAWW,CAAAA,qBAAX,EAAhBD;AACNR,WAAQU,CAAAA,MAAR,EAAA;AACMC,SAAAA,GAAgC,CAAhCA,GAAgBhB,KAAMiB,CAAAA,OAAtBD;AACN,WAAO,CACLE,MAAOL,IAAcK,CAAAA,KAArBA,GAA6BF,KADxB,EAELG,OAAQN,IAAcM,CAAAA,MAAtBA,GAA+BH,KAF1B,CAAP;AAZsE,GAkBxE;AAzBsI,CAAtI;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text-html/utils/measureHtmlText.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$measureHtmlText\"] = function(global,require,module,exports) {\n'use strict';\n\nvar HTMLTextRenderData = require('../HTMLTextRenderData.js');\n\n\"use strict\";\nlet tempHTMLTextRenderData;\nfunction measureHtmlText(text, style, fontStyleCSS, htmlTextRenderData) {\n  htmlTextRenderData || (htmlTextRenderData = tempHTMLTextRenderData || (tempHTMLTextRenderData = new HTMLTextRenderData.HTMLTextRenderData()));\n  const { domElement, styleElement, svgRoot } = htmlTextRenderData;\n  domElement.innerHTML = `<style>${style.cssStyle};</style><div style='padding:0'>${text}</div>`;\n  domElement.setAttribute(\"style\", \"transform-origin: top left; display: inline-block\");\n  if (fontStyleCSS) {\n    styleElement.textContent = fontStyleCSS;\n  }\n  document.body.appendChild(svgRoot);\n  const contentBounds = domElement.getBoundingClientRect();\n  svgRoot.remove();\n  const doublePadding = style.padding * 2;\n  return {\n    width: contentBounds.width - doublePadding,\n    height: contentBounds.height - doublePadding\n  };\n}\n\nexports.measureHtmlText = measureHtmlText;\n//# sourceMappingURL=measureHtmlText.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","HTMLTextRenderData","tempHTMLTextRenderData","measureHtmlText","text","style","fontStyleCSS","htmlTextRenderData","domElement","styleElement","svgRoot","innerHTML","cssStyle","setAttribute","textContent","document","body","appendChild","contentBounds","getBoundingClientRect","remove","doublePadding","padding","width","height"]
}
