{
"version":3,
"file":"module$node_modules$$pixi$mesh$lib$MeshBatchUvs.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAE5G,OAAMC,aAAN;AAKEC,eAAW,CAACC,QAAD,EAAWC,QAAX,CAAqB;AAC9B,UAAKD,CAAAA,QAAL,GAAgBA,QAAhB;AAA0B,UAAKC,CAAAA,QAAL,GAAgBA,QAAhB;AAA0B,UAAKC,CAAAA,IAAL,GAAY,IAAZ;AAA6C,UAAKC,CAAAA,gBAAL,GAA3B,IAAKC,CAAAA,eAAsB,GAAJ,CAAC,CAAG;AAA4B,UAAKC,CAAAA,SAAL,GAAiB,CAAjB;AAD/F;AAOhCC,UAAM,CAACC,WAAD,CAAc;AAClB,UAAKA,WAAL,IAAoB,IAAKH,CAAAA,eAAzB,KAA6C,IAAKJ,CAAAA,QAASK,CAAAA,SAA3D,IAAwE,IAAKF,CAAAA,gBAA7E,KAAkG,IAAKF,CAAAA,QAASI,CAAAA,SAAhH;AAEA,YAAKD,CAAAA,eAEwI,GAFtH,IAAKJ,CAAAA,QAASK,CAAAA,SAEwG,EAF7F,IAAKF,CAAAA,gBAEwF,GAFrE,IAAKF,CAAAA,QAASI,CAAAA,SAEuD,EADvIH,WACuI,GADhI,IAAKF,CAAAA,QAASE,CAAAA,IACkH,EAA3I,IAAKA,CAAAA,IAAsI,IAA9H,IAAKA,CAAAA,IAAKM,CAAAA,MAAoH,KAAzGN,WAAKM,CAAAA,MAAoG,KAAxF,IAAKN,CAAAA,IAAmF,GAA5E,IAAIO,YAAJ,CAAiBP,WAAKM,CAAAA,MAAtB,CAA4E,GAA5C,IAAKP,CAAAA,QAASS,CAAAA,WAAd,CAA0BR,WAA1B,EAAgC,IAAKA,CAAAA,IAArC,CAA4C,EAAA,IAAKG,CAAAA,SAAL,EAAA;AAJ7I;AADkB;AAZtB;AAoBAR,SAAQC,CAAAA,YAAR,GAAuBA,YAAvB;AAtB4G,CAA5G;;",
"sources":["node_modules/@pixi/mesh/lib/MeshBatchUvs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mesh$lib$MeshBatchUvs\"] = function(global,require,module,exports) {\n\"use strict\";\nclass MeshBatchUvs {\n  /**\n   * @param uvBuffer - Buffer with normalized uv's\n   * @param uvMatrix - Material UV matrix\n   */\n  constructor(uvBuffer, uvMatrix) {\n    this.uvBuffer = uvBuffer, this.uvMatrix = uvMatrix, this.data = null, this._bufferUpdateId = -1, this._textureUpdateId = -1, this._updateID = 0;\n  }\n  /**\n   * Updates\n   * @param forceUpdate - force the update\n   */\n  update(forceUpdate) {\n    if (!forceUpdate && this._bufferUpdateId === this.uvBuffer._updateID && this._textureUpdateId === this.uvMatrix._updateID)\n      return;\n    this._bufferUpdateId = this.uvBuffer._updateID, this._textureUpdateId = this.uvMatrix._updateID;\n    const data = this.uvBuffer.data;\n    (!this.data || this.data.length !== data.length) && (this.data = new Float32Array(data.length)), this.uvMatrix.multiplyUvs(data, this.data), this._updateID++;\n  }\n}\nexports.MeshBatchUvs = MeshBatchUvs;\n//# sourceMappingURL=MeshBatchUvs.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","MeshBatchUvs","constructor","uvBuffer","uvMatrix","data","_textureUpdateId","_bufferUpdateId","_updateID","update","forceUpdate","length","Float32Array","multiplyUvs"]
}
