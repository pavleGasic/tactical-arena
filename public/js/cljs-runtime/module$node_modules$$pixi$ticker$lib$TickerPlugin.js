shadow$provide.module$node_modules$$pixi$ticker$lib$TickerPlugin = function(global, require, module, exports) {
  global = require("module$node_modules$$pixi$extensions$lib$index");
  var _const = require("module$node_modules$$pixi$ticker$lib$const"), Ticker = require("module$node_modules$$pixi$ticker$lib$Ticker");
  class TickerPlugin {
    static init(options) {
      options = Object.assign({autoStart:!0, sharedTicker:!1}, options);
      Object.defineProperty(this, "ticker", {set(ticker) {
        this._ticker && this._ticker.remove(this.render, this);
        (this._ticker = ticker) && ticker.add(this.render, this, _const.UPDATE_PRIORITY.LOW);
      }, get() {
        return this._ticker;
      }});
      this.stop = () => {
        this._ticker.stop();
      };
      this.start = () => {
        this._ticker.start();
      };
      this._ticker = null;
      this.ticker = options.sharedTicker ? Ticker.Ticker.shared : new Ticker.Ticker();
      options.autoStart && this.start();
    }
    static destroy() {
      if (this._ticker) {
        const oldTicker = this._ticker;
        this.ticker = null;
        oldTicker.destroy();
      }
    }
  }
  TickerPlugin.extension = global.ExtensionType.Application;
  global.extensions.add(TickerPlugin);
  exports.TickerPlugin = TickerPlugin;
};

//# sourceMappingURL=module$node_modules$$pixi$ticker$lib$TickerPlugin.js.map
