{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SoftLightBlend.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,GAA4F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACAC,SAAAA,GAAkBJ,OAAA,CAAQ,yEAAR,CAAlBI;AAEJ,cAAA;AACA,OAAMC,eAAN,QAA6BD,QAAgBA,CAAAA,eAA7C;AACEE,eAAW,EAAG;AACZ,WAAA,CAAM,CACJC,GAAI,CACFC,UAAY,isBADV;AAkBFC,WAAO,gIAlBL,CADA,EAuBJC,IAAK,CACHF,UAAY,2wBADT;AAkBHC,WAAO,kJAlBJ,CAvBD,CAAN,CAAA;AADY;AADhB;AAmDAJ,gBAAeM,CAAAA,SAAf,GAA2B,CACzBC,KAAM,YADmB,EAEzBC,KAAMV,MAAWW,CAAAA,aAAcC,CAAAA,SAFN,CAA3B;AAKAb,SAAQG,CAAAA,cAAR,GAAyBA,cAAzB;AA/DoI,CAApI;;",
"sources":["node_modules/pixi_DOT_js/lib/advanced-blend-modes/SoftLightBlend.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SoftLightBlend\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar BlendModeFilter = require('../filters/blend-modes/BlendModeFilter.js');\n\n\"use strict\";\nclass SoftLightBlend extends BlendModeFilter.BlendModeFilter {\n  constructor() {\n    super({\n      gl: {\n        functions: `\n                float softLight(float base, float blend)\n                {\n                    return (blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n                }\n\n                vec3 blendSoftLight(vec3 base, vec3 blend, float opacity)\n                {\n                    vec3 blended = vec3(\n                        softLight(base.r, blend.r),\n                        softLight(base.g, blend.g),\n                        softLight(base.b, blend.b)\n                    );\n\n                    return (blended * opacity + base * (1.0 - opacity));\n                }\n                `,\n        main: `\n                finalColor = vec4(blendSoftLight(back.rgb, front.rgb, front.a), blendedAlpha) * uBlend;\n                `\n      },\n      gpu: {\n        functions: `\n                fn softLight(base: f32, blend: f32) -> f32\n                {\n                    return select(2.0 * base * blend + base * base * (1.0 - 2.0 * blend), sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), blend < 0.5);\n                }\n\n                fn blendSoftLight(base:vec3<f32>,  blend:vec3<f32>,  opacity:f32) -> vec3<f32>\n                {\n                    let blended: vec3<f32> = vec3<f32>(\n                        softLight(base.r, blend.r),\n                        softLight(base.g, blend.g),\n                        softLight(base.b, blend.b)\n                    );\n\n                    return (blended * opacity + base * (1.0 - opacity));\n                }\n                `,\n        main: `\n                out = vec4<f32>(blendSoftLight(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n                `\n      }\n    });\n  }\n}\n/** @ignore */\nSoftLightBlend.extension = {\n  name: \"soft-light\",\n  type: Extensions.ExtensionType.BlendMode\n};\n\nexports.SoftLightBlend = SoftLightBlend;\n//# sourceMappingURL=SoftLightBlend.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","BlendModeFilter","SoftLightBlend","constructor","gl","functions","main","gpu","extension","name","type","ExtensionType","BlendMode"]
}
