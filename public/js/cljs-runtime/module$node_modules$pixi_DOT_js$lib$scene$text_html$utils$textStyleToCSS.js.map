{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$textStyleToCSS.js",
"lineCount":28,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/text-html/utils/textStyleToCSS.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$textStyleToCSS\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Color = require('../../../color/Color.js');\n\n\"use strict\";\nfunction textStyleToCSS(style) {\n  const stroke = style._stroke;\n  const fill = style._fill;\n  const cssStyleString = [\n    `color: ${Color.Color.shared.setValue(fill.color).toHex()}`,\n    `font-size: ${style.fontSize}px`,\n    `font-family: ${style.fontFamily}`,\n    `font-weight: ${style.fontWeight}`,\n    `font-style: ${style.fontStyle}`,\n    `font-variant: ${style.fontVariant}`,\n    `letter-spacing: ${style.letterSpacing}px`,\n    `text-align: ${style.align}`,\n    `padding: ${style.padding}px`,\n    `white-space: ${style.whiteSpace === \"pre\" && style.wordWrap ? \"pre-wrap\" : style.whiteSpace}`,\n    ...style.lineHeight ? [`line-height: ${style.lineHeight}px`] : [],\n    ...style.wordWrap ? [\n      `word-wrap: ${style.breakWords ? \"break-all\" : \"break-word\"}`,\n      `max-width: ${style.wordWrapWidth}px`\n    ] : [],\n    ...stroke ? [strokeToCSS(stroke)] : [],\n    ...style.dropShadow ? [dropShadowToCSS(style.dropShadow)] : [],\n    ...style.cssOverrides\n  ].join(\";\");\n  const cssStyles = [`div { ${cssStyleString} }`];\n  tagStyleToCSS(style.tagStyles, cssStyles);\n  return cssStyles.join(\" \");\n}\nfunction dropShadowToCSS(dropShadowStyle) {\n  const color = Color.Color.shared.setValue(dropShadowStyle.color).setAlpha(dropShadowStyle.alpha).toHexa();\n  const x = Math.round(Math.cos(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const y = Math.round(Math.sin(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const position = `${x}px ${y}px`;\n  if (dropShadowStyle.blur > 0) {\n    return `text-shadow: ${position} ${dropShadowStyle.blur}px ${color}`;\n  }\n  return `text-shadow: ${position} ${color}`;\n}\nfunction strokeToCSS(stroke) {\n  return [\n    `-webkit-text-stroke-width: ${stroke.width}px`,\n    `-webkit-text-stroke-color: ${Color.Color.shared.setValue(stroke.color).toHex()}`,\n    `text-stroke-width: ${stroke.width}px`,\n    `text-stroke-color: ${Color.Color.shared.setValue(stroke.color).toHex()}`,\n    \"paint-order: stroke\"\n  ].join(\";\");\n}\nconst templates = {\n  fontSize: `font-size: {{VALUE}}px`,\n  fontFamily: `font-family: {{VALUE}}`,\n  fontWeight: `font-weight: {{VALUE}}`,\n  fontStyle: `font-style: {{VALUE}}`,\n  fontVariant: `font-variant: {{VALUE}}`,\n  letterSpacing: `letter-spacing: {{VALUE}}px`,\n  align: `text-align: {{VALUE}}`,\n  padding: `padding: {{VALUE}}px`,\n  whiteSpace: `white-space: {{VALUE}}`,\n  lineHeight: `line-height: {{VALUE}}px`,\n  wordWrapWidth: `max-width: {{VALUE}}px`\n};\nconst transform = {\n  fill: (value) => `color: ${Color.Color.shared.setValue(value).toHex()}`,\n  breakWords: (value) => `word-wrap: ${value ? \"break-all\" : \"break-word\"}`,\n  stroke: strokeToCSS,\n  dropShadow: dropShadowToCSS\n};\nfunction tagStyleToCSS(tagStyles, out) {\n  for (const i in tagStyles) {\n    const tagStyle = tagStyles[i];\n    const cssTagStyle = [];\n    for (const j in tagStyle) {\n      if (transform[j]) {\n        cssTagStyle.push(transform[j](tagStyle[j]));\n      } else if (templates[j]) {\n        cssTagStyle.push(templates[j].replace(\"{{VALUE}}\", tagStyle[j]));\n      }\n    }\n    out.push(`${i} { ${cssTagStyle.join(\";\")} }`);\n  }\n}\n\nexports.textStyleToCSS = textStyleToCSS;\n//# sourceMappingURL=textStyleToCSS.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","dropShadowToCSS","dropShadowStyle","color","Color","shared","setValue","setAlpha","alpha","toHexa","position","Math","round","x","cos","angle","distance","y","sin","blur","strokeToCSS","stroke","width","toHex","join","templates","fontSize","fontFamily","fontWeight","fontStyle","fontVariant","letterSpacing","align","padding","whiteSpace","lineHeight","wordWrapWidth","transform","fill","value","breakWords","dropShadow","textStyleToCSS","style","_stroke","cssStyles","_fill","wordWrap","cssOverrides","cssStyleString","tagStyles","i","tagStyle","cssTagStyle","j","push","replace"]
}
