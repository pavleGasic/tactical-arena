{
"version":3,
"file":"module$node_modules$$pixi$math$lib$Transform.js",
"lineCount":62,
"mappings":"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",
"sources":["node_modules/@pixi/math/lib/Transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$math$lib$Transform\"] = function(global,require,module,exports) {\n\"use strict\";\nvar Matrix = require(\"./Matrix.js\"), ObservablePoint = require(\"./ObservablePoint.js\");\nconst _Transform = class {\n  constructor() {\n    this.worldTransform = new Matrix.Matrix(), this.localTransform = new Matrix.Matrix(), this.position = new ObservablePoint.ObservablePoint(this.onChange, this, 0, 0), this.scale = new ObservablePoint.ObservablePoint(this.onChange, this, 1, 1), this.pivot = new ObservablePoint.ObservablePoint(this.onChange, this, 0, 0), this.skew = new ObservablePoint.ObservablePoint(this.updateSkew, this, 0, 0), this._rotation = 0, this._cx = 1, this._sx = 0, this._cy = 0, this._sy = 1, this._localID = 0, this._currentLocalID = 0, this._worldID = 0, this._parentID = 0;\n  }\n  /** Called when a value changes. */\n  onChange() {\n    this._localID++;\n  }\n  /** Called when the skew or the rotation changes. */\n  updateSkew() {\n    this._cx = Math.cos(this._rotation + this.skew.y), this._sx = Math.sin(this._rotation + this.skew.y), this._cy = -Math.sin(this._rotation - this.skew.x), this._sy = Math.cos(this._rotation - this.skew.x), this._localID++;\n  }\n  /** Updates the local transformation matrix. */\n  updateLocalTransform() {\n    const lt = this.localTransform;\n    this._localID !== this._currentLocalID && (lt.a = this._cx * this.scale.x, lt.b = this._sx * this.scale.x, lt.c = this._cy * this.scale.y, lt.d = this._sy * this.scale.y, lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c), lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d), this._currentLocalID = this._localID, this._parentID = -1);\n  }\n  /**\n   * Updates the local and the world transformation matrices.\n   * @param parentTransform - The parent transform\n   */\n  updateTransform(parentTransform) {\n    const lt = this.localTransform;\n    if (this._localID !== this._currentLocalID && (lt.a = this._cx * this.scale.x, lt.b = this._sx * this.scale.x, lt.c = this._cy * this.scale.y, lt.d = this._sy * this.scale.y, lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c), lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d), this._currentLocalID = this._localID, this._parentID = -1), this._parentID !== parentTransform._worldID) {\n      const pt = parentTransform.worldTransform, wt = this.worldTransform;\n      wt.a = lt.a * pt.a + lt.b * pt.c, wt.b = lt.a * pt.b + lt.b * pt.d, wt.c = lt.c * pt.a + lt.d * pt.c, wt.d = lt.c * pt.b + lt.d * pt.d, wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx, wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty, this._parentID = parentTransform._worldID, this._worldID++;\n    }\n  }\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   * @param matrix - The matrix to decompose\n   */\n  setFromMatrix(matrix) {\n    matrix.decompose(this), this._localID++;\n  }\n  /** The rotation of the object in radians. */\n  get rotation() {\n    return this._rotation;\n  }\n  set rotation(value) {\n    this._rotation !== value && (this._rotation = value, this.updateSkew());\n  }\n};\n_Transform.IDENTITY = new _Transform();\nlet Transform = _Transform;\nTransform.prototype.toString = function() {\n  return `[@pixi/math:Transform position=(${this.position.x}, ${this.position.y}) rotation=${this.rotation} scale=(${this.scale.x}, ${this.scale.y}) skew=(${this.skew.x}, ${this.skew.y}) ]`;\n};\nexports.Transform = Transform;\n//# sourceMappingURL=Transform.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Matrix","ObservablePoint","_Transform","constructor","worldTransform","localTransform","position","onChange","scale","pivot","skew","updateSkew","_rotation","_cx","_cy","_sx","_sy","_parentID","_worldID","_currentLocalID","_localID","Math","cos","y","sin","x","updateLocalTransform","lt","a","b","c","d","tx","ty","updateTransform","parentTransform","pt","wt","setFromMatrix","matrix","decompose","value","IDENTITY","prototype","toString","Transform.prototype.toString","rotation","Transform"]
}
