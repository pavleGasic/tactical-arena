{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$svg$parseSVGStyle.js",
"lineCount":45,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/svg/parseSVGStyle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$svg$parseSVGStyle\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Color = require('../../../../color/Color.js');\nvar extractSvgUrlId = require('./utils/extractSvgUrlId.js');\n\n\"use strict\";\nconst styleAttributes = {\n  // Fill properties\n  fill: { type: \"paint\", default: 0 },\n  // Fill color/gradient\n  \"fill-opacity\": { type: \"number\", default: 1 },\n  // Fill transparency\n  // Stroke properties\n  stroke: { type: \"paint\", default: 0 },\n  // Stroke color/gradient\n  \"stroke-width\": { type: \"number\", default: 1 },\n  // Width of stroke\n  \"stroke-opacity\": { type: \"number\", default: 1 },\n  // Stroke transparency\n  \"stroke-linecap\": { type: \"string\", default: \"butt\" },\n  // End cap style: butt, round, square\n  \"stroke-linejoin\": { type: \"string\", default: \"miter\" },\n  // Join style: miter, round, bevel\n  \"stroke-miterlimit\": { type: \"number\", default: 10 },\n  // Limit on miter join sharpness\n  \"stroke-dasharray\": { type: \"string\", default: \"none\" },\n  // Dash pattern\n  \"stroke-dashoffset\": { type: \"number\", default: 0 },\n  // Offset for dash pattern\n  // Global properties\n  opacity: { type: \"number\", default: 1 }\n  // Overall opacity\n};\nfunction parseSVGStyle(svg, session) {\n  const style = svg.getAttribute(\"style\");\n  const strokeStyle = {};\n  const fillStyle = {};\n  const result = {\n    strokeStyle,\n    fillStyle,\n    useFill: false,\n    useStroke: false\n  };\n  for (const key in styleAttributes) {\n    const attribute = svg.getAttribute(key);\n    if (attribute) {\n      parseAttribute(session, result, key, attribute.trim());\n    }\n  }\n  if (style) {\n    const styleParts = style.split(\";\");\n    for (let i = 0; i < styleParts.length; i++) {\n      const stylePart = styleParts[i].trim();\n      const [key, value] = stylePart.split(\":\");\n      if (styleAttributes[key]) {\n        parseAttribute(session, result, key, value.trim());\n      }\n    }\n  }\n  return {\n    strokeStyle: result.useStroke ? strokeStyle : null,\n    fillStyle: result.useFill ? fillStyle : null,\n    useFill: result.useFill,\n    useStroke: result.useStroke\n  };\n}\nfunction parseAttribute(session, result, id, value) {\n  switch (id) {\n    case \"stroke\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId.extractSvgUrlId(value);\n          result.strokeStyle.fill = session.defs[id2];\n        } else {\n          result.strokeStyle.color = Color.Color.shared.setValue(value).toNumber();\n        }\n        result.useStroke = true;\n      }\n      break;\n    case \"stroke-width\":\n      result.strokeStyle.width = Number(value);\n      break;\n    case \"fill\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId.extractSvgUrlId(value);\n          result.fillStyle.fill = session.defs[id2];\n        } else {\n          result.fillStyle.color = Color.Color.shared.setValue(value).toNumber();\n        }\n        result.useFill = true;\n      }\n      break;\n    case \"fill-opacity\":\n      result.fillStyle.alpha = Number(value);\n      break;\n    case \"stroke-opacity\":\n      result.strokeStyle.alpha = Number(value);\n      break;\n    case \"opacity\":\n      result.fillStyle.alpha = Number(value);\n      result.strokeStyle.alpha = Number(value);\n      break;\n  }\n}\n\nexports.parseAttribute = parseAttribute;\nexports.parseSVGStyle = parseSVGStyle;\nexports.styleAttributes = styleAttributes;\n//# sourceMappingURL=parseSVGStyle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseAttribute","session","result","id","value","startsWith","id2","extractSvgUrlId","strokeStyle","fill","defs","color","Color","shared","setValue","toNumber","useStroke","width","Number","fillStyle","useFill","alpha","styleAttributes","type","default","stroke","opacity","parseSVGStyle","svg","style","getAttribute","key","attribute","trim","styleParts","i","split","length","stylePart"]
}
