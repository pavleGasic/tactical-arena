{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$compressed_textures$ktx2$utils$glFormatToGPUFormat.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAA,sFAAA,GAA2G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAInJ,QAAMC,yBAAyB,CAC7B,KAAM,YADuB,EAE7B,MAAO,YAFsB,EAI7B,MAAO,cAJsB,EAK7B,MAAO,cALsB,EAM7B,MAAO,aANsB,EAO7B,MAAO,SAPsB,EAQ7B,MAAO,UARsB,EAS7B,MAAO,UATsB,EAU7B,MAAO,UAVsB,EAW7B,MAAO,WAXsB,EAY7B,MAAO,WAZsB,EAa7B,MAAO,QAbsB,EAc7B,MAAO,QAdsB,EAe7B,MAAO,SAfsB,EAgB7B,MAAO,SAhBsB,EAiB7B,MAAO,SAjBsB,EAkB7B,MAAO,SAlBsB,EAmB7B,MAAO,SAnBsB,EAoB7B,MAAO,SApBsB,EAqB7B,MAAO,UArBsB,EAsB7B,MAAO,UAtBsB,EAuB7B,MAAO,UAvBsB,EAwB7B,MAAO,UAxBsB,EAyB7B,MAAO,gBAzBsB,EA0B7B,MAAO,gBA1BsB;AA2B7B,QAAO,aA3BsB,EA4B7B,MAAO,aA5BsB,EA6B7B,MAAO,sBA7BsB,EA8B7B,MAAO,eA9BsB,EA+B7B,MAAO,cA/BsB,EAgC7B,MAAO,iBAhCsB,EAkC7B,MAAO,cAlCsB,EAmC7B,MAAO,uBAnCsB,EAoC7B,MAAO,UApCsB,EAqC7B,MAAO,YArCsB,EAsC7B,MAAO,YAtCsB,EAuC7B,MAAO,WAvCsB,EAwC7B,MAAO,YAxCsB,EAyC7B,MAAO,YAzCsB,EA0C7B,MAAO,WA1CsB,EA2C7B,MAAO,gBA3CsB,EA4C7B,MAAO,SA5CsB,EA6C7B,MAAO,UA7CsB,EA8C7B,MAAO,YA9CsB,EA+C7B,MAAO,iBA/CsB,EAgD7B,MAAO,gBAhDsB,CAA/B;AA0DAD,SAAQE,CAAAA,mBAAR,GARAA,QAA4B,CAACC,gBAAD,CAAmB;AAC7C,UAAMC,SAASH,sBAAA,CAAuBE,gBAAvB,CAAf;AACA,QAAIC,MAAJ;AACE,aAAOA,MAAP;AADF;AAGA,UAAUC,KAAJ,CAAW,iCAAgCF,gBAAhC,EAAX,CAAN;AAL6C,GAQ/C;AA9DmJ,CAAnJ;;",
"sources":["node_modules/pixi_DOT_js/lib/compressed-textures/ktx2/utils/glFormatToGPUFormat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$compressed_textures$ktx2$utils$glFormatToGPUFormat\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst glFormatToGPUFormatMap = {\n  6408: \"rgba8unorm\",\n  32856: \"bgra8unorm\",\n  //\n  32857: \"rgb10a2unorm\",\n  33189: \"depth16unorm\",\n  33190: \"depth24plus\",\n  33321: \"r8unorm\",\n  33323: \"rg8unorm\",\n  33325: \"r16float\",\n  33326: \"r32float\",\n  33327: \"rg16float\",\n  33328: \"rg32float\",\n  33329: \"r8sint\",\n  33330: \"r8uint\",\n  33331: \"r16sint\",\n  33332: \"r16uint\",\n  33333: \"r32sint\",\n  33334: \"r32uint\",\n  33335: \"rg8sint\",\n  33336: \"rg8uint\",\n  33337: \"rg16sint\",\n  33338: \"rg16uint\",\n  33339: \"rg32sint\",\n  33340: \"rg32uint\",\n  33778: \"bc2-rgba-unorm\",\n  33779: \"bc3-rgba-unorm\",\n  34836: \"rgba32float\",\n  34842: \"rgba16float\",\n  35056: \"depth24plus-stencil8\",\n  35898: \"rg11b10ufloat\",\n  35901: \"rgb9e5ufloat\",\n  35907: \"rgba8unorm-srgb\",\n  // bgra8unorm-srgb\n  36012: \"depth32float\",\n  36013: \"depth32float-stencil8\",\n  36168: \"stencil8\",\n  36208: \"rgba32uint\",\n  36214: \"rgba16uint\",\n  36220: \"rgba8uint\",\n  36226: \"rgba32sint\",\n  36232: \"rgba16sint\",\n  36238: \"rgba8sint\",\n  36492: \"bc7-rgba-unorm\",\n  36756: \"r8snorm\",\n  36757: \"rg8snorm\",\n  36759: \"rgba8snorm\",\n  37496: \"etc2-rgba8unorm\",\n  37808: \"astc-4x4-unorm\"\n};\nfunction glFormatToGPUFormat(glInternalFormat) {\n  const format = glFormatToGPUFormatMap[glInternalFormat];\n  if (format) {\n    return format;\n  }\n  throw new Error(`Unsupported glInternalFormat: ${glInternalFormat}`);\n}\n\nexports.glFormatToGPUFormat = glFormatToGPUFormat;\n//# sourceMappingURL=glFormatToGPUFormat.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","glFormatToGPUFormatMap","glFormatToGPUFormat","glInternalFormat","format","Error"]
}
