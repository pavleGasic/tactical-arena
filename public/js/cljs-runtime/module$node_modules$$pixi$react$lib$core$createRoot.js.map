{
"version":3,
"file":"module$node_modules$$pixi$react$lib$core$createRoot.js",
"lineCount":29,
"mappings":"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",
"sources":["node_modules/@pixi/react/lib/core/createRoot.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$react$lib$core$createRoot\"] = function(global,require,module,exports) {\n'use strict';\n\nvar jsxRuntime = require('react/jsx-runtime');\nvar pixi_js = require('pixi.js');\nvar constants = require('react-reconciler/constants');\nvar Context = require('../components/Context.js');\nvar isReadOnlyProperty = require('../helpers/isReadOnlyProperty.js');\nvar log = require('../helpers/log.js');\nvar prepareInstance = require('../helpers/prepareInstance.js');\nvar reconciler = require('./reconciler.js');\nvar roots = require('./roots.js');\n\n\"use strict\";\nfunction createRoot(target, options = {}) {\n  let root = roots.roots.get(target);\n  let applicationState = root?.applicationState ?? {\n    isInitialised: false,\n    isInitialising: false\n  };\n  const internalState = root?.internalState ?? {};\n  if (root) {\n    log.log(\"warn\", \"createRoot should only be called once!\");\n  } else {\n    applicationState.app = new pixi_js.Application();\n    internalState.rootContainer = prepareInstance.prepareInstance(applicationState.app.stage);\n  }\n  const fiber = root?.fiber ?? reconciler.reconciler.createContainer(\n    internalState.rootContainer,\n    // container\n    constants.ConcurrentRoot,\n    // tag\n    null,\n    // hydration callbacks\n    false,\n    // isStrictMode\n    null,\n    // concurrentUpdatesByDefaultOverride\n    \"\",\n    // identifierPrefix\n    console.error,\n    // onUncaughtError\n    console.error,\n    // onCaughtError\n    console.error,\n    // onRecoverableError\n    null\n    // transitionCallbacks\n  );\n  if (!root) {\n    let canvas;\n    if (target instanceof HTMLCanvasElement) {\n      canvas = target;\n    }\n    if (!canvas) {\n      canvas = document.createElement(\"canvas\");\n      target.innerHTML = \"\";\n      target.appendChild(canvas);\n    }\n    internalState.canvas = canvas;\n    const render = async (children, applicationOptions) => {\n      if (!applicationState.app.renderer && !applicationState.isInitialised && !applicationState.isInitialising) {\n        applicationState.isInitialising = true;\n        await applicationState.app.init({\n          ...applicationOptions,\n          canvas\n        });\n        applicationState.isInitialising = false;\n        applicationState.isInitialised = true;\n        applicationState = { ...applicationState };\n        options.onInit?.(applicationState.app);\n      }\n      Object.entries(applicationOptions).forEach(([key, value]) => {\n        const typedKey = key;\n        if (isReadOnlyProperty.isReadOnlyProperty(\n          applicationOptions,\n          typedKey\n        )) {\n          return;\n        }\n        applicationState.app[typedKey] = value;\n      });\n      reconciler.reconciler.updateContainer(\n        /* @__PURE__ */ jsxRuntime.jsx(Context.ContextProvider, { value: applicationState, children }),\n        fiber,\n        null,\n        () => void 0\n      );\n      return applicationState.app;\n    };\n    root = {\n      applicationState,\n      fiber,\n      internalState,\n      render\n    };\n    roots.roots.set(canvas, root);\n  }\n  return root;\n}\n\nexports.createRoot = createRoot;\n//# sourceMappingURL=createRoot.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","jsxRuntime","pixi_js","constants","Context","isReadOnlyProperty","log","prepareInstance","reconciler","roots","createRoot","target","options","root","get","applicationState","isInitialised","isInitialising","internalState","app","Application","rootContainer","stage","fiber","createContainer","ConcurrentRoot","console","error","canvas","HTMLCanvasElement","document","createElement","innerHTML","appendChild","render","children","applicationOptions","renderer","init","onInit","Object","entries","forEach","key","value","updateContainer","jsx","ContextProvider","set"]
}
