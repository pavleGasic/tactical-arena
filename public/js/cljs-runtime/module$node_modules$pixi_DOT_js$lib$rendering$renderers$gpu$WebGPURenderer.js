shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$WebGPURenderer = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  var GpuGraphicsAdaptor = require("module$node_modules$pixi_DOT_js$lib$scene$graphics$gpu$GpuGraphicsAdaptor"), GpuMeshAdapter = require("module$node_modules$pixi_DOT_js$lib$scene$mesh$gpu$GpuMeshAdapter"), GpuBatchAdaptor = require("module$node_modules$pixi_DOT_js$lib$rendering$batcher$gpu$GpuBatchAdaptor");
  module = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$AbstractRenderer");
  var SharedSystems = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SharedSystems"), types = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$types"), BindGroupSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$BindGroupSystem"), GpuBufferSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$buffer$GpuBufferSystem"), GpuColorMaskSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuColorMaskSystem"), 
  GpuDeviceSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuDeviceSystem"), GpuEncoderSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuEncoderSystem"), GpuStencilSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuStencilSystem"), GpuUboSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuUboSystem"), GpuUniformBatchPipe = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$GpuUniformBatchPipe"), 
  PipelineSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$pipeline$PipelineSystem"), GpuRenderTargetSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$renderTarget$GpuRenderTargetSystem"), GpuShaderSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$GpuShaderSystem"), GpuStateSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$state$GpuStateSystem");
  require = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$texture$GpuTextureSystem");
  "use strict";
  require = [...SharedSystems.SharedSystems, GpuUboSystem.GpuUboSystem, GpuEncoderSystem.GpuEncoderSystem, GpuDeviceSystem.GpuDeviceSystem, GpuBufferSystem.GpuBufferSystem, require.GpuTextureSystem, GpuRenderTargetSystem.GpuRenderTargetSystem, GpuShaderSystem.GpuShaderSystem, GpuStateSystem.GpuStateSystem, PipelineSystem.PipelineSystem, GpuColorMaskSystem.GpuColorMaskSystem, GpuStencilSystem.GpuStencilSystem, BindGroupSystem.BindGroupSystem];
  SharedSystems = [...SharedSystems.SharedRenderPipes, GpuUniformBatchPipe.GpuUniformBatchPipe];
  GpuGraphicsAdaptor = [GpuBatchAdaptor.GpuBatchAdaptor, GpuMeshAdapter.GpuMeshAdapter, GpuGraphicsAdaptor.GpuGraphicsAdaptor];
  const systems = [], renderPipes = [], renderPipeAdaptors = [];
  global.extensions.handleByNamedList(global.ExtensionType.WebGPUSystem, systems);
  global.extensions.handleByNamedList(global.ExtensionType.WebGPUPipes, renderPipes);
  global.extensions.handleByNamedList(global.ExtensionType.WebGPUPipesAdaptor, renderPipeAdaptors);
  global.extensions.add(...require, ...SharedSystems, ...GpuGraphicsAdaptor);
  class WebGPURenderer extends module.AbstractRenderer {
    constructor() {
      super({name:"webgpu", type:types.RendererType.WEBGPU, systems, renderPipes, renderPipeAdaptors});
    }
  }
  exports.WebGPURenderer = WebGPURenderer;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$WebGPURenderer.js.map
