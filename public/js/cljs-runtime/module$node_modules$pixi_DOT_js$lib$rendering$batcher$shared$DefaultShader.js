shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$batcher$shared$DefaultShader = function(global, require, module, exports) {
  var compileHighShaderToProgram = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$compileHighShaderToProgram"), colorBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$colorBit"), generateTextureBatchBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$generateTextureBatchBit"), roundPixelsBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$roundPixelsBit"), getBatchSamplersUniformGroup = 
  require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$getBatchSamplersUniformGroup");
  global = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$Shader");
  "use strict";
  class DefaultShader extends global.Shader {
    constructor(maxTextures) {
      const glProgram = compileHighShaderToProgram.compileHighShaderGlProgram({name:"batch", bits:[colorBit.colorBitGl, generateTextureBatchBit.generateTextureBatchBitGl(maxTextures), roundPixelsBit.roundPixelsBitGl]}), gpuProgram = compileHighShaderToProgram.compileHighShaderGpuProgram({name:"batch", bits:[colorBit.colorBit, generateTextureBatchBit.generateTextureBatchBit(maxTextures), roundPixelsBit.roundPixelsBit]});
      super({glProgram, gpuProgram, resources:{batchSamplers:getBatchSamplersUniformGroup.getBatchSamplersUniformGroup(maxTextures)}});
    }
  }
  exports.DefaultShader = DefaultShader;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$batcher$shared$DefaultShader.js.map
