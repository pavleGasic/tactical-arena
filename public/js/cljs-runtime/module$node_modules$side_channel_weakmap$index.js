shadow$provide.module$node_modules$side_channel_weakmap$index = function(global, require, module, exports) {
  global = require("module$node_modules$get_intrinsic$index");
  exports = require("module$node_modules$call_bound$index");
  var inspect = require("module$node_modules$object_inspect$index"), getSideChannelMap = require("module$node_modules$side_channel_map$index"), $TypeError = require("module$node_modules$es_errors$type"), $WeakMap = global("%WeakMap%", !0), $weakMapGet = exports("WeakMap.prototype.get", !0), $weakMapSet = exports("WeakMap.prototype.set", !0), $weakMapHas = exports("WeakMap.prototype.has", !0), $weakMapDelete = exports("WeakMap.prototype.delete", !0);
  module.exports = $WeakMap ? function() {
    var $wm, $m, channel = {assert:function(key) {
      if (!channel.has(key)) {
        throw new $TypeError("Side channel does not contain " + inspect(key));
      }
    }, "delete":function(key) {
      if ($WeakMap && key && ("object" === typeof key || "function" === typeof key)) {
        if ($wm) {
          return $weakMapDelete($wm, key);
        }
      } else if (getSideChannelMap && $m) {
        return $m["delete"](key);
      }
      return !1;
    }, get:function(key) {
      return $WeakMap && key && ("object" === typeof key || "function" === typeof key) && $wm ? $weakMapGet($wm, key) : $m && $m.get(key);
    }, has:function(key) {
      return $WeakMap && key && ("object" === typeof key || "function" === typeof key) && $wm ? $weakMapHas($wm, key) : !!$m && $m.has(key);
    }, set:function(key, value) {
      $WeakMap && key && ("object" === typeof key || "function" === typeof key) ? ($wm || ($wm = new $WeakMap()), $weakMapSet($wm, key, value)) : getSideChannelMap && ($m || ($m = getSideChannelMap()), $m.set(key, value));
    }};
    return channel;
  } : getSideChannelMap;
};

//# sourceMappingURL=module$node_modules$side_channel_weakmap$index.js.map
