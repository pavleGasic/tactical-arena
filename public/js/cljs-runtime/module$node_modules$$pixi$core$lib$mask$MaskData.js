shadow$provide.module$node_modules$$pixi$core$lib$mask$MaskData = function(global, require, module, exports) {
  var constants = require("module$node_modules$$pixi$constants$lib$index"), Filter = require("module$node_modules$$pixi$core$lib$filters$Filter");
  class MaskData {
    constructor(maskObject = null) {
      this.type = constants.MASK_TYPES.NONE;
      this.autoDetect = !0;
      this.maskObject = maskObject || null;
      this.pooled = !1;
      this.isMaskData = !0;
      this.resolution = null;
      this.multisample = Filter.Filter.defaultMultisample;
      this.enabled = !0;
      this.colorMask = 15;
      this._filters = null;
      this._scissorCounter = this._stencilCounter = 0;
      this._scissorRectLocal = this._scissorRect = null;
      this._colorMask = 15;
      this._target = null;
    }
    get filter() {
      return this._filters ? this._filters[0] : null;
    }
    set filter(value) {
      value ? this._filters ? this._filters[0] = value : this._filters = [value] : this._filters = null;
    }
    reset() {
      this.pooled && (this.maskObject = null, this.type = constants.MASK_TYPES.NONE, this.autoDetect = !0);
      this._scissorRectLocal = this._target = null;
    }
    copyCountersOrReset(maskAbove) {
      maskAbove ? (this._stencilCounter = maskAbove._stencilCounter, this._scissorCounter = maskAbove._scissorCounter, this._scissorRect = maskAbove._scissorRect) : (this._stencilCounter = 0, this._scissorCounter = 0, this._scissorRect = null);
    }
  }
  exports.MaskData = MaskData;
};

//# sourceMappingURL=module$node_modules$$pixi$core$lib$mask$MaskData.js.map
