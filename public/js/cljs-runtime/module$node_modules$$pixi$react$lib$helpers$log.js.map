{
"version":3,
"file":"module$node_modules$$pixi$react$lib$helpers$log.js",
"lineCount":11,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG5G,MAAIC,QAAQH,OAAA,CAAQ,2CAAR,CAAZ;AAEA,cAAA;AAaAE,SAAQE,CAAAA,GAAR,GAZAA,QAAY,CAACC,OAAD,EAAU,GAAGC,IAAb,CAAmB;AAC7B,QAAKH,KAAMA,CAAAA,KAAMI,CAAAA,KAAjB,CAAA;AAGA,UAAMC,YAAYC,OAAA,CAAQJ,OAAR,CAAlB;AACMG,eAAN,YAA2BE,QAA3B,GAIAF,SAAA,CAAU,aAAV,EAAyB,GAAGF,IAA5B,CAJA,GACEG,OAAQE,CAAAA,IAAR,CAAc,6CAA4CN,OAA5C,GAAd,CADF;AAJA;AAD6B,GAY/B;AAlB4G,CAA5G;;",
"sources":["node_modules/@pixi/react/lib/helpers/log.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$react$lib$helpers$log\"] = function(global,require,module,exports) {\n'use strict';\n\nvar store = require('../store.js');\n\n\"use strict\";\nfunction log(logType, ...args) {\n  if (!store.store.debug) {\n    return;\n  }\n  const logMethod = console[logType];\n  if (!(logMethod instanceof Function)) {\n    console.warn(`Attempted to create an invalid log type: \"${logType}\"`);\n    return;\n  }\n  logMethod(\"@pixi/react\", ...args);\n}\n\nexports.log = log;\n//# sourceMappingURL=log.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","store","log","logType","args","debug","logMethod","console","Function","warn"]
}
