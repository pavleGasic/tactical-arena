{
"version":3,
"file":"module$node_modules$$pixi$mesh_extras$lib$SimpleRope.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,GAAyE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAE7GC,OAAOH,OAAA,CAAQ,0CAAR,CAFsG,EAE/EI,OAAOJ,OAAA,CAAQ,0CAAR,CAFwE,EAEjDK,eAAeL,OAAA,CAAQ,iEAAR,CAFkC;AAGjH,OAAMM,WAAN,QAAyBF,KAAKG,CAAAA,IAA9B;AASEC,eAAW,CAACC,OAAD,EAAUC,MAAV,EAAkBC,YAAA,GAAe,CAAjC,CAAoC;AACvCC,YAAAA,GAAe,IAAIP,YAAaA,CAAAA,YAAjB,CAA8BI,OAAQI,CAAAA,MAAtC,EAA8CH,MAA9C,EAAsDC,YAAtD,CAAfC;AAAN,YAA0FE,eAAe,IAAIV,IAAKW,CAAAA,YAAT,CAAsBN,OAAtB,CAAzG;AACe,OAAf,GAAAE,YAAA,KAAqBF,OAAQO,CAAAA,WAAYC,CAAAA,QAAzC,GAAoDd,IAAKe,CAAAA,UAAWC,CAAAA,MAApE;AAA6E,WAAA,CAAMP,MAAN,EAAoBE,YAApB,CAAA;AAAmC,UAAKM,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AAFnE;AAI/CC,WAAO,CAACC,QAAD,CAAW;AAChB,YAAMC,WAAW,IAAKA,CAAAA,QAAtB;AACA,OAAC,IAAKH,CAAAA,UAAN,IAAoBG,QAASC,CAAAA,MAA7B,KAAwC,IAAKC,CAAAA,MAAOhB,CAAAA,OAAQI,CAAAA,MAA5D,MAAwEU,QAASC,CAAAA,MAAT,GAAkB,IAAKC,CAAAA,MAAOhB,CAAAA,OAAQI,CAAAA,MAAtC,EAA8CU,QAASG,CAAAA,MAAT,EAAtH;AAA0I,WAAML,CAAAA,OAAN,CAAcC,QAAd,CAAA;AAF1H;AAbpB;AAkBApB,SAAQI,CAAAA,UAAR,GAAqBA,UAArB;AArBiH,CAAjH;;",
"sources":["node_modules/@pixi/mesh-extras/lib/SimpleRope.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$mesh_extras$lib$SimpleRope\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), mesh = require(\"@pixi/mesh\"), RopeGeometry = require(\"./geometry/RopeGeometry.js\");\nclass SimpleRope extends mesh.Mesh {\n  /**\n   * Note: The wrap mode of the texture is set to REPEAT if `textureScale` is positive.\n   * @param texture - The texture to use on the rope.\n   * @param points - An array of {@link PIXI.Point} objects to construct this rope.\n   * @param {number} textureScale - Optional. Positive values scale rope texture\n   * keeping its aspect ratio. You can reduce alpha channel artifacts by providing a larger texture\n   * and downsampling here. If set to zero, texture will be stretched instead.\n   */\n  constructor(texture, points, textureScale = 0) {\n    const ropeGeometry = new RopeGeometry.RopeGeometry(texture.height, points, textureScale), meshMaterial = new mesh.MeshMaterial(texture);\n    textureScale > 0 && (texture.baseTexture.wrapMode = core.WRAP_MODES.REPEAT), super(ropeGeometry, meshMaterial), this.autoUpdate = !0;\n  }\n  _render(renderer) {\n    const geometry = this.geometry;\n    (this.autoUpdate || geometry._width !== this.shader.texture.height) && (geometry._width = this.shader.texture.height, geometry.update()), super._render(renderer);\n  }\n}\nexports.SimpleRope = SimpleRope;\n//# sourceMappingURL=SimpleRope.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","mesh","RopeGeometry","SimpleRope","Mesh","constructor","texture","points","textureScale","ropeGeometry","height","meshMaterial","MeshMaterial","baseTexture","wrapMode","WRAP_MODES","REPEAT","autoUpdate","_render","renderer","geometry","_width","shader","update"]
}
