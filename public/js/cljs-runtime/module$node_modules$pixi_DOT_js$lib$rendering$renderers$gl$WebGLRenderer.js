shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$WebGLRenderer = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  var GlGraphicsAdaptor = require("module$node_modules$pixi_DOT_js$lib$scene$graphics$gl$GlGraphicsAdaptor"), GlMeshAdaptor = require("module$node_modules$pixi_DOT_js$lib$scene$mesh$gl$GlMeshAdaptor"), GlBatchAdaptor = require("module$node_modules$pixi_DOT_js$lib$rendering$batcher$gl$GlBatchAdaptor");
  module = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$AbstractRenderer");
  var SharedSystems = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SharedSystems"), types = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$types"), GlBufferSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$buffer$GlBufferSystem"), GlContextSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$context$GlContextSystem"), GlGeometrySystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$geometry$GlGeometrySystem"), 
  GlBackBufferSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlBackBufferSystem"), GlColorMaskSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlColorMaskSystem"), GlEncoderSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlEncoderSystem"), GlStencilSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlStencilSystem"), GlUboSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlUboSystem"), 
  GlRenderTargetSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$renderTarget$GlRenderTargetSystem"), GlShaderSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$GlShaderSystem"), GlUniformGroupSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$GlUniformGroupSystem"), GlStateSystem = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$state$GlStateSystem");
  require = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$GlTextureSystem");
  "use strict";
  require = [...SharedSystems.SharedSystems, GlUboSystem.GlUboSystem, GlBackBufferSystem.GlBackBufferSystem, GlContextSystem.GlContextSystem, GlBufferSystem.GlBufferSystem, require.GlTextureSystem, GlRenderTargetSystem.GlRenderTargetSystem, GlGeometrySystem.GlGeometrySystem, GlUniformGroupSystem.GlUniformGroupSystem, GlShaderSystem.GlShaderSystem, GlEncoderSystem.GlEncoderSystem, GlStateSystem.GlStateSystem, GlStencilSystem.GlStencilSystem, GlColorMaskSystem.GlColorMaskSystem];
  SharedSystems = [...SharedSystems.SharedRenderPipes];
  GlGraphicsAdaptor = [GlBatchAdaptor.GlBatchAdaptor, GlMeshAdaptor.GlMeshAdaptor, GlGraphicsAdaptor.GlGraphicsAdaptor];
  const systems = [], renderPipes = [], renderPipeAdaptors = [];
  global.extensions.handleByNamedList(global.ExtensionType.WebGLSystem, systems);
  global.extensions.handleByNamedList(global.ExtensionType.WebGLPipes, renderPipes);
  global.extensions.handleByNamedList(global.ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);
  global.extensions.add(...require, ...SharedSystems, ...GlGraphicsAdaptor);
  class WebGLRenderer extends module.AbstractRenderer {
    constructor() {
      super({name:"webgl", type:types.RendererType.WEBGL, systems, renderPipes, renderPipeAdaptors});
    }
  }
  exports.WebGLRenderer = WebGLRenderer;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$WebGLRenderer.js.map
