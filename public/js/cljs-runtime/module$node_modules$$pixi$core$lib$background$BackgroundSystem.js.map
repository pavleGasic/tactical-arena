{
"version":3,
"file":"module$node_modules$$pixi$core$lib$background$BackgroundSystem.js",
"lineCount":40,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,GAAmF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAEvHC,QAAQH,OAAA,CAAQ,2CAAR,CAF+G;AAEvFI,QAAAA,GAAaJ,OAAA,CAAQ,gDAAR,CAAbI;AACpC,OAAMC,iBAAN;AACEC,eAAW,EAAG;AACZ,UAAKC,CAAAA,iBAAL,GAAyB,CAAA,CAAzB;AAA6B,UAAKC,CAAAA,gBAAL,GAAwB,IAAIL,KAAMM,CAAAA,KAAV,CAAgB,CAAhB,CAAxB;AAA4C,UAAKC,CAAAA,KAAL,GAAa,CAAb;AAD7D;AAOdC,QAAI,CAACC,OAAD,CAAU;AACZ,UAAKL,CAAAA,iBAAL,GAAyBK,OAAQL,CAAAA,iBAAjC;AADY,YAEN,CAAEM,eAAF,EAAmBC,UAAnB,EAA+BC,eAA/B,CAAA,GAAmDH,OAF7C;AAEsDI,aAAAA,GAASF,UAATE,IAAuBH,eAAvBG;AACvD,UAAK,EAAhB,KAAAA,OAAA,KAAsB,IAAKb,CAAAA,KAA3B,GAAmCa,OAAnC;AAA4C,UAAKN,CAAAA,KAAL,GAAaK,eAAb;AAHhC;AASV,aAAQ,EAAA;AACV,aAAO,IAAKP,CAAAA,gBAAiBS,CAAAA,KAA7B;AADU;AAGR,aAAK,CAACA,KAAD,CAAQ;AACf,UAAKT,CAAAA,gBAAiBU,CAAAA,QAAtB,CAA+BD,KAA/B,CAAA;AADe;AAOb,aAAQ,EAAA;AACV,aAAO,IAAKT,CAAAA,gBAAiBE,CAAAA,KAA7B;AADU;AAGR,aAAK,CAACO,KAAD,CAAQ;AACf,UAAKT,CAAAA,gBAAiBW,CAAAA,QAAtB,CAA+BF,KAA/B,CAAA;AADe;AAIb,uBAAkB,EAAA;AACpB,aAAO,IAAKT,CAAAA,gBAAZ;AADoB;AAGtBY,WAAO,EAAG;;AArCZ;AAwCAf,kBAAiBgB,CAAAA,cAAjB,GAAkC,CAMhCN,gBAAiB,CANe,EAYhCF,gBAAiB,CAZe,EAkBhCN,kBAAmB,CAAA,CAlBa,CAAlC;AAoBAF,kBAAiBiB,CAAAA,SAAjB,GAA6B,CAC3BC,KAAM,CACJnB,MAAWoB,CAAAA,aAAcC,CAAAA,cADrB,EAEJrB,MAAWoB,CAAAA,aAAcE,CAAAA,oBAFrB,CADqB,EAK3BC,KAAM,YALqB,CAA7B;AAOAvB,QAAWA,CAAAA,UAAWwB,CAAAA,GAAtB,CAA0BvB,gBAA1B,CAAA;AACAH,SAAQG,CAAAA,gBAAR,GAA2BA,gBAA3B;AAvE2H,CAA3H;;",
"sources":["node_modules/@pixi/core/lib/background/BackgroundSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$background$BackgroundSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar color = require(\"@pixi/color\"), extensions = require(\"@pixi/extensions\");\nclass BackgroundSystem {\n  constructor() {\n    this.clearBeforeRender = !0, this._backgroundColor = new color.Color(0), this.alpha = 1;\n  }\n  /**\n   * initiates the background system\n   * @param {PIXI.IRendererOptions} options - the options for the background colors\n   */\n  init(options) {\n    this.clearBeforeRender = options.clearBeforeRender;\n    const { backgroundColor, background, backgroundAlpha } = options, color2 = background ?? backgroundColor;\n    color2 !== void 0 && (this.color = color2), this.alpha = backgroundAlpha;\n  }\n  /**\n   * The background color to fill if not transparent.\n   * @member {PIXI.ColorSource}\n   */\n  get color() {\n    return this._backgroundColor.value;\n  }\n  set color(value) {\n    this._backgroundColor.setValue(value);\n  }\n  /**\n   * The background color alpha. Setting this to 0 will make the canvas transparent.\n   * @member {number}\n   */\n  get alpha() {\n    return this._backgroundColor.alpha;\n  }\n  set alpha(value) {\n    this._backgroundColor.setAlpha(value);\n  }\n  /** The background color object. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  destroy() {\n  }\n}\nBackgroundSystem.defaultOptions = {\n  /**\n   * {@link PIXI.IRendererOptions.backgroundAlpha}\n   * @default 1\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  backgroundAlpha: 1,\n  /**\n   * {@link PIXI.IRendererOptions.backgroundColor}\n   * @default 0x000000\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  backgroundColor: 0,\n  /**\n   * {@link PIXI.IRendererOptions.clearBeforeRender}\n   * @default true\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  clearBeforeRender: !0\n}, /** @ignore */\nBackgroundSystem.extension = {\n  type: [\n    extensions.ExtensionType.RendererSystem,\n    extensions.ExtensionType.CanvasRendererSystem\n  ],\n  name: \"background\"\n};\nextensions.extensions.add(BackgroundSystem);\nexports.BackgroundSystem = BackgroundSystem;\n//# sourceMappingURL=BackgroundSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","color","extensions","BackgroundSystem","constructor","clearBeforeRender","_backgroundColor","Color","alpha","init","options","backgroundColor","background","backgroundAlpha","color2","value","setValue","setAlpha","destroy","defaultOptions","extension","type","ExtensionType","RendererSystem","CanvasRendererSystem","name","add"]
}
