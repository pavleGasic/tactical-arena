{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$path$roundShape.js",
"lineCount":62,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/path/roundShape.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$path$roundShape\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction roundedShapeArc(g, points, radius) {\n  const vecFrom = (p, pp) => {\n    const x = pp.x - p.x;\n    const y = pp.y - p.y;\n    const len = Math.sqrt(x * x + y * y);\n    const nx = x / len;\n    const ny = y / len;\n    return { len, nx, ny };\n  };\n  const sharpCorner = (i, p) => {\n    if (i === 0) {\n      g.moveTo(p.x, p.y);\n    } else {\n      g.lineTo(p.x, p.y);\n    }\n  };\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i % points.length];\n    const pRadius = p2.radius ?? radius;\n    if (pRadius <= 0) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    const p3 = points[(i + 1) % points.length];\n    const v1 = vecFrom(p2, p1);\n    const v2 = vecFrom(p2, p3);\n    if (v1.len < 1e-4 || v2.len < 1e-4) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    let angle = Math.asin(v1.nx * v2.ny - v1.ny * v2.nx);\n    let radDirection = 1;\n    let drawDirection = false;\n    if (v1.nx * v2.nx - v1.ny * -v2.ny < 0) {\n      if (angle < 0) {\n        angle = Math.PI + angle;\n      } else {\n        angle = Math.PI - angle;\n        radDirection = -1;\n        drawDirection = true;\n      }\n    } else if (angle > 0) {\n      radDirection = -1;\n      drawDirection = true;\n    }\n    const halfAngle = angle / 2;\n    let cRadius;\n    let lenOut = Math.abs(\n      Math.cos(halfAngle) * pRadius / Math.sin(halfAngle)\n    );\n    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n      lenOut = Math.min(v1.len / 2, v2.len / 2);\n      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n    } else {\n      cRadius = pRadius;\n    }\n    const cX = p2.x + v2.nx * lenOut + -v2.ny * cRadius * radDirection;\n    const cY = p2.y + v2.ny * lenOut + v2.nx * cRadius * radDirection;\n    const startAngle = Math.atan2(v1.ny, v1.nx) + Math.PI / 2 * radDirection;\n    const endAngle = Math.atan2(v2.ny, v2.nx) - Math.PI / 2 * radDirection;\n    if (i === 0) {\n      g.moveTo(\n        cX + Math.cos(startAngle) * cRadius,\n        cY + Math.sin(startAngle) * cRadius\n      );\n    }\n    g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n    p1 = p2;\n  }\n}\nfunction roundedShapeQuadraticCurve(g, points, radius, smoothness) {\n  const distance = (p1, p2) => Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n  const pointLerp = (p1, p2, t) => ({\n    x: p1.x + (p2.x - p1.x) * t,\n    y: p1.y + (p2.y - p1.y) * t\n  });\n  const numPoints = points.length;\n  for (let i = 0; i < numPoints; i++) {\n    const thisPoint = points[(i + 1) % numPoints];\n    const pRadius = thisPoint.radius ?? radius;\n    if (pRadius <= 0) {\n      if (i === 0) {\n        g.moveTo(thisPoint.x, thisPoint.y);\n      } else {\n        g.lineTo(thisPoint.x, thisPoint.y);\n      }\n      continue;\n    }\n    const lastPoint = points[i];\n    const nextPoint = points[(i + 2) % numPoints];\n    const lastEdgeLength = distance(lastPoint, thisPoint);\n    let start;\n    if (lastEdgeLength < 1e-4) {\n      start = thisPoint;\n    } else {\n      const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n      start = pointLerp(\n        thisPoint,\n        lastPoint,\n        lastOffsetDistance / lastEdgeLength\n      );\n    }\n    const nextEdgeLength = distance(nextPoint, thisPoint);\n    let end;\n    if (nextEdgeLength < 1e-4) {\n      end = thisPoint;\n    } else {\n      const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n      end = pointLerp(\n        thisPoint,\n        nextPoint,\n        nextOffsetDistance / nextEdgeLength\n      );\n    }\n    if (i === 0) {\n      g.moveTo(start.x, start.y);\n    } else {\n      g.lineTo(start.x, start.y);\n    }\n    g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n  }\n}\n\nexports.roundedShapeArc = roundedShapeArc;\nexports.roundedShapeQuadraticCurve = roundedShapeQuadraticCurve;\n//# sourceMappingURL=roundShape.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","roundedShapeArc","g","points","radius","vecFrom","p","pp","x","y","len","Math","sqrt","nx","ny","p1","length","i","p2","pRadius","moveTo","lineTo","p3","v1","v2","angle","asin","radDirection","drawDirection","PI","halfAngle","lenOut","abs","cos","sin","min","cRadius","cX","cY","startAngle","atan2","endAngle","arc","roundedShapeQuadraticCurve","smoothness","pointLerp","t","numPoints","thisPoint","lastPoint","nextPoint","lastEdgeLength","start","lastOffsetDistance","nextEdgeLength","end","nextOffsetDistance","quadraticCurveTo"]
}
