{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$mesh$gl$GlMeshAdaptor.js",
"lineCount":36,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,GAAoF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGxHC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,SAASJ,OAAA,CAAQ,yDAAR,CAAb,EACIK,6BAA6BL,OAAA,CAAQ,sFAAR,CADjC,EAEIM,kBAAkBN,OAAA,CAAQ,uFAAR,CAFtB,EAGIO,iBAAiBP,OAAA,CAAQ,sFAAR,CAHrB,EAIIQ,aAAaR,OAAA,CAAQ,kFAAR,CAJjB;AAKIS,WAAST,OAAA,CAAQ,8EAAR,CALb,EAMIU,UAAUV,OAAA,CAAQ,gFAAR,CANd,EAOIW,OAAOX,OAAA,CAAQ,wDAAR,CAPX;AASA,cAAA;AACA,OAAMY,cAAN;AACEC,QAAI,EAAG;AACL,YAAMC,YAAYT,0BAA2BU,CAAAA,0BAA3B,CAAsD,CACtEC,KAAM,MADgE,EAEtEC,KAAM,CACJX,eAAgBY,CAAAA,iBADZ,EAEJV,UAAWW,CAAAA,YAFP,EAGJZ,cAAea,CAAAA,gBAHX,CAFgE,CAAtD,CAAlB;AAQA,UAAKC,CAAAA,OAAL,GAAe,IAAIZ,MAAOA,CAAAA,MAAX,CAAkB,CAC/BK,SAD+B,EAE/BQ,UAAW,CACTC,SAAUb,OAAQA,CAAAA,OAAQc,CAAAA,KAAMC,CAAAA,MADvB,EAETC,gBAAiB,CACfC,eAAgB,CAAEC,KAAM,mBAAR,EAAuBC,MAAO,IAAIzB,MAAOA,CAAAA,MAAX,EAA9B,CADD,CAFR,CAFoB,CAAlB,CAAf;AATK;AAmBP0B,WAAO,CAACC,QAAD,EAAWC,IAAX,CAAiB;AACtB,YAAMC,WAAWF,QAASE,CAAAA,QAA1B;AACA,UAAIC,SAASF,IAAKX,CAAAA,OAAlB;AACA,UAAI,CAACa,MAAL,CAAa;AACXA,cAAA,GAAS,IAAKb,CAAAA,OAAd;AACA,cAAMc,UAAUH,IAAKG,CAAAA,OAArB,EACMV,SAASU,OAAQV,CAAAA,MADvB;AAEAS,cAAOZ,CAAAA,SAAUC,CAAAA,QAAjB,GAA4BE,MAA5B;AACAS,cAAOZ,CAAAA,SAAUc,CAAAA,QAAjB,GAA4BX,MAAOY,CAAAA,KAAnC;AACAH,cAAOZ,CAAAA,SAAUI,CAAAA,eAAgBY,CAAAA,QAASX,CAAAA,cAA1C,GAA2DQ,OAAQI,CAAAA,aAAcC,CAAAA,QAAjF;AANW,OAAb,KAOO,KAAI,CAACN,MAAOpB,CAAAA,SAAZ,CAAuB;AAC5BH,YAAKA,CAAAA,IAAL,CAAU,8BAAV,EAA0CqB,IAAKE,CAAAA,MAA/C,CAAA;AACA;AAF4B;AAI9BA,YAAOO,CAAAA,MAAP,CAAc,GAAd,CAAA,GAAqBR,QAASS,CAAAA,cAAeC,CAAAA,SAA7C;AACAT,YAAOO,CAAAA,MAAP,CAAc,GAAd,CAAA,GAAqBV,QAASa,CAAAA,sBAA9B;AACAX,cAASY,CAAAA,OAAQC,CAAAA,IAAjB,CAAsB,CACpBC,SAAUf,IAAKgB,CAAAA,SADK,EAEpBd,MAFoB,EAGpBe,MAAOjB,IAAKiB,CAAAA,KAHQ,CAAtB,CAAA;AAhBsB;AAsBxBC,WAAO,EAAG;AACR,UAAK7B,CAAAA,OAAQ6B,CAAAA,OAAb,CAAqB,CAAA,CAArB,CAAA;AACA,UAAK7B,CAAAA,OAAL,GAAe,IAAf;AAFQ;AA1CZ;AA+CAT,eAAcuC,CAAAA,SAAd,GAA0B,CACxBvB,KAAM,CACJzB,MAAWiD,CAAAA,aAAcC,CAAAA,iBADrB,CADkB,EAIxBrC,KAAM,MAJkB,CAA1B;AAOAd,SAAQU,CAAAA,aAAR,GAAwBA,aAAxB;AApE4H,CAA5H;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/mesh/gl/GlMeshAdaptor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$mesh$gl$GlMeshAdaptor\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Matrix = require('../../../maths/matrix/Matrix.js');\nvar compileHighShaderToProgram = require('../../../rendering/high-shader/compileHighShaderToProgram.js');\nvar localUniformBit = require('../../../rendering/high-shader/shader-bits/localUniformBit.js');\nvar roundPixelsBit = require('../../../rendering/high-shader/shader-bits/roundPixelsBit.js');\nvar textureBit = require('../../../rendering/high-shader/shader-bits/textureBit.js');\nvar Shader = require('../../../rendering/renderers/shared/shader/Shader.js');\nvar Texture = require('../../../rendering/renderers/shared/texture/Texture.js');\nvar warn = require('../../../utils/logging/warn.js');\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderToProgram.compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBit.localUniformBitGl,\n        textureBit.textureBitGl,\n        roundPixelsBit.roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader.Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix.Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn.warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexports.GlMeshAdaptor = GlMeshAdaptor;\n//# sourceMappingURL=GlMeshAdaptor.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Matrix","compileHighShaderToProgram","localUniformBit","roundPixelsBit","textureBit","Shader","Texture","warn","GlMeshAdaptor","init","glProgram","compileHighShaderGlProgram","name","bits","localUniformBitGl","textureBitGl","roundPixelsBitGl","_shader","resources","uTexture","EMPTY","source","textureUniforms","uTextureMatrix","type","value","execute","meshPipe","mesh","renderer","shader","texture","uSampler","style","uniforms","textureMatrix","mapCoord","groups","globalUniforms","bindGroup","localUniformsBindGroup","encoder","draw","geometry","_geometry","state","destroy","extension","ExtensionType","WebGLPipesAdaptor"]
}
