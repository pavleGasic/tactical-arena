{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$GenerateShaderSyncCode.js",
"lineCount":38,
"mappings":"AAAAA,cAAA,CAAA,wFAAA,GAA6G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGrJ,MAAIC,iBAAiBH,OAAA,CAAQ,sFAAR,CAArB,EACII,eAAeJ,OAAA,CAAQ,oFAAR,CADnB,EAEIK,gBAAgBL,OAAA,CAAQ,8FAAR,CAFpB;AAIA,cAAA;AAmEAE,SAAQI,CAAAA,sBAAR,GAlEAA,QAA+B,CAACC,MAAD,EAASC,YAAT,CAAuB;AACpD,UAAMC,gBAAgB,EAAtB,EACMC,kBAAkB,CAAE,oKAAF,CADxB;AAQA,QAAIC,oBAAoB,CAAA,CAAxB,EACIC,eAAe,CADnB;AAEA,UAAMC,cAAcL,YAAaM,CAAAA,eAAb,CAA6BP,MAAOQ,CAAAA,SAApC,CAApB;AACA,SAAK,MAAMC,CAAX,GAAgBT,OAAOU,CAAAA,MAAvB,CAA+B;AAC7B,YAAMC,QAAQX,MAAOU,CAAAA,MAAP,CAAcD,CAAd,CAAd;AACAP,mBAAcU,CAAAA,IAAd,CAAoB;4BACIH,CADJ;SAApB,CAAA;AAGA,WAAK,MAAMI,CAAX,GAAgBF,MAAMG,CAAAA,SAAtB,CAAiC;AAC/B,YAAMC,WAAWJ,KAAMG,CAAAA,SAAN,CAAgBD,CAAhB,CAAjB;AACIE,gBAAJ,YAAwBlB,YAAaA,CAAAA,YAArC,GACMkB,QAASC,CAAAA,GAAb,IACQC,QACN,GADgBjB,MAAOkB,CAAAA,eAAP,CAAuBT,CAAvB,CAAA,CAA0BU,MAAA,CAAON,CAAP,CAA1B,CAChB,EAAAX,aAAcU,CAAAA,IAAd,CAAoB;;wCAEUC,CAFV;+BAGCI,QAHD;8BAIAjB,MAAOQ,CAAAA,SAAUY,CAAAA,iBAAjB,CAAmCH,QAAnC,CAA4CI,CAAAA,KAJ5C;;qBAApB,CAFF,IAUEnB,aAAcU,CAAAA,IAAd,CAAoB;2DAC6BC,CAD7B;qBAApB,CAXJ,GAeWE,QAAJ,YAAwBnB,cAAeA,CAAAA,cAAvC,IACCqB,QACN,GADgBjB,MAAOkB,CAAAA,eAAP,CAAuBT,CAAvB,CAAA,CAA0BU,MAAA,CAAON,CAAP,CAA1B,CAChB,EAAAX,aAAcU,CAAAA,IAAd,CAAoB;;oCAEQC,CAFR;2BAGDI,QAHC;0BAIFjB,MAAOQ,CAAAA,SAAUY,CAAAA,iBAAjB,CAAmCH,QAAnC,CAA4CI,CAAAA,KAJ1C;;iBAApB,CAFK,IASIN,QATJ,YASwBjB,aAAcA,CAAAA,aATtC,KAWCwB,QAXD,GAWehB,WAAYgB,CAAAA,WAAZ,CADAtB,MAAOkB,CAAAA,eAAP,CAAuBT,CAAvB,CAAAc,CAA0BV,CAA1BU,CACA,CAXf,MAaEnB,iBAUL,KATEA,iBACA,GADoB,CAAA,CACpB,EAAAD,eAAgBS,CAAAA,IAAhB,CAAsB,4EAAtB,CAQF,GAJAX,YAAauB,CAAAA,GAAIC,CAAAA,SAAjB,CAA2BH,QAAYI,CAAAA,QAAvC,EAAiDrB,YAAjD,CAIA,EAHAH,aAAcU,CAAAA,IAAd,CAAoB;4CACcC,CADd,MACqBR,YADrB;qBAApB,CAGA,EAAAA,YAAA,EAvBG,CAfP;AAF+B;AALJ;AAkDzBsB,UAAAA,GAAiB,CAAC,GAAGxB,eAAJ,EAAqB,GAAGD,aAAxB,CAAuC0B,CAAAA,IAAvC,CAA4C,IAA5C,CAAjBD;AACN,WAAO,IAAIE,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAvB,EAA6BF,MAA7B,CAAP;AA/DoD,GAkEtD;AA1EqJ,CAArJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/GenerateShaderSyncCode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$GenerateShaderSyncCode\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BufferResource = require('../../shared/buffer/BufferResource.js');\nvar UniformGroup = require('../../shared/shader/UniformGroup.js');\nvar TextureSource = require('../../shared/texture/sources/TextureSource.js');\n\n\"use strict\";\nfunction generateShaderSyncCode(shader, shaderSystem) {\n  const funcFragments = [];\n  const headerFragments = [`\n        var g = s.groups;\n        var sS = r.shader;\n        var p = s.glProgram;\n        var ugS = r.uniformGroup;\n        var resources;\n    `];\n  let addedTextreSystem = false;\n  let textureCount = 0;\n  const programData = shaderSystem._getProgramData(shader.glProgram);\n  for (const i in shader.groups) {\n    const group = shader.groups[i];\n    funcFragments.push(`\n            resources = g[${i}].resources;\n        `);\n    for (const j in group.resources) {\n      const resource = group.resources[j];\n      if (resource instanceof UniformGroup.UniformGroup) {\n        if (resource.ubo) {\n          const resName = shader._uniformBindMap[i][Number(j)];\n          funcFragments.push(`\n                        sS.bindUniformBlock(\n                            resources[${j}],\n                            '${resName}',\n                            ${shader.glProgram._uniformBlockData[resName].index}\n                        );\n                    `);\n        } else {\n          funcFragments.push(`\n                        ugS.updateUniformGroup(resources[${j}], p, sD);\n                    `);\n        }\n      } else if (resource instanceof BufferResource.BufferResource) {\n        const resName = shader._uniformBindMap[i][Number(j)];\n        funcFragments.push(`\n                    sS.bindUniformBlock(\n                        resources[${j}],\n                        '${resName}',\n                        ${shader.glProgram._uniformBlockData[resName].index}\n                    );\n                `);\n      } else if (resource instanceof TextureSource.TextureSource) {\n        const uniformName = shader._uniformBindMap[i][j];\n        const uniformData = programData.uniformData[uniformName];\n        if (uniformData) {\n          if (!addedTextreSystem) {\n            addedTextreSystem = true;\n            headerFragments.push(`\n                        var tS = r.texture;\n                        `);\n          }\n          shaderSystem._gl.uniform1i(uniformData.location, textureCount);\n          funcFragments.push(`\n                        tS.bind(resources[${j}], ${textureCount});\n                    `);\n          textureCount++;\n        }\n      }\n    }\n  }\n  const functionSource = [...headerFragments, ...funcFragments].join(\"\\n\");\n  return new Function(\"r\", \"s\", \"sD\", functionSource);\n}\n\nexports.generateShaderSyncCode = generateShaderSyncCode;\n//# sourceMappingURL=GenerateShaderSyncCode.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","BufferResource","UniformGroup","TextureSource","generateShaderSyncCode","shader","shaderSystem","funcFragments","headerFragments","addedTextreSystem","textureCount","programData","_getProgramData","glProgram","i","groups","group","push","j","resources","resource","ubo","resName","_uniformBindMap","Number","_uniformBlockData","index","uniformData","uniformName","_gl","uniform1i","location","functionSource","join","Function"]
}
