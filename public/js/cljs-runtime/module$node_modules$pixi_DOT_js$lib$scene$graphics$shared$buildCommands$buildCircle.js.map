{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildCircle.js",
"lineCount":98,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/buildCommands/buildCircle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildCircle\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../../extensions/Extensions.js');\n\n\"use strict\";\nconst buildCircle = {\n  extension: {\n    type: Extensions.ExtensionType.ShapeBuilder,\n    name: \"circle\"\n  },\n  build(shape, points) {\n    let x;\n    let y;\n    let dx;\n    let dy;\n    let rx;\n    let ry;\n    if (shape.type === \"circle\") {\n      const circle = shape;\n      x = circle.x;\n      y = circle.y;\n      rx = ry = circle.radius;\n      dx = dy = 0;\n    } else if (shape.type === \"ellipse\") {\n      const ellipse = shape;\n      x = ellipse.x;\n      y = ellipse.y;\n      rx = ellipse.halfWidth;\n      ry = ellipse.halfHeight;\n      dx = dy = 0;\n    } else {\n      const roundedRect = shape;\n      const halfWidth = roundedRect.width / 2;\n      const halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth;\n      y = roundedRect.y + halfHeight;\n      rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n      dx = halfWidth - rx;\n      dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      return points;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n    const m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (m === 0) {\n      return points;\n    }\n    if (n === 0) {\n      points[0] = points[6] = x + dx;\n      points[1] = points[3] = y + dy;\n      points[2] = points[4] = x - dx;\n      points[5] = points[7] = y - dy;\n      return points;\n    }\n    let j1 = 0;\n    let j2 = n * 4 + (dx ? 2 : 0) + 2;\n    let j3 = j2;\n    let j4 = m;\n    let x0 = dx + rx;\n    let y0 = dy;\n    let x1 = x + x0;\n    let x2 = x - x0;\n    let y1 = y + y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j2] = y1;\n    points[--j2] = x2;\n    if (dy) {\n      const y22 = y - y0;\n      points[j3++] = x2;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x1;\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n);\n      const x02 = dx + Math.cos(a) * rx;\n      const y02 = dy + Math.sin(a) * ry;\n      const x12 = x + x02;\n      const x22 = x - x02;\n      const y12 = y + y02;\n      const y22 = y - y02;\n      points[j1++] = x12;\n      points[j1++] = y12;\n      points[--j2] = y12;\n      points[--j2] = x22;\n      points[j3++] = x22;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x12;\n    }\n    x0 = dx;\n    y0 = dy + ry;\n    x1 = x + x0;\n    x2 = x - x0;\n    y1 = y + y0;\n    const y2 = y - y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j4] = y2;\n    points[--j4] = x1;\n    if (dx) {\n      points[j1++] = x2;\n      points[j1++] = y1;\n      points[--j4] = y2;\n      points[--j4] = x2;\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    if (points.length === 0) {\n      return;\n    }\n    let centerX = 0;\n    let centerY = 0;\n    for (let i = 0; i < points.length; i += 2) {\n      centerX += points[i];\n      centerY += points[i + 1];\n    }\n    centerX /= points.length / 2;\n    centerY /= points.length / 2;\n    let count = verticesOffset;\n    vertices[count * verticesStride] = centerX;\n    vertices[count * verticesStride + 1] = centerY;\n    const centerIndex = count++;\n    for (let i = 0; i < points.length; i += 2) {\n      vertices[count * verticesStride] = points[i];\n      vertices[count * verticesStride + 1] = points[i + 1];\n      if (i > 0) {\n        indices[indicesOffset++] = count;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n      }\n      count++;\n    }\n    indices[indicesOffset++] = centerIndex + 1;\n    indices[indicesOffset++] = centerIndex;\n    indices[indicesOffset++] = count - 1;\n  }\n};\nconst buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: \"ellipse\" } };\nconst buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: \"roundedRectangle\" } };\n\nexports.buildCircle = buildCircle;\nexports.buildEllipse = buildEllipse;\nexports.buildRoundedRectangle = buildRoundedRectangle;\n//# sourceMappingURL=buildCircle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","buildCircle","extension","type","ExtensionType","ShapeBuilder","name","build","shape","points","y","dy","rx","x","ry","radius","dx","halfWidth","halfHeight","width","height","Math","max","min","n","ceil","sqrt","m","j1","j2","j3","x0","y0","x1","x2","y1","y22","j4","i","a","PI","x02","cos","y02","sin","x12","x22","y12","y2","triangulate","vertices","verticesStride","verticesOffset","indices","indicesOffset","length","centerX","centerY","count","centerIndex","buildEllipse","buildRoundedRectangle"]
}
