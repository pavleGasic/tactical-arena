shadow$provide.module$node_modules$$pixi$core$lib$shader$utils$checkMaxIfStatementsInShader = function(global, require, module, exports) {
  exports.checkMaxIfStatementsInShader = function(maxIfs, gl) {
    if (0 === maxIfs) {
      throw Error("Invalid value of `0` passed to `checkMaxIfStatementsInShader`");
    }
    const shader = gl.createShader(gl.FRAGMENT_SHADER);
    for (;;) {
      var JSCompiler_temp_const = "precision mediump float;\nvoid main(void){\nfloat test \x3d 0.1;\n%forloop%\ngl_FragColor \x3d vec4(0.0);\n}".replace;
      let src = "";
      for (let i = 0; i < maxIfs; ++i) {
        0 < i && (src += "\nelse "), i < maxIfs - 1 && (src += `if(test == ${i}.0){}`);
      }
      JSCompiler_temp_const = JSCompiler_temp_const.call("precision mediump float;\nvoid main(void){\nfloat test \x3d 0.1;\n%forloop%\ngl_FragColor \x3d vec4(0.0);\n}", /%forloop%/gi, src);
      if (gl.shaderSource(shader, JSCompiler_temp_const), gl.compileShader(shader), gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
        break;
      } else {
        maxIfs = maxIfs / 2 | 0;
      }
    }
    return maxIfs;
  };
};

//# sourceMappingURL=module$node_modules$$pixi$core$lib$shader$utils$checkMaxIfStatementsInShader.js.map
