shadow$provide.module$node_modules$$pixi$utils$lib$data$interleaveTypedArrays = function(global, require, module, exports) {
  var getBufferType = require("module$node_modules$$pixi$utils$lib$data$getBufferType");
  const map = {Float32Array, Uint32Array, Int32Array, Uint8Array};
  exports.interleaveTypedArrays = function(arrays, sizes) {
    var outSize = 0;
    let stride = 0;
    const views = {};
    for (var i$jscomp$0 = 0; i$jscomp$0 < arrays.length; i$jscomp$0++) {
      stride += sizes[i$jscomp$0], outSize += arrays[i$jscomp$0].length;
    }
    outSize = new ArrayBuffer(4 * outSize);
    i$jscomp$0 = 0;
    for (let i = 0; i < arrays.length; i++) {
      const size = sizes[i], array = arrays[i];
      var out = getBufferType.getBufferType(array);
      views[out] || (views[out] = new map[out](outSize));
      out = views[out];
      for (let j = 0; j < array.length; j++) {
        out[(j / size | 0) * stride + i$jscomp$0 + j % size] = array[j];
      }
      i$jscomp$0 += size;
    }
    return new Float32Array(outSize);
  };
};

//# sourceMappingURL=module$node_modules$$pixi$utils$lib$data$interleaveTypedArrays.js.map
