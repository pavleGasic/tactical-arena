{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$events$EventSystem.js",
"lineCount":255,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/events/EventSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$events$EventSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar EventBoundary = require('./EventBoundary.js');\nvar EventTicker = require('./EventTicker.js');\nvar FederatedPointerEvent = require('./FederatedPointerEvent.js');\nvar FederatedWheelEvent = require('./FederatedWheelEvent.js');\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /** Does the device support touch events https://www.w3.org/TR/touch-events/ */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /** Does the device support pointer events https://www.w3.org/Submission/pointer-events/ */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary.EventBoundary(null);\n    EventTicker.EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent.FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent.FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * @param mode - cursor mode, a key from the cursorStyles dictionary\n   */\n  setCursor(mode) {\n    mode || (mode = \"default\");\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event.\n   * Useful for getting the pointer position without listening to events.\n   * @since 7.2.0\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventTicker.EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   *\n   * To deregister the current DOM element without setting a new one, pass {@code null}.\n   * @param element - The new DOM element.\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventTicker.EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventTicker.EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventTicker.EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n   * resulting value is stored in the point. This takes into account the fact that the DOM\n   * element could be scaled and positioned anywhere on the screen.\n   * @param  {PointData} point - the point that the result will be stored in\n   * @param  {number} x - the x coord of the position to map\n   * @param  {number} y - the y coord of the position to map\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the {@code nativeEvent} to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    Extensions.ExtensionType.WebGLSystem,\n    Extensions.ExtensionType.CanvasSystem,\n    Extensions.ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n * @since 7.2.0\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexports.EventSystem = EventSystem;\n//# sourceMappingURL=EventSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","EventBoundary","EventTicker","FederatedPointerEvent","FederatedWheelEvent","TOUCH_TO_POINTER","touchstart","touchend","touchendoutside","touchmove","touchcancel","constructor","renderer","supportsTouchEvents","globalThis","supportsPointerEvents","PointerEvent","domElement","resolution","rootBoundary","EventsTicker","init","autoPreventDefault","_eventsAdded","_rootPointerEvent","_rootWheelEvent","cursorStyles","default","pointer","features","Proxy","_EventSystem","defaultEventFeatures","set","target","key","value","enableGlobalMoveEvents","_onPointerDown","bind","_onPointerMove","_onPointerUp","_onPointerOverOut","onWheel","_defaultEventMode","options","canvas","setTargetElement","eventMode","Object","assign","eventFeatures","globalMove","resolutionChange","destroy","_currentCursor","setCursor","mode","applyStyles","OffscreenCanvas","style","cursor","prototype","hasOwnProperty","call","nativeEvent","click","rootTarget","lastObjectRendered","events","_normalizeToPointerData","isNormalized","cancelable","preventDefault","i","j","length","federatedEvent","_bootstrapEvent","nativeEvent2","mapEvent","move","pointerMoved","normalizedEvents","event","composedPath","outside","type","wheel","wheelEvent","normalizeWheelEvent","element","_removeEvents","_addEvents","addTickerListener","navigator","msPointerEnabled","msContentZooming","msTouchAction","touchAction","document","addEventListener","passive","capture","removeTickerListener","removeEventListener","mapPositionToPoint","point","x","y","rect","isConnected","getBoundingClientRect","width","height","left","top","resolutionMultiplier","TouchEvent","li","changedTouches","touch","button","buttons","isPrimary","touches","radiusX","radiusY","tiltX","tiltY","pointerType","pointerId","identifier","pressure","force","twist","tangentialPressure","layerX","offsetX","clientX","layerY","offsetY","clientY","push","MouseEvent","MOUSE_POINTER_ID","_transferMouseData","deltaX","deltaY","deltaZ","deltaMode","screen","copyFrom","offset","originalEvent","isTrusted","startsWith","replace","srcElement","timeStamp","performance","now","altKey","client","ctrlKey","metaKey","movement","movementX","movementY","page","pageX","pageY","relatedTarget","shiftKey","extension","name","ExtensionType","WebGLSystem","CanvasSystem","WebGPUSystem","priority","EventSystem"]
}
