{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$utils$browser$isWebGLSupported.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,GAAuF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG/H,MAAIC,UAAUH,OAAA,CAAQ,yDAAR,CAAd,EACII,mBAAmBJ,OAAA,CAAQ,wFAAR,CADvB;AAGA,cAAA;AACA,MAAIK,iBAAJ;AA+BAH,SAAQI,CAAAA,gBAAR,GA9BAA,QAAyB,CAACC,4BAAD,CAA+B;AACtD,WAA0B,IAAK,EAA/B,KAAIF,iBAAJ,GACSA,iBADT,GAEAA,iBAFA,GAEqB,CAAA,EAAA,IAAM;AACzB,UAAMG,iBAAiB,CACrBC,QAAS,CAAA,CADY,EAErBF,6BAA8BA,4BAA9BA,IAA8DH,gBAAiBA,CAAAA,gBAAiBM,CAAAA,cAAeH,CAAAA,4BAF1F,CAAvB;AAIA,SAAI;AACF,YAAI,CAACJ,OAAQQ,CAAAA,UAAWC,CAAAA,GAAnB,EAAyBC,CAAAA,wBAAzB,EAAL;AACE,iBAAO,CAAA,CAAP;AADF;AAIA,YAAIC,KADWX,OAAQQ,CAAAA,UAAWC,CAAAA,GAAnB,EAAyBG,CAAAA,YAAzBC,EACCC,CAAAA,UAAP,CAAkB,OAAlB,EAA2BT,cAA3B,CAAT;AACMU,sBAAAA,GAAU,CAAC,CAACJ,EAAIK,EAAAA,oBAAJ,EAA4BV,EAAAA,OAAxCS;AACN,YAAIJ,EAAJ,CAAQ;AACN,gBAAMM,cAAcN,EAAGO,CAAAA,YAAH,CAAgB,oBAAhB,CAApB;AACID,qBAAJ,IACEA,WAAYA,CAAAA,WAAZ,EADF;AAFM;AAOR,eAAOF,cAAP;AAdE,OAeF,QAAOI,EAAP,CAAW;AACX,eAAO,CAAA,CAAP;AADW;AApBY,KAAN,CAAD,EAFpB;AADsD,GA8BxD;AAtC+H,CAA/H;;",
"sources":["node_modules/pixi_DOT_js/lib/utils/browser/isWebGLSupported.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$utils$browser$isWebGLSupported\"] = function(global,require,module,exports) {\n'use strict';\n\nvar adapter = require('../../environment/adapter.js');\nvar AbstractRenderer = require('../../rendering/renderers/shared/system/AbstractRenderer.js');\n\n\"use strict\";\nlet _isWebGLSupported;\nfunction isWebGLSupported(failIfMajorPerformanceCaveat) {\n  if (_isWebGLSupported !== void 0)\n    return _isWebGLSupported;\n  _isWebGLSupported = (() => {\n    const contextOptions = {\n      stencil: true,\n      failIfMajorPerformanceCaveat: failIfMajorPerformanceCaveat ?? AbstractRenderer.AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat\n    };\n    try {\n      if (!adapter.DOMAdapter.get().getWebGLRenderingContext()) {\n        return false;\n      }\n      const canvas = adapter.DOMAdapter.get().createCanvas();\n      let gl = canvas.getContext(\"webgl\", contextOptions);\n      const success = !!gl?.getContextAttributes()?.stencil;\n      if (gl) {\n        const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n        if (loseContext) {\n          loseContext.loseContext();\n        }\n      }\n      gl = null;\n      return success;\n    } catch (_e) {\n      return false;\n    }\n  })();\n  return _isWebGLSupported;\n}\n\nexports.isWebGLSupported = isWebGLSupported;\n//# sourceMappingURL=isWebGLSupported.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","adapter","AbstractRenderer","_isWebGLSupported","isWebGLSupported","failIfMajorPerformanceCaveat","contextOptions","stencil","defaultOptions","DOMAdapter","get","getWebGLRenderingContext","gl","createCanvas","canvas","getContext","success","getContextAttributes","loseContext","getExtension","_e"]
}
