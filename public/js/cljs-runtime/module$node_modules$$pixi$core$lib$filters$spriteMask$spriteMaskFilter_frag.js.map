{
"version":3,
"file":"module$node_modules$$pixi$core$lib$filters$spriteMask$spriteMaskFilter_frag.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,GAAgG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAExIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAAA;AA2BAH,SAAQI,CAAAA,OAAR,GA1BgBC,sqBA0BhB;AA7BwI,CAAxI;;",
"sources":["node_modules/@pixi/core/lib/filters/spriteMask/spriteMaskFilter.frag.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$filters$spriteMask$spriteMaskFilter_frag\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: !0 });\nvar fragment = `varying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform sampler2D mask;\nuniform float alpha;\nuniform float npmAlpha;\nuniform vec4 maskClamp;\n\nvoid main(void)\n{\n    float clip = step(3.5,\n        step(maskClamp.x, vMaskCoord.x) +\n        step(maskClamp.y, vMaskCoord.y) +\n        step(vMaskCoord.x, maskClamp.z) +\n        step(vMaskCoord.y, maskClamp.w));\n\n    vec4 original = texture2D(uSampler, vTextureCoord);\n    vec4 masky = texture2D(mask, vMaskCoord);\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\n\n    original *= (alphaMul * masky.r * alpha * clip);\n\n    gl_FragColor = original;\n}\n`;\nexports.default = fragment;\n//# sourceMappingURL=spriteMaskFilter.frag.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","fragment"]
}
