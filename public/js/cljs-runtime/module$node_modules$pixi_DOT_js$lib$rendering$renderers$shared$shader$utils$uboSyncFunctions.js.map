{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$uboSyncFunctions.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,4FAAA,GAAiH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAIzJC,UAASA,WAAU,CAACC,GAAD,EAAMC,GAAN,CAAW;AAE5B,WAAQ;8BADMD,GACN,GADYC,GACZ;mCAEyBD,GAFzB,oBAEgDA,GAFhD;;KAAR;AAF4B;AAQxBE,QAAAA,GAAwB,CAC5BC,IAAM,gCADsB,EAG5BC,IAAM,qCAHsB,EAK5B,kBAAc,wEALc,EAQ5B,kBAAc,6GARc,EAY5B,kBAAc,kJAZc,EAiB5B,kBAAc,kFAjBc;AAoB5B,oBAAc,4HApBc,EAwB5B,kBAAc,sKAxBc,EA6B5B,oBAAgB,kJA7BY,EAkC5B,oBAAgB,4UAlCY;AA4C5B,sBAAgB,oGA5CY,EAgD5B,oBAAeL,UAAA,CAAW,CAAX,EAAc,CAAd,CAhDa,EAiD5B,oBAAeA,UAAA,CAAW,CAAX,EAAc,CAAd,CAjDa,EAkD5B,oBAAeA,UAAA,CAAW,CAAX,EAAc,CAAd,CAlDa,EAmD5B,oBAAeA,UAAA,CAAW,CAAX,EAAc,CAAd,CAnDa,EAoD5B,oBAAeA,UAAA,CAAW,CAAX,EAAc,CAAd,CApDa,EAqD5B,oBAAeA,UAAA,CAAW,CAAX,EAAc,CAAd,CArDa,CAAxBG;AAuDAG,SAAAA,GAAuB,CAC3B,GAAGH,MADwB,EAE3B,oBAAgB,wJAFW,CAAvBG;AAUNP,SAAQI,CAAAA,qBAAR,GAAgCA,MAAhC;AACAJ,SAAQO,CAAAA,oBAAR,GAA+BA,OAA/B;AA9EyJ,CAAzJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/shader/utils/uboSyncFunctions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$uboSyncFunctions\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction loopMatrix(col, row) {\n  const total = col * row;\n  return `\n        for (let i = 0; i < ${total}; i++) {\n            data[offset + (((i / ${col})|0) * 4) + (i % ${col})] = v[i];\n        }\n    `;\n}\nconst uboSyncFunctionsSTD40 = {\n  f32: `\n        data[offset] = v;`,\n  i32: `\n        dataInt32[offset] = v;`,\n  \"vec2<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];`,\n  \"vec3<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];`,\n  \"vec4<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];`,\n  \"vec2<i32>\": `\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];`,\n  \"vec3<i32>\": `\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];\n        dataInt32[offset + 2] = v[2];`,\n  \"vec4<i32>\": `\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];\n        dataInt32[offset + 2] = v[2];\n        dataInt32[offset + 3] = v[3];`,\n  \"mat2x2<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 4] = v[2];\n        data[offset + 5] = v[3];`,\n  \"mat3x3<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];`,\n  \"mat4x4<f32>\": `\n        for (let i = 0; i < 16; i++) {\n            data[offset + i] = v[i];\n        }`,\n  \"mat3x2<f32>\": loopMatrix(3, 2),\n  \"mat4x2<f32>\": loopMatrix(4, 2),\n  \"mat2x3<f32>\": loopMatrix(2, 3),\n  \"mat4x3<f32>\": loopMatrix(4, 3),\n  \"mat2x4<f32>\": loopMatrix(2, 4),\n  \"mat3x4<f32>\": loopMatrix(3, 4)\n};\nconst uboSyncFunctionsWGSL = {\n  ...uboSyncFunctionsSTD40,\n  \"mat2x2<f32>\": `\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];\n    `\n};\n\nexports.uboSyncFunctionsSTD40 = uboSyncFunctionsSTD40;\nexports.uboSyncFunctionsWGSL = uboSyncFunctionsWGSL;\n//# sourceMappingURL=uboSyncFunctions.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","loopMatrix","col","row","uboSyncFunctionsSTD40","f32","i32","uboSyncFunctionsWGSL"]
}
