{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$removeStructAndGroupDuplicates.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,uGAAA,GAA4H,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAyBpKA,SAAQC,CAAAA,8BAAR,GArBAA,QAAuC,CAACC,sBAAD,EAAyBC,wBAAzB,CAAmD;AACxF,UAAMC,gBAAgC,IAAIC,GAAJ,EAAtC,EACMC,kBAAkC,IAAID,GAAJ,EADxC,EAEME,UAAU,CAAC,GAAGL,sBAAuBK,CAAAA,OAA3B,EAAoC,GAAGJ,wBAAyBI,CAAAA,OAAhE,CAAyEC,CAAAA,MAAzE,CAAiFC,MAAD,IAAY;AAC1G,UAAIL,aAAcM,CAAAA,GAAd,CAAkBD,MAAOE,CAAAA,IAAzB,CAAJ;AACE,eAAO,CAAA,CAAP;AADF;AAGAP,mBAAcQ,CAAAA,GAAd,CAAkBH,MAAOE,CAAAA,IAAzB,CAAA;AACA,aAAO,CAAA,CAAP;AAL0G,KAA5F,CAFhB;AASME,0BAAAA,GAAS,CAAC,GAAGX,sBAAuBW,CAAAA,MAA3B,EAAmC,GAAGV,wBAAyBU,CAAAA,MAA/D,CAAuEL,CAAAA,MAAvE,CAA+EM,KAAD,IAAW;AAChGC,WAAAA,GAAO,GAAED,KAAMH,CAAAA,IAAR,IAAgBG,KAAME,CAAAA,OAAtB,EAAPD;AACN,UAAIT,eAAgBI,CAAAA,GAAhB,CAAoBK,KAApB,CAAJ;AACE,eAAO,CAAA,CAAP;AADF;AAGAT,qBAAgBM,CAAAA,GAAhB,CAAoBG,KAApB,CAAA;AACA,aAAO,CAAA,CAAP;AANsG,KAAzF,CAATF;AAQN,WAAO,CAAEN,OAAF,EAAWM,OAAAA,sBAAX,CAAP;AAlBwF,GAqB1F;AAzBoK,CAApK;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$removeStructAndGroupDuplicates\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups) {\n  const structNameSet = /* @__PURE__ */ new Set();\n  const dupeGroupKeySet = /* @__PURE__ */ new Set();\n  const structs = [...vertexStructsAndGroups.structs, ...fragmentStructsAndGroups.structs].filter((struct) => {\n    if (structNameSet.has(struct.name)) {\n      return false;\n    }\n    structNameSet.add(struct.name);\n    return true;\n  });\n  const groups = [...vertexStructsAndGroups.groups, ...fragmentStructsAndGroups.groups].filter((group) => {\n    const key = `${group.name}-${group.binding}`;\n    if (dupeGroupKeySet.has(key)) {\n      return false;\n    }\n    dupeGroupKeySet.add(key);\n    return true;\n  });\n  return { structs, groups };\n}\n\nexports.removeStructAndGroupDuplicates = removeStructAndGroupDuplicates;\n//# sourceMappingURL=removeStructAndGroupDuplicates.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","removeStructAndGroupDuplicates","vertexStructsAndGroups","fragmentStructsAndGroups","structNameSet","Set","dupeGroupKeySet","structs","filter","struct","has","name","add","groups","group","key","binding"]
}
