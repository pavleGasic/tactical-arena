{
"version":3,
"file":"module$node_modules$$pixi$core$lib$view$ViewSystem.js",
"lineCount":35,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/view/ViewSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$view$ViewSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar extensions = require(\"@pixi/extensions\"), math = require(\"@pixi/math\"), settings = require(\"@pixi/settings\");\nclass ViewSystem {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /**\n   * initiates the view system\n   * @param {PIXI.ViewOptions} options - the options for the view\n   */\n  init(options) {\n    this.screen = new math.Rectangle(0, 0, options.width, options.height), this.element = options.view || settings.settings.ADAPTER.createCanvas(), this.resolution = options.resolution || settings.settings.RESOLUTION, this.autoDensity = !!options.autoDensity;\n  }\n  /**\n   * Resizes the screen and canvas to the specified dimensions.\n   * @param desiredScreenWidth - The new width of the screen.\n   * @param desiredScreenHeight - The new height of the screen.\n   */\n  resizeView(desiredScreenWidth, desiredScreenHeight) {\n    this.element.width = Math.round(desiredScreenWidth * this.resolution), this.element.height = Math.round(desiredScreenHeight * this.resolution);\n    const screenWidth = this.element.width / this.resolution, screenHeight = this.element.height / this.resolution;\n    this.screen.width = screenWidth, this.screen.height = screenHeight, this.autoDensity && (this.element.style.width = `${screenWidth}px`, this.element.style.height = `${screenHeight}px`), this.renderer.emit(\"resize\", screenWidth, screenHeight), this.renderer.runners.resize.emit(this.screen.width, this.screen.height);\n  }\n  /**\n   * Destroys this System and optionally removes the canvas from the dom.\n   * @param {boolean} [removeView=false] - Whether to remove the canvas from the DOM.\n   */\n  destroy(removeView) {\n    removeView && this.element.parentNode?.removeChild(this.element), this.renderer = null, this.element = null, this.screen = null;\n  }\n}\nViewSystem.defaultOptions = {\n  /**\n   * {@link PIXI.IRendererOptions.width}\n   * @default 800\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  width: 800,\n  /**\n   * {@link PIXI.IRendererOptions.height}\n   * @default 600\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  height: 600,\n  /**\n   * {@link PIXI.IRendererOptions.resolution}\n   * @type {number}\n   * @default PIXI.settings.RESOLUTION\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  resolution: void 0,\n  /**\n   * {@link PIXI.IRendererOptions.autoDensity}\n   * @default false\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  autoDensity: !1\n}, /** @ignore */\nViewSystem.extension = {\n  type: [\n    extensions.ExtensionType.RendererSystem,\n    extensions.ExtensionType.CanvasRendererSystem\n  ],\n  name: \"_view\"\n};\nextensions.extensions.add(ViewSystem);\nexports.ViewSystem = ViewSystem;\n//# sourceMappingURL=ViewSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","extensions","math","settings","ViewSystem","constructor","renderer","init","options","screen","Rectangle","width","height","element","view","ADAPTER","createCanvas","resolution","RESOLUTION","autoDensity","resizeView","desiredScreenWidth","desiredScreenHeight","Math","round","screenWidth","screenHeight","style","emit","runners","resize","destroy","removeView","parentNode","removeChild","defaultOptions","extension","type","ExtensionType","RendererSystem","CanvasRendererSystem","name","add"]
}
