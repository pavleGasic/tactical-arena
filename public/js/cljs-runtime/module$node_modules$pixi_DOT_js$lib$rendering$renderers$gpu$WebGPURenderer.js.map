{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$WebGPURenderer.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/WebGPURenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$WebGPURenderer\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar GpuGraphicsAdaptor = require('../../../scene/graphics/gpu/GpuGraphicsAdaptor.js');\nvar GpuMeshAdapter = require('../../../scene/mesh/gpu/GpuMeshAdapter.js');\nvar GpuBatchAdaptor = require('../../batcher/gpu/GpuBatchAdaptor.js');\nvar AbstractRenderer = require('../shared/system/AbstractRenderer.js');\nvar SharedSystems = require('../shared/system/SharedSystems.js');\nvar types = require('../types.js');\nvar BindGroupSystem = require('./BindGroupSystem.js');\nvar GpuBufferSystem = require('./buffer/GpuBufferSystem.js');\nvar GpuColorMaskSystem = require('./GpuColorMaskSystem.js');\nvar GpuDeviceSystem = require('./GpuDeviceSystem.js');\nvar GpuEncoderSystem = require('./GpuEncoderSystem.js');\nvar GpuStencilSystem = require('./GpuStencilSystem.js');\nvar GpuUboSystem = require('./GpuUboSystem.js');\nvar GpuUniformBatchPipe = require('./GpuUniformBatchPipe.js');\nvar PipelineSystem = require('./pipeline/PipelineSystem.js');\nvar GpuRenderTargetSystem = require('./renderTarget/GpuRenderTargetSystem.js');\nvar GpuShaderSystem = require('./shader/GpuShaderSystem.js');\nvar GpuStateSystem = require('./state/GpuStateSystem.js');\nvar GpuTextureSystem = require('./texture/GpuTextureSystem.js');\n\n\"use strict\";\nconst DefaultWebGPUSystems = [\n  ...SharedSystems.SharedSystems,\n  GpuUboSystem.GpuUboSystem,\n  GpuEncoderSystem.GpuEncoderSystem,\n  GpuDeviceSystem.GpuDeviceSystem,\n  GpuBufferSystem.GpuBufferSystem,\n  GpuTextureSystem.GpuTextureSystem,\n  GpuRenderTargetSystem.GpuRenderTargetSystem,\n  GpuShaderSystem.GpuShaderSystem,\n  GpuStateSystem.GpuStateSystem,\n  PipelineSystem.PipelineSystem,\n  GpuColorMaskSystem.GpuColorMaskSystem,\n  GpuStencilSystem.GpuStencilSystem,\n  BindGroupSystem.BindGroupSystem\n];\nconst DefaultWebGPUPipes = [...SharedSystems.SharedRenderPipes, GpuUniformBatchPipe.GpuUniformBatchPipe];\nconst DefaultWebGPUAdapters = [GpuBatchAdaptor.GpuBatchAdaptor, GpuMeshAdapter.GpuMeshAdapter, GpuGraphicsAdaptor.GpuGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nExtensions.extensions.handleByNamedList(Extensions.ExtensionType.WebGPUSystem, systems);\nExtensions.extensions.handleByNamedList(Extensions.ExtensionType.WebGPUPipes, renderPipes);\nExtensions.extensions.handleByNamedList(Extensions.ExtensionType.WebGPUPipesAdaptor, renderPipeAdaptors);\nExtensions.extensions.add(...DefaultWebGPUSystems, ...DefaultWebGPUPipes, ...DefaultWebGPUAdapters);\nclass WebGPURenderer extends AbstractRenderer.AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgpu\",\n      type: types.RendererType.WEBGPU,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexports.WebGPURenderer = WebGPURenderer;\n//# sourceMappingURL=WebGPURenderer.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","GpuGraphicsAdaptor","GpuMeshAdapter","GpuBatchAdaptor","AbstractRenderer","SharedSystems","types","BindGroupSystem","GpuBufferSystem","GpuColorMaskSystem","GpuDeviceSystem","GpuEncoderSystem","GpuStencilSystem","GpuUboSystem","GpuUniformBatchPipe","PipelineSystem","GpuRenderTargetSystem","GpuShaderSystem","GpuStateSystem","GpuTextureSystem","DefaultWebGPUSystems","DefaultWebGPUPipes","SharedRenderPipes","DefaultWebGPUAdapters","systems","renderPipes","renderPipeAdaptors","extensions","handleByNamedList","ExtensionType","WebGPUSystem","WebGPUPipes","WebGPUPipesAdaptor","add","WebGPURenderer","constructor","systemConfig","name","type","RendererType","WEBGPU"]
}
