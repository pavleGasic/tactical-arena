{
"version":3,
"file":"module$node_modules$$pixi$math$lib$shapes$Rectangle.js",
"lineCount":96,
"mappings":"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",
"sources":["node_modules/@pixi/math/lib/shapes/Rectangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$math$lib$shapes$Rectangle\"] = function(global,require,module,exports) {\n\"use strict\";\nvar _const = require(\"../const.js\"), Point = require(\"../Point.js\");\nconst tempPoints = [new Point.Point(), new Point.Point(), new Point.Point(), new Point.Point()];\nclass Rectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rectangle\n   * @param width - The overall width of the rectangle\n   * @param height - The overall height of the rectangle\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.x = Number(x), this.y = Number(y), this.width = Number(width), this.height = Number(height), this.type = _const.SHAPES.RECT;\n  }\n  /** Returns the left edge of the rectangle. */\n  get left() {\n    return this.x;\n  }\n  /** Returns the right edge of the rectangle. */\n  get right() {\n    return this.x + this.width;\n  }\n  /** Returns the top edge of the rectangle. */\n  get top() {\n    return this.y;\n  }\n  /** Returns the bottom edge of the rectangle. */\n  get bottom() {\n    return this.y + this.height;\n  }\n  /** A constant empty rectangle. */\n  static get EMPTY() {\n    return new Rectangle(0, 0, 0, 0);\n  }\n  /**\n   * Creates a clone of this Rectangle\n   * @returns a copy of the rectangle\n   */\n  clone() {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @param rectangle - The rectangle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(rectangle) {\n    return this.x = rectangle.x, this.y = rectangle.y, this.width = rectangle.width, this.height = rectangle.height, this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @param rectangle - The rectangle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(rectangle) {\n    return rectangle.x = this.x, rectangle.y = this.y, rectangle.width = this.width, rectangle.height = this.height, rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rectangle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Rectangle\n   */\n  contains(x, y) {\n    return this.width <= 0 || this.height <= 0 ? !1 : x >= this.x && x < this.x + this.width && y >= this.y && y < this.y + this.height;\n  }\n  /**\n   * Determines whether the `other` Rectangle transformed by `transform` intersects with `this` Rectangle object.\n   * Returns true only if the area of the intersection is >0, this means that Rectangles\n   * sharing a side are not overlapping. Another side effect is that an arealess rectangle\n   * (width or height equal to zero) can't intersect any other rectangle.\n   * @param {Rectangle} other - The Rectangle to intersect with `this`.\n   * @param {Matrix} transform - The transformation matrix of `other`.\n   * @returns {boolean} A value of `true` if the transformed `other` Rectangle intersects with `this`; otherwise `false`.\n   */\n  intersects(other, transform) {\n    if (!transform) {\n      const x02 = this.x < other.x ? other.x : this.x;\n      if ((this.right > other.right ? other.right : this.right) <= x02)\n        return !1;\n      const y02 = this.y < other.y ? other.y : this.y;\n      return (this.bottom > other.bottom ? other.bottom : this.bottom) > y02;\n    }\n    const x0 = this.left, x1 = this.right, y0 = this.top, y1 = this.bottom;\n    if (x1 <= x0 || y1 <= y0)\n      return !1;\n    const lt = tempPoints[0].set(other.left, other.top), lb = tempPoints[1].set(other.left, other.bottom), rt = tempPoints[2].set(other.right, other.top), rb = tempPoints[3].set(other.right, other.bottom);\n    if (rt.x <= lt.x || lb.y <= lt.y)\n      return !1;\n    const s = Math.sign(transform.a * transform.d - transform.b * transform.c);\n    if (s === 0 || (transform.apply(lt, lt), transform.apply(lb, lb), transform.apply(rt, rt), transform.apply(rb, rb), Math.max(lt.x, lb.x, rt.x, rb.x) <= x0 || Math.min(lt.x, lb.x, rt.x, rb.x) >= x1 || Math.max(lt.y, lb.y, rt.y, rb.y) <= y0 || Math.min(lt.y, lb.y, rt.y, rb.y) >= y1))\n      return !1;\n    const nx = s * (lb.y - lt.y), ny = s * (lt.x - lb.x), n00 = nx * x0 + ny * y0, n10 = nx * x1 + ny * y0, n01 = nx * x0 + ny * y1, n11 = nx * x1 + ny * y1;\n    if (Math.max(n00, n10, n01, n11) <= nx * lt.x + ny * lt.y || Math.min(n00, n10, n01, n11) >= nx * rb.x + ny * rb.y)\n      return !1;\n    const mx = s * (lt.y - rt.y), my = s * (rt.x - lt.x), m00 = mx * x0 + my * y0, m10 = mx * x1 + my * y0, m01 = mx * x0 + my * y1, m11 = mx * x1 + my * y1;\n    return !(Math.max(m00, m10, m01, m11) <= mx * lt.x + my * lt.y || Math.min(m00, m10, m01, m11) >= mx * rb.x + my * rb.y);\n  }\n  /**\n   * Pads the rectangle making it grow in all directions.\n   * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n   * @param paddingX - The horizontal padding amount.\n   * @param paddingY - The vertical padding amount.\n   * @returns Returns itself.\n   */\n  pad(paddingX = 0, paddingY = paddingX) {\n    return this.x -= paddingX, this.y -= paddingY, this.width += paddingX * 2, this.height += paddingY * 2, this;\n  }\n  /**\n   * Fits this rectangle around the passed one.\n   * @param rectangle - The rectangle to fit.\n   * @returns Returns itself.\n   */\n  fit(rectangle) {\n    const x1 = Math.max(this.x, rectangle.x), x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width), y1 = Math.max(this.y, rectangle.y), y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n    return this.x = x1, this.width = Math.max(x2 - x1, 0), this.y = y1, this.height = Math.max(y2 - y1, 0), this;\n  }\n  /**\n   * Enlarges rectangle that way its corners lie on grid\n   * @param resolution - resolution\n   * @param eps - precision\n   * @returns Returns itself.\n   */\n  ceil(resolution = 1, eps = 1e-3) {\n    const x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution, y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n    return this.x = Math.floor((this.x + eps) * resolution) / resolution, this.y = Math.floor((this.y + eps) * resolution) / resolution, this.width = x2 - this.x, this.height = y2 - this.y, this;\n  }\n  /**\n   * Enlarges this rectangle to include the passed rectangle.\n   * @param rectangle - The rectangle to include.\n   * @returns Returns itself.\n   */\n  enlarge(rectangle) {\n    const x1 = Math.min(this.x, rectangle.x), x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width), y1 = Math.min(this.y, rectangle.y), y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n    return this.x = x1, this.width = x2 - x1, this.y = y1, this.height = y2 - y1, this;\n  }\n}\nRectangle.prototype.toString = function() {\n  return `[@pixi/math:Rectangle x=${this.x} y=${this.y} width=${this.width} height=${this.height}]`;\n};\nexports.Rectangle = Rectangle;\n//# sourceMappingURL=Rectangle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","Point","tempPoints","Rectangle","constructor","x","y","width","height","Number","type","SHAPES","RECT","clone","copyFrom","rectangle","copyTo","contains","intersects","other","transform","right","x02","bottom","y02","x0","left","x1","y0","top","y1","lt","set","lb","rt","rb","s","Math","sign","a","d","b","c","apply","max","min","nx","ny","n00","n10","n01","n11","mx","my","m00","m10","m01","m11","pad","paddingX","paddingY","fit","x2","y2","ceil","resolution","eps","floor","enlarge","prototype","toString","Rectangle.prototype.toString"]
}
