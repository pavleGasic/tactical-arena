{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$detections$utils$testImageFormat.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,GAA0F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAuBlIA,SAAQC,CAAAA,eAAR,GArBAA,cAA8B,CAACC,SAAD,CAAY;AACxC,QAAI,OAAJ,IAAeC,UAAf;AACE,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,cAAMC,QAAQ,IAAIC,KAAJ,EAAd;AACAD,aAAME,CAAAA,MAAN,GAAe,EAAAC,IAAM;AACnBJ,iBAAA,CAAQ,CAAA,CAAR,CAAA;AADmB,SAArB;AAEGC,aAAMI,CAAAA,OAAN,GAAgB,EAAAC,IAAM;AACvBN,iBAAA,CAAQ,CAAA,CAAR,CAAA;AADuB,SAAtB;AAEAC,aAAMM,CAAAA,GAAN,GAAYV,SAAZ;AAN2B,OAAzB,CAAP;AADF;AASA,QAAI,mBAAJ,IAA2BC,UAA3B,IAAyC,OAAzC,IAAoDA,UAApD,CAAgE;AAC9D,SAAI;AACF,cAAMU,OAAO,MAA+BA,CAAxB,MAAMC,KAAA,CAAMZ,SAAN,CAAkBW,EAAAA,IAAzB,EAAnB;AACA,cAAME,iBAAA,CAAkBF,IAAlB,CAAN;AAFE,OAGF,OAAM;AACN,eAAO,CAAA,CAAP;AADM;AAGR,aAAO,CAAA,CAAP;AAP8D;AAShE,WAAO,CAAA,CAAP;AAnBwC,GAqB1C;AAvBkI,CAAlI;;",
"sources":["node_modules/@pixi/assets/lib/detections/utils/testImageFormat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$detections$utils$testImageFormat\"] = function(global,require,module,exports) {\n\"use strict\";\nasync function testImageFormat(imageData) {\n  if (\"Image\" in globalThis)\n    return new Promise((resolve) => {\n      const image = new Image();\n      image.onload = () => {\n        resolve(!0);\n      }, image.onerror = () => {\n        resolve(!1);\n      }, image.src = imageData;\n    });\n  if (\"createImageBitmap\" in globalThis && \"fetch\" in globalThis) {\n    try {\n      const blob = await (await fetch(imageData)).blob();\n      await createImageBitmap(blob);\n    } catch {\n      return !1;\n    }\n    return !0;\n  }\n  return !1;\n}\nexports.testImageFormat = testImageFormat;\n//# sourceMappingURL=testImageFormat.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","testImageFormat","imageData","globalThis","Promise","resolve","image","Image","onload","image.onload","onerror","image.onerror","src","blob","fetch","createImageBitmap"]
}
