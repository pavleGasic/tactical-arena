shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLText = function(global, require, module, exports) {
  var AbstractText = require("module$node_modules$pixi_DOT_js$lib$scene$text$AbstractText"), HTMLTextStyle = require("module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLTextStyle"), measureHtmlText = require("module$node_modules$pixi_DOT_js$lib$scene$text_html$utils$measureHtmlText");
  "use strict";
  class HTMLText extends AbstractText.AbstractText {
    constructor(...args) {
      super(AbstractText.ensureTextOptions(args, "HtmlText"), HTMLTextStyle.HTMLTextStyle);
      this.renderPipeId = "htmlText";
    }
    updateBounds() {
      const bounds = this._bounds, anchor = this._anchor, htmlMeasurement = measureHtmlText.measureHtmlText(this.text, this._style), {width, height} = htmlMeasurement;
      bounds.minX = -anchor._x * width;
      bounds.maxX = bounds.minX + width;
      bounds.minY = -anchor._y * height;
      bounds.maxY = bounds.minY + height;
    }
  }
  exports.HTMLText = HTMLText;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLText.js.map
