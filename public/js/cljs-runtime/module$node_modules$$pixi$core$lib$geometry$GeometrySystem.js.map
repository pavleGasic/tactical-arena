{
"version":3,
"file":"module$node_modules$$pixi$core$lib$geometry$GeometrySystem.js",
"lineCount":161,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/geometry/GeometrySystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$geometry$GeometrySystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), extensions = require(\"@pixi/extensions\"), settings = require(\"@pixi/settings\");\nconst byteSizeMap = { 5126: 4, 5123: 2, 5121: 1 };\nclass GeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this.renderer = renderer, this._activeGeometry = null, this._activeVao = null, this.hasVao = !0, this.hasInstance = !0, this.canUseUInt32ElementIndex = !1, this.managedGeometries = {};\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this.disposeAll(!0);\n    const gl = this.gl = this.renderer.gl, context = this.renderer.context;\n    if (this.CONTEXT_UID = this.renderer.CONTEXT_UID, context.webGLVersion !== 2) {\n      let nativeVaoExtension = this.renderer.context.extensions.vertexArrayObject;\n      settings.settings.PREFER_ENV === constants.ENV.WEBGL_LEGACY && (nativeVaoExtension = null), nativeVaoExtension ? (gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES(), gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao), gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao)) : (this.hasVao = !1, gl.createVertexArray = () => null, gl.bindVertexArray = () => null, gl.deleteVertexArray = () => null);\n    }\n    if (context.webGLVersion !== 2) {\n      const instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n      instanceExt ? (gl.vertexAttribDivisor = (a, b) => instanceExt.vertexAttribDivisorANGLE(a, b), gl.drawElementsInstanced = (a, b, c, d, e) => instanceExt.drawElementsInstancedANGLE(a, b, c, d, e), gl.drawArraysInstanced = (a, b, c, d) => instanceExt.drawArraysInstancedANGLE(a, b, c, d)) : this.hasInstance = !1;\n    }\n    this.canUseUInt32ElementIndex = context.webGLVersion === 2 || !!context.extensions.uint32ElementIndex;\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param shader - Instance of shader to use vao for.\n   */\n  bind(geometry, shader) {\n    shader = shader || this.renderer.shader.shader;\n    const { gl } = this;\n    let vaos = geometry.glVertexArrayObjects[this.CONTEXT_UID], incRefCount = !1;\n    vaos || (this.managedGeometries[geometry.id] = geometry, geometry.disposeRunner.add(this), geometry.glVertexArrayObjects[this.CONTEXT_UID] = vaos = {}, incRefCount = !0);\n    const vao = vaos[shader.program.id] || this.initGeometryVao(geometry, shader, incRefCount);\n    this._activeGeometry = geometry, this._activeVao !== vao && (this._activeVao = vao, this.hasVao ? gl.bindVertexArray(vao) : this.activateVao(geometry, shader.program)), this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  reset() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry, bufferSystem = this.renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.update(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes, shaderAttributes = program.attributeData;\n    for (const j in shaderAttributes)\n      if (!geometryAttributes[j])\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes, shaderAttributes = program.attributeData, strings = [\"g\", geometry.id];\n    for (const i in attribs)\n      shaderAttributes[i] && strings.push(i, shaderAttributes[i].location);\n    return strings.join(\"-\");\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param shader - Instance of the shader.\n   * @param incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, shader, incRefCount = !0) {\n    const gl = this.gl, CONTEXT_UID = this.CONTEXT_UID, bufferSystem = this.renderer.buffer, program = shader.program;\n    program.glPrograms[CONTEXT_UID] || this.renderer.shader.generateProgram(shader), this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program), vaoObjectHash = geometry.glVertexArrayObjects[this.CONTEXT_UID];\n    let vao = vaoObjectHash[signature];\n    if (vao)\n      return vaoObjectHash[program.id] = vao, vao;\n    const buffers = geometry.buffers, attributes = geometry.attributes, tempStride = {}, tempStart = {};\n    for (const j in buffers)\n      tempStride[j] = 0, tempStart[j] = 0;\n    for (const j in attributes)\n      !attributes[j].size && program.attributeData[j] ? attributes[j].size = program.attributeData[j].size : attributes[j].size || console.warn(`PIXI Geometry attribute '${j}' size cannot be determined (likely the bound shader does not have the attribute)`), tempStride[attributes[j].buffer] += attributes[j].size * byteSizeMap[attributes[j].type];\n    for (const j in attributes) {\n      const attribute = attributes[j], attribSize = attribute.size;\n      attribute.stride === void 0 && (tempStride[attribute.buffer] === attribSize * byteSizeMap[attribute.type] ? attribute.stride = 0 : attribute.stride = tempStride[attribute.buffer]), attribute.start === void 0 && (attribute.start = tempStart[attribute.buffer], tempStart[attribute.buffer] += attribSize * byteSizeMap[attribute.type]);\n    }\n    vao = gl.createVertexArray(), gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer), incRefCount && buffer._glBuffers[CONTEXT_UID].refCount++;\n    }\n    return this.activateVao(geometry, program), vaoObjectHash[program.id] = vao, vaoObjectHash[signature] = vao, gl.bindVertexArray(null), bufferSystem.unbind(constants.BUFFER_TYPE.ARRAY_BUFFER), vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  disposeGeometry(geometry, contextLost) {\n    if (!this.managedGeometries[geometry.id])\n      return;\n    delete this.managedGeometries[geometry.id];\n    const vaos = geometry.glVertexArrayObjects[this.CONTEXT_UID], gl = this.gl, buffers = geometry.buffers, bufferSystem = this.renderer?.buffer;\n    if (geometry.disposeRunner.remove(this), !!vaos) {\n      if (bufferSystem)\n        for (let i = 0; i < buffers.length; i++) {\n          const buf = buffers[i]._glBuffers[this.CONTEXT_UID];\n          buf && (buf.refCount--, buf.refCount === 0 && !contextLost && bufferSystem.dispose(buffers[i], contextLost));\n        }\n      if (!contextLost) {\n        for (const vaoId in vaos)\n          if (vaoId[0] === \"g\") {\n            const vao = vaos[vaoId];\n            this._activeVao === vao && this.unbind(), gl.deleteVertexArray(vao);\n          }\n      }\n      delete geometry.glVertexArrayObjects[this.CONTEXT_UID];\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  disposeAll(contextLost) {\n    const all = Object.keys(this.managedGeometries);\n    for (let i = 0; i < all.length; i++)\n      this.disposeGeometry(this.managedGeometries[all[i]], contextLost);\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this.gl, CONTEXT_UID = this.CONTEXT_UID, bufferSystem = this.renderer.buffer, buffers = geometry.buffers, attributes = geometry.attributes;\n    geometry.indexBuffer && bufferSystem.bind(geometry.indexBuffer);\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j], buffer = buffers[attribute.buffer], glBuffer = buffer._glBuffers[CONTEXT_UID];\n      if (program.attributeData[j]) {\n        lastBuffer !== glBuffer && (bufferSystem.bind(buffer), lastBuffer = glBuffer);\n        const location = program.attributeData[j].location;\n        if (gl.enableVertexAttribArray(location), gl.vertexAttribPointer(\n          location,\n          attribute.size,\n          attribute.type || gl.FLOAT,\n          attribute.normalized,\n          attribute.stride,\n          attribute.start\n        ), attribute.instance)\n          if (this.hasInstance)\n            gl.vertexAttribDivisor(location, attribute.divisor);\n          else\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param type - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   */\n  draw(type, size, start, instanceCount) {\n    const { gl } = this, geometry = this._activeGeometry;\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT, glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      byteSize === 2 || byteSize === 4 && this.canUseUInt32ElementIndex ? geometry.instanced ? gl.drawElementsInstanced(type, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount || 1) : gl.drawElements(type, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize) : console.warn(\"unsupported index buffer type: uint32\");\n    } else\n      geometry.instanced ? gl.drawArraysInstanced(type, start, size || geometry.getSize(), instanceCount || 1) : gl.drawArrays(type, start, size || geometry.getSize());\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null), this._activeVao = null, this._activeGeometry = null;\n  }\n  destroy() {\n    this.renderer = null;\n  }\n}\nGeometrySystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"geometry\"\n};\nextensions.extensions.add(GeometrySystem);\nexports.GeometrySystem = GeometrySystem;\n//# sourceMappingURL=GeometrySystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","extensions","settings","byteSizeMap","GeometrySystem","constructor","renderer","_activeVao","_activeGeometry","hasInstance","hasVao","canUseUInt32ElementIndex","managedGeometries","contextChange","disposeAll","gl","context","CONTEXT_UID","webGLVersion","nativeVaoExtension","vertexArrayObject","PREFER_ENV","ENV","WEBGL_LEGACY","createVertexArray","gl.createVertexArray","createVertexArrayOES","bindVertexArray","vao","gl.bindVertexArray","bindVertexArrayOES","deleteVertexArray","gl.deleteVertexArray","deleteVertexArrayOES","instanceExt","getExtension","vertexAttribDivisor","a","b","gl.vertexAttribDivisor","vertexAttribDivisorANGLE","drawElementsInstanced","c","d","e","gl.drawElementsInstanced","drawElementsInstancedANGLE","drawArraysInstanced","gl.drawArraysInstanced","drawArraysInstancedANGLE","uint32ElementIndex","bind","geometry","shader","vaos","glVertexArrayObjects","incRefCount","id","disposeRunner","add","program","initGeometryVao","activateVao","updateBuffers","reset","unbind","bufferSystem","buffer","i","buffers","length","update","checkCompatibility","geometryAttributes","attributes","shaderAttributes","attributeData","j","Error","getSignature","attribs","strings","push","location","join","glPrograms","generateProgram","signature","vaoObjectHash","tempStride","tempStart","size","console","warn","type","attribute","attribSize","stride","start","_glBuffers","refCount","BUFFER_TYPE","ARRAY_BUFFER","disposeGeometry","contextLost","remove","buf","dispose","vaoId","all","Object","keys","indexBuffer","lastBuffer","glBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","normalized","instance","divisor","draw","instanceCount","byteSize","data","BYTES_PER_ELEMENT","glType","UNSIGNED_SHORT","UNSIGNED_INT","instanced","drawElements","getSize","drawArrays","destroy","extension","ExtensionType","RendererSystem","name"]
}
