shadow$provide.module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadVideo = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index"), checkDataUrl = require("module$node_modules$$pixi$assets$lib$utils$checkDataUrl"), checkExtension = require("module$node_modules$$pixi$assets$lib$utils$checkExtension");
  global = require("module$node_modules$$pixi$assets$lib$loader$parsers$LoaderParser");
  var createTexture = require("module$node_modules$$pixi$assets$lib$loader$parsers$textures$utils$createTexture");
  const validVideoExtensions = [".mp4", ".m4v", ".webm", ".ogv"], validVideoMIMEs = ["video/mp4", "video/webm", "video/ogg"];
  require = {name:"loadVideo", extension:{type:core.ExtensionType.LoadParser, priority:global.LoaderParserPriority.High}, config:{defaultAutoPlay:!0, defaultUpdateFPS:0, defaultLoop:!1, defaultMuted:!1, defaultPlaysinline:!0}, test(url) {
    return checkDataUrl.checkDataUrl(url, validVideoMIMEs) || checkExtension.checkExtension(url, validVideoExtensions);
  }, async load(url, loadAsset, loader) {
    let texture;
    const blob = await (await core.settings.ADAPTER.fetch(url)).blob(), blobURL = URL.createObjectURL(blob);
    try {
      const src = new core.VideoResource(blobURL, {autoPlay:this.config.defaultAutoPlay, updateFPS:this.config.defaultUpdateFPS, loop:this.config.defaultLoop, muted:this.config.defaultMuted, playsinline:this.config.defaultPlaysinline, ...loadAsset?.data?.resourceOptions, autoLoad:!0});
      await src.load();
      const base = new core.BaseTexture(src, {alphaMode:await core.utils.detectVideoAlphaMode(), resolution:core.utils.getResolutionOfUrl(url), ...loadAsset?.data});
      base.resource.src = url;
      texture = createTexture.createTexture(base, loader, url);
      texture.baseTexture.once("destroyed", () => {
        URL.revokeObjectURL(blobURL);
      });
    } catch (e) {
      throw URL.revokeObjectURL(blobURL), e;
    }
    return texture;
  }, unload(texture) {
    texture.destroy(!0);
  }};
  core.extensions.add(require);
  exports.loadVideo = require;
};

//# sourceMappingURL=module$node_modules$$pixi$assets$lib$loader$parsers$textures$loadVideo.js.map
