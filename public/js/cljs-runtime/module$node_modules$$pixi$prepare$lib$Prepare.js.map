{
"version":3,
"file":"module$node_modules$$pixi$prepare$lib$Prepare.js",
"lineCount":37,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,GAAkE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG1GC,UAASA,mBAAkB,CAACC,QAAD,EAAWC,IAAX,CAAiB;AAC1C,WAAOA,IAAA,YAAgBC,IAAKC,CAAAA,WAArB,IAAoCF,IAAKG,CAAAA,WAAL,CAAiBJ,QAASK,CAAAA,WAA1B,CAAA,IAA0CL,QAASM,CAAAA,OAAQC,CAAAA,IAAjB,CAAsBN,IAAtB,CAA1C,EAAuE,CAAA,CAA3G,IAAiH,CAAA,CAAxH;AAD0C;AAG5CO,UAASA,eAAc,CAACR,QAAD,EAAWC,IAAX,CAAiB;AACtC,QAAI,EAAEA,IAAF,YAAkBQ,QAASC,CAAAA,QAA3B,CAAJ;AACE,aAAO,CAAA,CAAP;AADF;AAEA,UAAM,CAAEC,QAAF,CAAA,GAAeV,IAArB;AACAA,QAAKW,CAAAA,UAAL,EAAA;AAAmBD,YAASE,CAAAA,aAAT,EAAA;AACnB,UAAM,CAAEC,OAAF,CAAA,GAAcH,QAApB;AACA,SAAK,IAAII,IAAI,CAAb,EAAgBA,CAAhB,GAAoBD,OAAQE,CAAAA,MAA5B,EAAoCD,CAAA,EAApC,CAAyC;AACvC,YAAM,CAAET,OAAF,CAAA,GAAcQ,OAAA,CAAQC,CAAR,CAAWE,CAAAA,KAA/B;AACAX,aAAA,IAAWP,kBAAA,CAAmBC,QAAnB,EAA6BM,OAAQY,CAAAA,WAArC,CAAX;AAFuC;AAIzC,WAAOP,QAASQ,CAAAA,SAAT,IAAsBnB,QAASW,CAAAA,QAASJ,CAAAA,IAAlB,CAAuBI,QAAvB,EAAiCV,IAAKmB,CAAAA,oBAAL,CAA0BpB,QAA1B,CAAjC,CAAtB,EAA6F,CAAA,CAApG;AAVsC;AAYxCqB,UAASA,aAAY,CAACpB,IAAD,EAAOqB,KAAP,CAAc;AACjC,WAAOrB,IAAA,YAAgBQ,QAASC,CAAAA,QAAzB,IAAqCY,KAAMC,CAAAA,IAAN,CAAWtB,IAAX,CAAA,EAAkB,CAAA,CAAvD,IAA6D,CAAA,CAApE;AADiC;AAlBuE,MAEtGC,OAAON,OAAA,CAAQ,0CAAR,CAF+F,EAExEa,WAAWb,OAAA,CAAQ,8CAAR,CAF6D;AAElC4B,QAAAA,GAAc5B,OAAA,CAAQ,mDAAR,CAAd4B;AAmBxE,OAAMC,QAAN,QAAsBD,OAAYA,CAAAA,WAAlC;AAIEE,eAAW,CAAC1B,QAAD,CAAW;AACpB,WAAA,CAAMA,QAAN,CAAA;AAAiB,UAAK2B,CAAAA,gBAAL,GAAwB,IAAK3B,CAAAA,QAA7B;AAAuC,UAAK4B,CAAAA,gBAAL,CAAsBP,YAAtB,CAAA;AAAqC,UAAKQ,CAAAA,kBAAL,CAAwB9B,kBAAxB,CAAA;AAA6C,UAAK8B,CAAAA,kBAAL,CAAwBrB,cAAxB,CAAA;AADtH;AAJxB;AAQAiB,SAAQK,CAAAA,SAAR,GAAoB,CAClBC,KAAM,SADY,EAElBC,KAAM9B,IAAK+B,CAAAA,aAAcC,CAAAA,cAFP,CAApB;AAIAhC,MAAKiC,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBX,OAApB,CAAA;AACA3B,SAAQ2B,CAAAA,OAAR,GAAkBA,OAAlB;AAlC0G,CAA1G;;",
"sources":["node_modules/@pixi/prepare/lib/Prepare.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$prepare$lib$Prepare\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), graphics = require(\"@pixi/graphics\"), BasePrepare = require(\"./BasePrepare.js\");\nfunction uploadBaseTextures(renderer, item) {\n  return item instanceof core.BaseTexture ? (item._glTextures[renderer.CONTEXT_UID] || renderer.texture.bind(item), !0) : !1;\n}\nfunction uploadGraphics(renderer, item) {\n  if (!(item instanceof graphics.Graphics))\n    return !1;\n  const { geometry } = item;\n  item.finishPoly(), geometry.updateBatches();\n  const { batches } = geometry;\n  for (let i = 0; i < batches.length; i++) {\n    const { texture } = batches[i].style;\n    texture && uploadBaseTextures(renderer, texture.baseTexture);\n  }\n  return geometry.batchable || renderer.geometry.bind(geometry, item._resolveDirectShader(renderer)), !0;\n}\nfunction findGraphics(item, queue) {\n  return item instanceof graphics.Graphics ? (queue.push(item), !0) : !1;\n}\nclass Prepare extends BasePrepare.BasePrepare {\n  /**\n   * @param {PIXI.Renderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer) {\n    super(renderer), this.uploadHookHelper = this.renderer, this.registerFindHook(findGraphics), this.registerUploadHook(uploadBaseTextures), this.registerUploadHook(uploadGraphics);\n  }\n}\nPrepare.extension = {\n  name: \"prepare\",\n  type: core.ExtensionType.RendererSystem\n};\ncore.extensions.add(Prepare);\nexports.Prepare = Prepare;\n//# sourceMappingURL=Prepare.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","uploadBaseTextures","renderer","item","core","BaseTexture","_glTextures","CONTEXT_UID","texture","bind","uploadGraphics","graphics","Graphics","geometry","finishPoly","updateBatches","batches","i","length","style","baseTexture","batchable","_resolveDirectShader","findGraphics","queue","push","BasePrepare","Prepare","constructor","uploadHookHelper","registerFindHook","registerUploadHook","extension","name","type","ExtensionType","RendererSystem","extensions","add"]
}
