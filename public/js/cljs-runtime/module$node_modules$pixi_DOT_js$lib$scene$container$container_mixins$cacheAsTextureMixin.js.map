{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$container$container_mixins$cacheAsTextureMixin.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,CAAA,wFAAA,GAA6G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGrJ,MAAIC,cAAcH,OAAA,CAAQ,+DAAR,CAAlB;AAEA,cAAA;AA2CAE,SAAQE,CAAAA,mBAAR,GA1C4BA,CAOtBC,qBAAoB,EAAA;AACtB,WAAO,CAAC,CAAC,IAAKC,CAAAA,WAAaD,EAAAA,iBAA3B;AADsB,GAPED,EAU1BG,cAAc,CAACC,GAAD,CAAM;AACC,aAAnB,KAAI,MAAOA,IAAX,IAAwC,CAAA,CAAxC,KAAgCA,GAAhC,GACE,IAAKC,CAAAA,kBAAL,EADF,IAGE,IAAKC,CAAAA,iBAAL,EACA,EAAA,IAAKJ,CAAAA,WAAYK,CAAAA,oBAAjB,CAA8C,CAAA,CAAR,KAAAH,GAAA,GAAe,EAAf,GAAoBA,GAA1D,CAJF,CAAA;AADkB,GAVMJ,EAuB1BQ,kBAAkB,EAAG;AACnB,QAAKN,CAAAA,WAAaM,EAAAA,kBAAlB,EAAA;AADmB,GAvBKR,EA8BtBS,iBAAgB,EAAA;AAClB,WAAO,IAAKR,CAAAA,iBAAZ;AADkB,GA9BMD,EAoCtBS,iBAAa,CAACL,GAAD,CAAM;AACrBL,eAAYA,CAAAA,WAAZ,CAAwB,QAAxB,EAAkC,0DAAlC,CAAA;AACA,QAAKI,CAAAA,cAAL,CAAoBC,GAApB,CAAA;AAFqB,GApCGJ,CA0C5B;AAhDqJ,CAArJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/container/container-mixins/cacheAsTextureMixin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$container$container_mixins$cacheAsTextureMixin\"] = function(global,require,module,exports) {\n'use strict';\n\nvar deprecation = require('../../../utils/logging/deprecation.js');\n\n\"use strict\";\nconst cacheAsTextureMixin = {\n  /**\n   * Is this container cached as a texture?\n   * @readonly\n   * @type {boolean}\n   * @memberof scene.Container#\n   */\n  get isCachedAsTexture() {\n    return !!this.renderGroup?.isCachedAsTexture;\n  },\n  cacheAsTexture(val) {\n    if (typeof val === \"boolean\" && val === false) {\n      this.disableRenderGroup();\n    } else {\n      this.enableRenderGroup();\n      this.renderGroup.enableCacheAsTexture(val === true ? {} : val);\n    }\n  },\n  /**\n   * Updates the cached texture. Will flag that this container's cached texture needs to be redrawn.\n   * This will happen on the next render.\n   * @memberof scene.Container#\n   */\n  updateCacheTexture() {\n    this.renderGroup?.updateCacheTexture();\n  },\n  /**\n   * Allows backwards compatibility with pixi.js below version v8. Use `cacheAsTexture` instead.\n   * @deprecated\n   */\n  get cacheAsBitmap() {\n    return this.isCachedAsTexture;\n  },\n  /**\n   * @deprecated\n   */\n  set cacheAsBitmap(val) {\n    deprecation.deprecation(\"v8.6.0\", \"cacheAsBitmap is deprecated, use cacheAsTexture instead.\");\n    this.cacheAsTexture(val);\n  }\n};\n\nexports.cacheAsTextureMixin = cacheAsTextureMixin;\n//# sourceMappingURL=cacheAsTextureMixin.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","deprecation","cacheAsTextureMixin","isCachedAsTexture","renderGroup","cacheAsTexture","val","disableRenderGroup","enableRenderGroup","enableCacheAsTexture","updateCacheTexture","cacheAsBitmap"]
}
