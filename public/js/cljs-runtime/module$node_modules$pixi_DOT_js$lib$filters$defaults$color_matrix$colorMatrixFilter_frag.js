shadow$provide.module$node_modules$pixi_DOT_js$lib$filters$defaults$color_matrix$colorMatrixFilter_frag = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = "\nin vec2 vTextureCoord;\nin vec4 vColor;\n\nout vec4 finalColor;\n\nuniform float uColorMatrix[20];\nuniform float uAlpha;\n\nuniform sampler2D uTexture;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main()\n{\n    vec4 color \x3d texture(uTexture, vTextureCoord);\n    float randomValue \x3d rand(gl_FragCoord.xy * 0.2);\n    float diff \x3d (randomValue - 0.5) *  0.5;\n\n    if (uAlpha \x3d\x3d 0.0) {\n        finalColor \x3d color;\n        return;\n    }\n\n    if (color.a \x3e 0.0) {\n        color.rgb /\x3d color.a;\n    }\n\n    vec4 result;\n\n    result.r \x3d (uColorMatrix[0] * color.r);\n        result.r +\x3d (uColorMatrix[1] * color.g);\n        result.r +\x3d (uColorMatrix[2] * color.b);\n        result.r +\x3d (uColorMatrix[3] * color.a);\n        result.r +\x3d uColorMatrix[4];\n\n    result.g \x3d (uColorMatrix[5] * color.r);\n        result.g +\x3d (uColorMatrix[6] * color.g);\n        result.g +\x3d (uColorMatrix[7] * color.b);\n        result.g +\x3d (uColorMatrix[8] * color.a);\n        result.g +\x3d uColorMatrix[9];\n\n    result.b \x3d (uColorMatrix[10] * color.r);\n       result.b +\x3d (uColorMatrix[11] * color.g);\n       result.b +\x3d (uColorMatrix[12] * color.b);\n       result.b +\x3d (uColorMatrix[13] * color.a);\n       result.b +\x3d uColorMatrix[14];\n\n    result.a \x3d (uColorMatrix[15] * color.r);\n       result.a +\x3d (uColorMatrix[16] * color.g);\n       result.a +\x3d (uColorMatrix[17] * color.b);\n       result.a +\x3d (uColorMatrix[18] * color.a);\n       result.a +\x3d uColorMatrix[19];\n\n    vec3 rgb \x3d mix(color.rgb, result.rgb, uAlpha);\n\n    // Premultiply alpha again.\n    rgb *\x3d result.a;\n\n    finalColor \x3d vec4(rgb, result.a);\n}\n";
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$filters$defaults$color_matrix$colorMatrixFilter_frag.js.map
