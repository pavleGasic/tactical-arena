shadow$provide.module$node_modules$pixi_DOT_js$lib$filters$mask$mask_frag = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = "in vec2 vMaskCoord;\nin vec2 vTextureCoord;\n\nuniform sampler2D uTexture;\nuniform sampler2D uMaskTexture;\n\nuniform float uAlpha;\nuniform vec4 uMaskClamp;\nuniform float uInverse;\n\nout vec4 finalColor;\n\nvoid main(void)\n{\n    float clip \x3d step(3.5,\n        step(uMaskClamp.x, vMaskCoord.x) +\n        step(uMaskClamp.y, vMaskCoord.y) +\n        step(vMaskCoord.x, uMaskClamp.z) +\n        step(vMaskCoord.y, uMaskClamp.w));\n\n    // TODO look into why this is needed\n    float npmAlpha \x3d uAlpha;\n    vec4 original \x3d texture(uTexture, vTextureCoord);\n    vec4 masky \x3d texture(uMaskTexture, vMaskCoord);\n    float alphaMul \x3d 1.0 - npmAlpha * (1.0 - masky.a);\n\n    float a \x3d alphaMul * masky.r * npmAlpha * clip;\n\n    if (uInverse \x3d\x3d 1.0) {\n        a \x3d 1.0 - a;\n    }\n\n    finalColor \x3d original * a;\n}\n";
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$filters$mask$mask_frag.js.map
