shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$container$RenderContainer = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$scene$view$ViewContainer");
  "use strict";
  class RenderContainer extends global.ViewContainer {
    constructor(options) {
      "function" === typeof options && (options = {render:options});
      const {render, ...rest} = options;
      super({label:"RenderContainer", ...rest});
      this.renderPipeId = "customRender";
      this.batched = !1;
      render && (this.render = render);
      this.containsPoint = options.containsPoint ?? (() => !1);
      this.addBounds = options.addBounds ?? (() => !1);
    }
    updateBounds() {
      this._bounds.clear();
      this.addBounds(this._bounds);
    }
    render(_renderer) {
    }
  }
  exports.RenderContainer = RenderContainer;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$container$RenderContainer.js.map
