{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlStencilSystem.js",
"lineCount":46,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/GlStencilSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$GlStencilSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar GpuStencilModesToPixi = require('../gpu/state/GpuStencilModesToPixi.js');\nvar _const = require('../shared/state/const.js');\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: _const.STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this.resetState();\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: _const.STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  resetState() {\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = _const.STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi.GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === _const.STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexports.GlStencilSystem = GlStencilSystem;\n//# sourceMappingURL=GlStencilSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","GpuStencilModesToPixi","_const","GlStencilSystem","constructor","renderer","_stencilCache","enabled","stencilReference","stencilMode","STENCIL_MODES","NONE","_renderTargetStencilState","Object","create","renderTarget","onRenderTargetChange","add","contextChange","gl","_gl","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","resetState","_activeRenderTarget","stencilState","uid","DISABLED","setStencilMode","mode","disable","STENCIL_TEST","enable","stencilFunc","stencilBack","compare","stencilOp","passOp","extension","type","ExtensionType","WebGLSystem","name"]
}
