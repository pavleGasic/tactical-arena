{
"version":3,
"file":"module$node_modules$$pixi$core$lib$shader$Shader.js",
"lineCount":37,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,GAAqE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAEzGC,SAASH,OAAA,CAAQ,4CAAR,CAFgG,EAEvEI,UAAUJ,OAAA,CAAQ,mDAAR,CAF6D,EAEpCK,eAAeL,OAAA,CAAQ,wDAAR,CAFqB;AAG7G,OAAMM,OAAN;AAKEC,eAAW,CAACC,OAAD,EAAUC,QAAV,CAAoB;AAC7B,UAAKC,CAAAA,gBAAL,GAAwB,CAAxB;AAA2B,UAAKF,CAAAA,OAAL,GAAeA,OAAf;AAAwBC,cAAA,GAAWA,QAAA,YAAoBJ,YAAaA,CAAAA,YAAjC,GAAgD,IAAKM,CAAAA,YAArD,GAAoEF,QAApE,GAA+E,IAAKE,CAAAA,YAApF,GAAmG,IAAIN,YAAaA,CAAAA,YAAjB,CAA8BI,QAA9B,CAA9G,GAAwJ,IAAKE,CAAAA,YAA7J,GAA4K,IAAIN,YAAaA,CAAAA,YAAjB,CAA8B,EAA9B,CAA5K;AAA+M,UAAKO,CAAAA,aAAL,GAAqB,IAAIT,MAAOU,CAAAA,MAAX,CAAkB,eAAlB,CAArB;AADrO;AAI/BC,sBAAkB,CAACC,IAAD,EAAOC,KAAP,CAAc;AAC9B,UAAIA,KAAMP,CAAAA,QAAN,CAAeM,IAAf,CAAJ;AACE,eAAO,CAAA,CAAP;AADF;AAEA,WAAK,MAAME,CAAX,GAAgBD,MAAMP,CAAAA,QAAtB,CAAgC;AAC9B,cAAMS,UAAUF,KAAMP,CAAAA,QAAN,CAAeQ,CAAf,CAAhB;AACA,YAAsB,CAAA,CAAtB,KAAIC,OAAQF,CAAAA,KAAZ,IAA4B,IAAKF,CAAAA,kBAAL,CAAwBC,IAAxB,EAA8BG,OAA9B,CAA5B;AACE,iBAAO,CAAA,CAAP;AADF;AAF8B;AAKhC,aAAO,CAAA,CAAP;AAR8B;AAUhCC,WAAO,EAAG;AACR,UAAKR,CAAAA,YAAL,GAAoB,IAApB;AAA0B,UAAKC,CAAAA,aAAcQ,CAAAA,IAAnB,CAAwB,IAAxB,CAAA;AAA+B,UAAKR,CAAAA,aAAcO,CAAAA,OAAnB,EAAA;AADjD;AAON,gBAAW,EAAA;AACb,aAAO,IAAKR,CAAAA,YAAaF,CAAAA,QAAzB;AADa;AAURY,eAAI,CAACC,SAAD,EAAYC,WAAZ,EAAyBd,QAAzB,CAAmC;AACtCD,eAAAA,GAAUJ,OAAQA,CAAAA,OAAQiB,CAAAA,IAAhB,CAAqBC,SAArB,EAAgCC,WAAhC,CAAVf;AACN,aAAO,IAAIF,MAAJ,CAAWE,SAAX,EAAoBC,QAApB,CAAP;AAF4C;AApChD;AAyCAP,SAAQI,CAAAA,MAAR,GAAiBA,MAAjB;AA5C6G,CAA7G;;",
"sources":["node_modules/@pixi/core/lib/shader/Shader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$shader$Shader\"] = function(global,require,module,exports) {\n\"use strict\";\nvar runner = require(\"@pixi/runner\"), Program = require(\"./Program.js\"), UniformGroup = require(\"./UniformGroup.js\");\nclass Shader {\n  /**\n   * @param program - The program the shader will use.\n   * @param uniforms - Custom uniforms to use to augment the built-in ones.\n   */\n  constructor(program, uniforms) {\n    this.uniformBindCount = 0, this.program = program, uniforms ? uniforms instanceof UniformGroup.UniformGroup ? this.uniformGroup = uniforms : this.uniformGroup = new UniformGroup.UniformGroup(uniforms) : this.uniformGroup = new UniformGroup.UniformGroup({}), this.disposeRunner = new runner.Runner(\"disposeShader\");\n  }\n  // TODO move to shader system..\n  checkUniformExists(name, group) {\n    if (group.uniforms[name])\n      return !0;\n    for (const i in group.uniforms) {\n      const uniform = group.uniforms[i];\n      if (uniform.group === !0 && this.checkUniformExists(name, uniform))\n        return !0;\n    }\n    return !1;\n  }\n  destroy() {\n    this.uniformGroup = null, this.disposeRunner.emit(this), this.disposeRunner.destroy();\n  }\n  /**\n   * Shader uniform values, shortcut for `uniformGroup.uniforms`.\n   * @readonly\n   */\n  get uniforms() {\n    return this.uniformGroup.uniforms;\n  }\n  /**\n   * A short hand function to create a shader based of a vertex and fragment shader.\n   * @param vertexSrc - The source of the vertex shader.\n   * @param fragmentSrc - The source of the fragment shader.\n   * @param uniforms - Custom uniforms to use to augment the built-in ones.\n   * @returns A shiny new PixiJS shader!\n   */\n  static from(vertexSrc, fragmentSrc, uniforms) {\n    const program = Program.Program.from(vertexSrc, fragmentSrc);\n    return new Shader(program, uniforms);\n  }\n}\nexports.Shader = Shader;\n//# sourceMappingURL=Shader.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","runner","Program","UniformGroup","Shader","constructor","program","uniforms","uniformBindCount","uniformGroup","disposeRunner","Runner","checkUniformExists","name","group","i","uniform","destroy","emit","from","vertexSrc","fragmentSrc"]
}
