{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SystemRunner.js",
"lineCount":43,
"mappings":"AAAAA,cAAA,CAAA,kFAAA,GAAuG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAI/I,OAAMC,aAAN;AAIEC,eAAW,CAACC,IAAD,CAAO;AAChB,UAAKC,CAAAA,KAAL,GAAa,EAAb;AACA,UAAKC,CAAAA,KAAL,GAAaF,IAAb;AAFgB;AAUlBG,QAAI,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,CAAiC;AACnC,YAAM,CAAEX,IAAF,EAAQC,KAAR,CAAA,GAAkB,IAAxB;AACA,WAAK,IAAIW,IAAI,CAAR,EAAWC,MAAMZ,KAAMa,CAAAA,MAA5B,EAAoCF,CAApC,GAAwCC,GAAxC,EAA6CD,CAAA,EAA7C;AACEX,aAAA,CAAMW,CAAN,CAAA,CAASZ,IAAT,CAAA,CAAeI,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,CAAA;AADF;AAGA,aAAO,IAAP;AALmC;AAyBrCI,OAAG,CAACC,IAAD,CAAO;AACJA,UAAA,CAAK,IAAKd,CAAAA,KAAV,CAAJ,KACE,IAAKe,CAAAA,MAAL,CAAYD,IAAZ,CACA,EAAA,IAAKf,CAAAA,KAAMiB,CAAAA,IAAX,CAAgBF,IAAhB,CAFF;AAIA,aAAO,IAAP;AALQ;AAWVC,UAAM,CAACD,IAAD,CAAO;AACLG,UAAAA,GAAQ,IAAKlB,CAAAA,KAAMmB,CAAAA,OAAX,CAAmBJ,IAAnB,CAARG;AACQ,OAAC,CAAf,KAAIA,IAAJ,IACE,IAAKlB,CAAAA,KAAMoB,CAAAA,MAAX,CAAkBF,IAAlB,EAAyB,CAAzB,CADF;AAGA,aAAO,IAAP;AALW;AAWbG,YAAQ,CAACN,IAAD,CAAO;AACb,aAAoC,CAAC,CAArC,KAAO,IAAKf,CAAAA,KAAMmB,CAAAA,OAAX,CAAmBJ,IAAnB,CAAP;AADa;AAIfO,aAAS,EAAG;AACV,UAAKtB,CAAAA,KAAMa,CAAAA,MAAX,GAAoB,CAApB;AACA,aAAO,IAAP;AAFU;AAKZU,WAAO,EAAG;AACR,UAAKD,CAAAA,SAAL,EAAA;AAEA,UAAKrB,CAAAA,KAAL,GADA,IAAKD,CAAAA,KACL,GADa,IACb;AAHQ;AASN,aAAQ,EAAA;AACV,aAA6B,CAA7B,KAAO,IAAKA,CAAAA,KAAMa,CAAAA,MAAlB;AADU;AAOR,YAAO,EAAA;AACT,aAAO,IAAKZ,CAAAA,KAAZ;AADS;AAtFb;AA2FAL,SAAQC,CAAAA,YAAR,GAAuBA,YAAvB;AA/F+I,CAA/I;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/system/SystemRunner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SystemRunner\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nclass SystemRunner {\n  /**\n   * @param name - The function name that will be executed on the listeners added to this Runner.\n   */\n  constructor(name) {\n    this.items = [];\n    this._name = name;\n  }\n  /* jsdoc/check-param-names */\n  /**\n   * Dispatch/Broadcast Runner to all listeners added to the queue.\n   * @param {...any} params - (optional) parameters to pass to each listener\n   */\n  /* jsdoc/check-param-names */\n  emit(a0, a1, a2, a3, a4, a5, a6, a7) {\n    const { name, items } = this;\n    for (let i = 0, len = items.length; i < len; i++) {\n      items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    return this;\n  }\n  /**\n   * Add a listener to the Runner\n   *\n   * Runners do not need to have scope or functions passed to them.\n   * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n   * as the name provided to the Runner when it was created.\n   *\n   * Eg A listener passed to this Runner will require a 'complete' function.\n   *\n   * ```\n   * import { Runner } from 'pixi.js';\n   *\n   * const complete = new Runner('complete');\n   * ```\n   *\n   * The scope used will be the object itself.\n   * @param {any} item - The object that will be listening.\n   */\n  add(item) {\n    if (item[this._name]) {\n      this.remove(item);\n      this.items.push(item);\n    }\n    return this;\n  }\n  /**\n   * Remove a single listener from the dispatch queue.\n   * @param {any} item - The listener that you would like to remove.\n   */\n  remove(item) {\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n    return this;\n  }\n  /**\n   * Check to see if the listener is already in the Runner\n   * @param {any} item - The listener that you would like to check.\n   */\n  contains(item) {\n    return this.items.indexOf(item) !== -1;\n  }\n  /** Remove all listeners from the Runner */\n  removeAll() {\n    this.items.length = 0;\n    return this;\n  }\n  /** Remove all references, don't use after this. */\n  destroy() {\n    this.removeAll();\n    this.items = null;\n    this._name = null;\n  }\n  /**\n   * `true` if there are no this Runner contains no listeners\n   * @readonly\n   */\n  get empty() {\n    return this.items.length === 0;\n  }\n  /**\n   * The name of the runner.\n   * @readonly\n   */\n  get name() {\n    return this._name;\n  }\n}\n\nexports.SystemRunner = SystemRunner;\n//# sourceMappingURL=SystemRunner.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","SystemRunner","constructor","name","items","_name","emit","a0","a1","a2","a3","a4","a5","a6","a7","i","len","length","add","item","remove","push","index","indexOf","splice","contains","removeAll","destroy"]
}
