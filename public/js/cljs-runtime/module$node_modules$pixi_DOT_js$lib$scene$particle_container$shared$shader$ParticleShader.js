shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$shader$ParticleShader = function(global, require, module, exports) {
  var Color = require("module$node_modules$pixi_DOT_js$lib$color$Color"), Matrix = require("module$node_modules$pixi_DOT_js$lib$maths$matrix$Matrix"), GlProgram = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$GlProgram"), GpuProgram = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$GpuProgram");
  global = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$Shader");
  var Texture = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$Texture"), TextureStyle = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$TextureStyle"), particles$1 = require("module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$shader$particles_frag"), particles = require("module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$shader$particles_vert"), particles$2 = require("module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$shader$particles_wgsl");
  "use strict";
  class ParticleShader extends global.Shader {
    constructor() {
      const glProgram = GlProgram.GlProgram.from({vertex:particles.default, fragment:particles$1.default}), gpuProgram = GpuProgram.GpuProgram.from({fragment:{source:particles$2.default, entryPoint:"mainFragment"}, vertex:{source:particles$2.default, entryPoint:"mainVertex"}});
      super({glProgram, gpuProgram, resources:{uTexture:Texture.Texture.WHITE.source, uSampler:new TextureStyle.TextureStyle({}), uniforms:{uTranslationMatrix:{value:new Matrix.Matrix(), type:"mat3x3\x3cf32\x3e"}, uColor:{value:new Color.Color(16777215), type:"vec4\x3cf32\x3e"}, uRound:{value:1, type:"f32"}, uResolution:{value:[0, 0], type:"vec2\x3cf32\x3e"}}}});
    }
  }
  exports.ParticleShader = ParticleShader;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$particle_container$shared$shader$ParticleShader.js.map
