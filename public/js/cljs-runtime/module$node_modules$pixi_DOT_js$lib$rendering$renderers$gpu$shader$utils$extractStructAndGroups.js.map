{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$extractStructAndGroups.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,+FAAA,GAAoH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA4C5JA,SAAQC,CAAAA,sBAAR,GAxCAA,QAA+B,CAACC,IAAD,CAAO;AAEpC,UAAMC,eAAe,iBAArB,EACMC,iBAAiB,mBADvB,EAEMC,cAAc,qBAFpB,EAGMC,cAAc,WAHpB,EAKMC,sBAAsB,wBAL5B,EAMMC,aAAa,gBANnB,EAOMC,SAASP,IAAKQ,CAAAA,KAAL,CARKC,wCAQL,CAAyBC,EAAAA,GAAzB,CAA8BC,IAAD,IAAW,EACrDC,MAAOC,QAAA,CAASF,IAAKH,CAAAA,KAAL,CAAWP,YAAX,CAAA,CAAyB,CAAzB,CAAT,EAAsC,EAAtC,CAD8C,EAErDa,QAASD,QAAA,CAASF,IAAKH,CAAAA,KAAL,CAAWN,cAAX,CAAA,CAA2B,CAA3B,CAAT,EAAwC,EAAxC,CAF4C,EAGrDa,KAAMJ,IAAKH,CAAAA,KAAL,CAAWL,WAAX,CAAA,CAAwB,CAAxB,CAH+C,EAIrDa,UAA0C,iBAA1CA,KAAWL,IAAKH,CAAAA,KAAL,CAAWL,WAAX,CAAA,CAAwB,CAAxB,CAJ0C,EAKrDc,KAAMN,IAAKH,CAAAA,KAAL,CAAWJ,WAAX,CAAA,CAAwB,CAAxB,CAL+C,EAAxC,CAPf;AAcA,QAAI,CAACG,MAAL;AACE,aAAO,CACLA,OAAQ,EADH,EAELW,QAAS,EAFJ,CAAP;AADF;AAMMA,QAAAA,GAAUlB,IAAKQ,CAAAA,KAAL,CAhBMW,6BAgBN,CAA2BT,EAAAA,GAA3B,CAAgCU,MAAD,IAAY;AACzD,YAAML,OAAOK,MAAOZ,CAAAA,KAAP,CAAaF,UAAb,CAAA,CAAyB,CAAzB,CAAb;AAMA,aAAA,CALMe,MAKN,GALgBD,MAAOZ,CAAAA,KAAP,CAAaH,mBAAb,CAAkCiB,CAAAA,MAAlC,CAAyC,CAACC,GAAD,EAAMC,MAAN,CAAA,IAAiB;AACxE,cAAM,CAACC,KAAD,EAAQR,IAAR,CAAA,GAAgBO,MAAOE,CAAAA,KAAP,CAAa,GAAb,CAAtB;AACAH,WAAA,CAAIE,KAAME,CAAAA,IAAN,EAAJ,CAAA,GAAoBV,IAAKU,CAAAA,IAAL,EAApB;AACA,eAAOJ,GAAP;AAHwE,OAA1D,EAIb,EAJa,CAKhB,IAGO,CAAER,IAAF,EAAQM,QAAAA,MAAR,CAHP,GACS,IADT;AAPyD,KAA3C,CAWbO,CAAAA,MAXa,CAWN,CAAC,CAAEb,IAAF,CAAD,CAAA,IAAcR,MAAOsB,CAAAA,IAAP,CAAajB,KAAD,IAAWA,KAAMK,CAAAA,IAAjB,KAA0BF,IAAtC,CAXR,CAAVG,IAWkE,EAXlEA;AAYN,WAAO,CACLX,MADK,EAELW,QAAAA,IAFK,CAAP;AAlCoC,GAwCtC;AA5C4J,CAA5J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/shader/utils/extractStructAndGroups.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$utils$extractStructAndGroups\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction extractStructAndGroups(wgsl) {\n  const linePattern = /(^|[^/])@(group|binding)\\(\\d+\\)[^;]+;/g;\n  const groupPattern = /@group\\((\\d+)\\)/;\n  const bindingPattern = /@binding\\((\\d+)\\)/;\n  const namePattern = /var(<[^>]+>)? (\\w+)/;\n  const typePattern = /:\\s*(\\w+)/;\n  const structPattern = /struct\\s+(\\w+)\\s*{([^}]+)}/g;\n  const structMemberPattern = /(\\w+)\\s*:\\s*([\\w\\<\\>]+)/g;\n  const structName = /struct\\s+(\\w+)/;\n  const groups = wgsl.match(linePattern)?.map((item) => ({\n    group: parseInt(item.match(groupPattern)[1], 10),\n    binding: parseInt(item.match(bindingPattern)[1], 10),\n    name: item.match(namePattern)[2],\n    isUniform: item.match(namePattern)[1] === \"<uniform>\",\n    type: item.match(typePattern)[1]\n  }));\n  if (!groups) {\n    return {\n      groups: [],\n      structs: []\n    };\n  }\n  const structs = wgsl.match(structPattern)?.map((struct) => {\n    const name = struct.match(structName)[1];\n    const members = struct.match(structMemberPattern).reduce((acc, member) => {\n      const [name2, type] = member.split(\":\");\n      acc[name2.trim()] = type.trim();\n      return acc;\n    }, {});\n    if (!members) {\n      return null;\n    }\n    return { name, members };\n  }).filter(({ name }) => groups.some((group) => group.type === name)) ?? [];\n  return {\n    groups,\n    structs\n  };\n}\n\nexports.extractStructAndGroups = extractStructAndGroups;\n//# sourceMappingURL=extractStructAndGroups.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","extractStructAndGroups","wgsl","groupPattern","bindingPattern","namePattern","typePattern","structMemberPattern","structName","groups","match","linePattern","map","item","group","parseInt","binding","name","isUniform","type","structs","structPattern","struct","members","reduce","acc","member","name2","split","trim","filter","some"]
}
