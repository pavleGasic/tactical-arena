{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$dom$DOMPipe.js",
"lineCount":70,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/dom/DOMPipe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$dom$DOMPipe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\n\n\"use strict\";\nclass DOMPipe {\n  /**\n   * Constructor for the DOMPipe class.\n   * @param renderer - The renderer instance that this DOMPipe will be associated with.\n   */\n  constructor(renderer) {\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    /** Array to keep track of attached DOM elements */\n    this._attachedDomElements = [];\n    this._renderer = renderer;\n    this._renderer.runners.postrender.add(this);\n    this._domElement = document.createElement(\"div\");\n    this._domElement.style.position = \"absolute\";\n    this._domElement.style.top = \"0\";\n    this._domElement.style.left = \"0\";\n    this._domElement.style.pointerEvents = \"none\";\n    this._domElement.style.zIndex = \"1000\";\n  }\n  /**\n   * Adds a renderable DOM container to the list of attached elements.\n   * @param domContainer - The DOM container to be added.\n   * @param _instructionSet - The instruction set (unused).\n   */\n  addRenderable(domContainer, _instructionSet) {\n    if (!this._attachedDomElements.includes(domContainer)) {\n      this._attachedDomElements.push(domContainer);\n      domContainer.on(\"destroyed\", this._destroyRenderableBound);\n    }\n  }\n  /**\n   * Updates a renderable DOM container.\n   * @param _domContainer - The DOM container to be updated (unused).\n   */\n  updateRenderable(_domContainer) {\n  }\n  /**\n   * Validates a renderable DOM container.\n   * @param _domContainer - The DOM container to be validated (unused).\n   * @returns Always returns true as validation is not required.\n   */\n  validateRenderable(_domContainer) {\n    return true;\n  }\n  /**\n   * Destroys a renderable DOM container, removing it from the list of attached elements.\n   * @param domContainer - The DOM container to be destroyed.\n   */\n  destroyRenderable(domContainer) {\n    const index = this._attachedDomElements.indexOf(domContainer);\n    if (index !== -1) {\n      this._attachedDomElements.splice(index, 1);\n    }\n    domContainer.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  /** Handles the post-rendering process, ensuring DOM elements are correctly positioned and visible. */\n  postrender() {\n    const attachedDomElements = this._attachedDomElements;\n    if (attachedDomElements.length === 0) {\n      this._domElement.remove();\n      return;\n    }\n    const canvas = this._renderer.view.canvas;\n    if (this._domElement.parentNode !== canvas.parentNode) {\n      canvas.parentNode?.appendChild(this._domElement);\n    }\n    this._domElement.style.transform = `translate(${canvas.offsetLeft}px, ${canvas.offsetTop}px)`;\n    for (let i = 0; i < attachedDomElements.length; i++) {\n      const domContainer = attachedDomElements[i];\n      const element = domContainer.element;\n      if (!domContainer.parent || domContainer.globalDisplayStatus < 7) {\n        element.remove();\n        attachedDomElements.splice(i, 1);\n        i--;\n      } else {\n        if (!this._domElement.contains(element)) {\n          element.style.position = \"absolute\";\n          element.style.pointerEvents = \"auto\";\n          this._domElement.appendChild(element);\n        }\n        const wt = domContainer.worldTransform;\n        const anchor = domContainer._anchor;\n        const ax = domContainer.width * anchor.x;\n        const ay = domContainer.height * anchor.y;\n        element.style.transformOrigin = `${ax}px ${ay}px`;\n        element.style.transform = `matrix(${wt.a}, ${wt.b}, ${wt.c}, ${wt.d}, ${wt.tx - ax}, ${wt.ty - ay})`;\n        element.style.opacity = domContainer.groupAlpha.toString();\n      }\n    }\n  }\n  /** Destroys the DOMPipe, removing all attached DOM elements and cleaning up resources. */\n  destroy() {\n    this._renderer.runners.postrender.remove(this);\n    for (let i = 0; i < this._attachedDomElements.length; i++) {\n      const domContainer = this._attachedDomElements[i];\n      domContainer.off(\"destroyed\", this._destroyRenderableBound);\n      domContainer.element.remove();\n    }\n    this._attachedDomElements.length = 0;\n    this._domElement.remove();\n    this._renderer = null;\n  }\n}\n/**\n * Static property defining the extension type and name for the DOMPipe.\n * This is used to register the DOMPipe with different rendering pipelines.\n */\nDOMPipe.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLPipes,\n    Extensions.ExtensionType.WebGPUPipes,\n    Extensions.ExtensionType.CanvasPipes\n  ],\n  name: \"dom\"\n};\n\nexports.DOMPipe = DOMPipe;\n//# sourceMappingURL=DOMPipe.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","DOMPipe","constructor","renderer","_destroyRenderableBound","destroyRenderable","bind","_attachedDomElements","_renderer","runners","postrender","add","_domElement","document","createElement","style","position","top","left","pointerEvents","zIndex","addRenderable","domContainer","_instructionSet","includes","push","on","updateRenderable","_domContainer","validateRenderable","index","indexOf","splice","off","attachedDomElements","length","remove","canvas","view","parentNode","appendChild","transform","offsetLeft","offsetTop","i","element","parent","globalDisplayStatus","contains","wt","worldTransform","anchor","_anchor","ax","width","x","ay","height","y","transformOrigin","a","b","c","d","tx","ty","opacity","groupAlpha","toString","destroy","extension","type","ExtensionType","WebGLPipes","WebGPUPipes","CanvasPipes","name"]
}
