{
"version":3,
"file":"module$node_modules$$pixi$graphics$lib$utils$QuadraticUtils.js",
"lineCount":31,
"mappings":"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",
"sources":["node_modules/@pixi/graphics/lib/utils/QuadraticUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$graphics$lib$utils$QuadraticUtils\"] = function(global,require,module,exports) {\n\"use strict\";\nvar _const = require(\"../const.js\");\nclass QuadraticUtils {\n  /**\n   * Calculate length of quadratic curve\n   * @see {@link http://www.malczak.linuxpl.com/blog/quadratic-bezier-curve-length/}\n   * for the detailed explanation of math behind this.\n   * @private\n   * @param fromX - x-coordinate of curve start point\n   * @param fromY - y-coordinate of curve start point\n   * @param cpX - x-coordinate of curve control point\n   * @param cpY - y-coordinate of curve control point\n   * @param toX - x-coordinate of curve end point\n   * @param toY - y-coordinate of curve end point\n   * @returns - Length of quadratic curve\n   */\n  static curveLength(fromX, fromY, cpX, cpY, toX, toY) {\n    const ax = fromX - 2 * cpX + toX, ay = fromY - 2 * cpY + toY, bx = 2 * cpX - 2 * fromX, by = 2 * cpY - 2 * fromY, a = 4 * (ax * ax + ay * ay), b = 4 * (ax * bx + ay * by), c = bx * bx + by * by, s = 2 * Math.sqrt(a + b + c), a2 = Math.sqrt(a), a32 = 2 * a * a2, c2 = 2 * Math.sqrt(c), ba = b / a2;\n    return (a32 * s + a2 * b * (s - c2) + (4 * c * a - b * b) * Math.log((2 * a2 + ba + s) / (ba + c2))) / (4 * a32);\n  }\n  /**\n   * Calculate the points for a quadratic bezier curve and then draws it.\n   * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n   * @private\n   * @param cpX - Control point x\n   * @param cpY - Control point y\n   * @param toX - Destination point x\n   * @param toY - Destination point y\n   * @param points - Points to add segments to.\n   */\n  static curveTo(cpX, cpY, toX, toY, points) {\n    const fromX = points[points.length - 2], fromY = points[points.length - 1], n = _const.curves._segmentsCount(\n      QuadraticUtils.curveLength(fromX, fromY, cpX, cpY, toX, toY)\n    );\n    let xa = 0, ya = 0;\n    for (let i = 1; i <= n; ++i) {\n      const j = i / n;\n      xa = fromX + (cpX - fromX) * j, ya = fromY + (cpY - fromY) * j, points.push(\n        xa + (cpX + (toX - cpX) * j - xa) * j,\n        ya + (cpY + (toY - cpY) * j - ya) * j\n      );\n    }\n  }\n}\nexports.QuadraticUtils = QuadraticUtils;\n//# sourceMappingURL=QuadraticUtils.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","QuadraticUtils","curveLength","fromX","fromY","cpX","cpY","toX","toY","ax","ay","bx","by","a","b","c","s","Math","sqrt","a2","a32","c2","ba","log","curveTo","points","length","n","curves","_segmentsCount","xa","ya","i","j","push"]
}
