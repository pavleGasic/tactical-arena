{
"version":3,
"file":"module$node_modules$$pixi$core$lib$shader$utils$generateUniformsSync.js",
"lineCount":42,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/shader/utils/generateUniformsSync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$shader$utils$generateUniformsSync\"] = function(global,require,module,exports) {\n\"use strict\";\nvar uniformParsers = require(\"./uniformParsers.js\");\nconst GLSL_TO_SINGLE_SETTERS_CACHED = {\n  float: `\n    if (cv !== v)\n    {\n        cu.value = v;\n        gl.uniform1f(location, v);\n    }`,\n  vec2: `\n    if (cv[0] !== v[0] || cv[1] !== v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n\n        gl.uniform2f(location, v[0], v[1])\n    }`,\n  vec3: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3f(location, v[0], v[1], v[2])\n    }`,\n  vec4: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n        cv[3] = v[3];\n\n        gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n    }`,\n  int: `\n    if (cv !== v)\n    {\n        cu.value = v;\n\n        gl.uniform1i(location, v);\n    }`,\n  ivec2: `\n    if (cv[0] !== v[0] || cv[1] !== v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n\n        gl.uniform2i(location, v[0], v[1]);\n    }`,\n  ivec3: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3i(location, v[0], v[1], v[2]);\n    }`,\n  ivec4: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n        cv[3] = v[3];\n\n        gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n    }`,\n  uint: `\n    if (cv !== v)\n    {\n        cu.value = v;\n\n        gl.uniform1ui(location, v);\n    }`,\n  uvec2: `\n    if (cv[0] !== v[0] || cv[1] !== v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n\n        gl.uniform2ui(location, v[0], v[1]);\n    }`,\n  uvec3: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3ui(location, v[0], v[1], v[2]);\n    }`,\n  uvec4: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n        cv[3] = v[3];\n\n        gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n    }`,\n  bool: `\n    if (cv !== v)\n    {\n        cu.value = v;\n        gl.uniform1i(location, v);\n    }`,\n  bvec2: `\n    if (cv[0] != v[0] || cv[1] != v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n\n        gl.uniform2i(location, v[0], v[1]);\n    }`,\n  bvec3: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3i(location, v[0], v[1], v[2]);\n    }`,\n  bvec4: `\n    if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n        cv[3] = v[3];\n\n        gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n    }`,\n  mat2: \"gl.uniformMatrix2fv(location, false, v)\",\n  mat3: \"gl.uniformMatrix3fv(location, false, v)\",\n  mat4: \"gl.uniformMatrix4fv(location, false, v)\",\n  sampler2D: `\n    if (cv !== v)\n    {\n        cu.value = v;\n\n        gl.uniform1i(location, v);\n    }`,\n  samplerCube: `\n    if (cv !== v)\n    {\n        cu.value = v;\n\n        gl.uniform1i(location, v);\n    }`,\n  sampler2DArray: `\n    if (cv !== v)\n    {\n        cu.value = v;\n\n        gl.uniform1i(location, v);\n    }`\n}, GLSL_TO_ARRAY_SETTERS = {\n  float: \"gl.uniform1fv(location, v)\",\n  vec2: \"gl.uniform2fv(location, v)\",\n  vec3: \"gl.uniform3fv(location, v)\",\n  vec4: \"gl.uniform4fv(location, v)\",\n  mat4: \"gl.uniformMatrix4fv(location, false, v)\",\n  mat3: \"gl.uniformMatrix3fv(location, false, v)\",\n  mat2: \"gl.uniformMatrix2fv(location, false, v)\",\n  int: \"gl.uniform1iv(location, v)\",\n  ivec2: \"gl.uniform2iv(location, v)\",\n  ivec3: \"gl.uniform3iv(location, v)\",\n  ivec4: \"gl.uniform4iv(location, v)\",\n  uint: \"gl.uniform1uiv(location, v)\",\n  uvec2: \"gl.uniform2uiv(location, v)\",\n  uvec3: \"gl.uniform3uiv(location, v)\",\n  uvec4: \"gl.uniform4uiv(location, v)\",\n  bool: \"gl.uniform1iv(location, v)\",\n  bvec2: \"gl.uniform2iv(location, v)\",\n  bvec3: \"gl.uniform3iv(location, v)\",\n  bvec4: \"gl.uniform4iv(location, v)\",\n  sampler2D: \"gl.uniform1iv(location, v)\",\n  samplerCube: \"gl.uniform1iv(location, v)\",\n  sampler2DArray: \"gl.uniform1iv(location, v)\"\n};\nfunction generateUniformsSync(group, uniformData) {\n  const funcFragments = [`\n        var v = null;\n        var cv = null;\n        var cu = null;\n        var t = 0;\n        var gl = renderer.gl;\n    `];\n  for (const i in group.uniforms) {\n    const data = uniformData[i];\n    if (!data) {\n      group.uniforms[i]?.group === !0 && (group.uniforms[i].ubo ? funcFragments.push(`\n                        renderer.shader.syncUniformBufferGroup(uv.${i}, '${i}');\n                    `) : funcFragments.push(`\n                        renderer.shader.syncUniformGroup(uv.${i}, syncData);\n                    `));\n      continue;\n    }\n    const uniform = group.uniforms[i];\n    let parsed = !1;\n    for (let j = 0; j < uniformParsers.uniformParsers.length; j++)\n      if (uniformParsers.uniformParsers[j].test(data, uniform)) {\n        funcFragments.push(uniformParsers.uniformParsers[j].code(i, uniform)), parsed = !0;\n        break;\n      }\n    if (!parsed) {\n      const template = (data.size === 1 && !data.isArray ? GLSL_TO_SINGLE_SETTERS_CACHED : GLSL_TO_ARRAY_SETTERS)[data.type].replace(\"location\", `ud[\"${i}\"].location`);\n      funcFragments.push(`\n            cu = ud[\"${i}\"];\n            cv = cu.value;\n            v = uv[\"${i}\"];\n            ${template};`);\n    }\n  }\n  return new Function(\"ud\", \"uv\", \"renderer\", \"syncData\", funcFragments.join(`\n`));\n}\nexports.generateUniformsSync = generateUniformsSync;\n//# sourceMappingURL=generateUniformsSync.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","uniformParsers","GLSL_TO_SINGLE_SETTERS_CACHED","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","samplerCube","sampler2DArray","GLSL_TO_ARRAY_SETTERS","generateUniformsSync","group","uniformData","funcFragments","i","uniforms","data","ubo","push","uniform","parsed","j","length","test","code","template","size","isArray","type","replace","Function","join"]
}
