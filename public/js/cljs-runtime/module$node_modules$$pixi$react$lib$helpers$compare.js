shadow$provide.module$node_modules$$pixi$react$lib$helpers$compare = function(global, require, module, exports) {
  function isArray(input) {
    return Array.isArray(input);
  }
  function isEqual(inputA, inputB, options = {arrays:"reference", objects:"reference", strict:!0}) {
    const {arrays, objects, strict} = options;
    if (typeof inputA !== typeof inputB || !!inputA !== !!inputB) {
      return !1;
    }
    if (isString(inputA) || isNumber(inputA) || (options = isObject(inputA)) && "reference" === objects) {
      return inputA === inputB;
    }
    const isInputAAnArray = isArray(inputA);
    if (isInputAAnArray && "reference" === arrays) {
      return inputA === inputB;
    }
    if ((isInputAAnArray || options) && inputA === inputB) {
      return !0;
    }
    let key;
    for (key in inputA) {
      if (!(key in inputB)) {
        return !1;
      }
    }
    let input = inputA;
    strict && (input = inputB);
    if (options && "shallow" === arrays && "shallow" === objects) {
      for (key in input) {
        if (!isEqual(inputA[key], inputB[key], {strict, objects:"reference"})) {
          return !1;
        }
      }
    } else {
      for (key in input) {
        if (inputA[key] !== inputB[key]) {
          return !1;
        }
      }
    }
    if (isUndefined(key)) {
      if (isInputAAnArray && 0 === inputA.length && 0 === inputB.length || options && 0 === Object.keys(inputA).length && 0 === Object.keys(inputB).length) {
        return !0;
      }
      if (inputA !== inputB) {
        return !1;
      }
    }
    return !0;
  }
  function isNumber(input) {
    return "number" === typeof input;
  }
  function isObject(input) {
    return input !== Object(input) || isArray(input) || "function" === typeof input ? !1 : !0;
  }
  function isString(input) {
    return "string" === typeof input;
  }
  function isUndefined(input) {
    return void 0 === input;
  }
  exports.isArray = isArray;
  exports.isBoolean = function(input) {
    return "boolean" === typeof input;
  };
  exports.isEqual = isEqual;
  exports.isFunction = function(input) {
    return "function" === typeof input;
  };
  exports.isNull = function(input) {
    return null === input;
  };
  exports.isNumber = isNumber;
  exports.isObject = isObject;
  exports.isString = isString;
  exports.isUndefined = isUndefined;
};

//# sourceMappingURL=module$node_modules$$pixi$react$lib$helpers$compare.js.map
