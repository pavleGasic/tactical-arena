{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$loader$parsers$loadTxt.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,GAAgF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAEpHC,OAAOH,OAAA,CAAQ,0CAAR,CAF6G,EAEtFI,eAAeJ,OAAA,CAAQ,yDAAR,CAFuE,EAE/BK,iBAAiBL,OAAA,CAAQ,2DAAR,CAFc;AAE4BM,QAAAA,GAAeN,OAAA,CAAQ,kEAAR,CAAfM;AACrFC,QAAAA,GAAU,CACvEC,KAAM,SADiE,EAEvEC,UAAW,CACTC,KAAMP,IAAKQ,CAAAA,aAAcC,CAAAA,UADhB,EAETC,SAAUP,MAAaQ,CAAAA,oBAAqBC,CAAAA,GAFnC,CAF4D,EAMvEC,IAAI,CAACC,GAAD,CAAM;AACR,WAAOb,YAAaA,CAAAA,YAAb,CAA0Ba,GAA1B,EAPsCC,YAOtC,CAAP,IAAuDb,cAAeA,CAAAA,cAAf,CAA8BY,GAA9B,EAPjCE,MAOiC,CAAvD;AADQ,GAN6D,EASjEC,UAAI,CAACH,GAAD,CAAM;AACd,WAAO,MAA+CI,CAAxC,MAAMlB,IAAKmB,CAAAA,QAASC,CAAAA,OAAQC,CAAAA,KAAtB,CAA4BP,GAA5B,CAAkCI,EAAAA,IAAzC,EAAb;AADc,GATuD,CAAVd;AAa/DJ,MAAKsB,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBnB,MAApB,CAAA;AACAL,SAAQK,CAAAA,OAAR,GAAkBA,MAAlB;AAjBwH,CAAxH;;",
"sources":["node_modules/@pixi/assets/lib/loader/parsers/loadTxt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$loader$parsers$loadTxt\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), checkDataUrl = require(\"../../utils/checkDataUrl.js\"), checkExtension = require(\"../../utils/checkExtension.js\"), LoaderParser = require(\"./LoaderParser.js\");\nconst validTXTExtension = \".txt\", validTXTMIME = \"text/plain\", loadTxt = {\n  name: \"loadTxt\",\n  extension: {\n    type: core.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.Low\n  },\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validTXTMIME) || checkExtension.checkExtension(url, validTXTExtension);\n  },\n  async load(url) {\n    return await (await core.settings.ADAPTER.fetch(url)).text();\n  }\n};\ncore.extensions.add(loadTxt);\nexports.loadTxt = loadTxt;\n//# sourceMappingURL=loadTxt.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","checkDataUrl","checkExtension","LoaderParser","loadTxt","name","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","Low","test","url","validTXTMIME","validTXTExtension","load","text","settings","ADAPTER","fetch","extensions","add"]
}
