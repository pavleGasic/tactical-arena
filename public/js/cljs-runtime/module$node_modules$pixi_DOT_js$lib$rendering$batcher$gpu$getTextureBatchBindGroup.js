shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$batcher$gpu$getTextureBatchBindGroup = function(global, require, module, exports) {
  var BindGroup = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$shader$BindGroup"), Texture = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$Texture"), maxRecommendedTextures = require("module$node_modules$pixi_DOT_js$lib$rendering$batcher$gl$utils$maxRecommendedTextures");
  "use strict";
  const cachedGroups = {};
  let maxTextures = 0;
  exports.getTextureBatchBindGroup = function(textures, size) {
    var uid = 2166136261;
    for (var i$jscomp$0 = 0; i$jscomp$0 < size; i$jscomp$0++) {
      uid ^= textures[i$jscomp$0].uid, uid = Math.imul(uid, 16777619), uid >>>= 0;
    }
    if (!(i$jscomp$0 = cachedGroups[uid])) {
      i$jscomp$0 = {};
      let bindIndex = 0;
      maxTextures || (maxTextures = maxRecommendedTextures.getMaxTexturesPerBatch());
      for (let i = 0; i < maxTextures; i++) {
        const texture = i < size ? textures[i] : Texture.Texture.EMPTY.source;
        i$jscomp$0[bindIndex++] = texture.source;
        i$jscomp$0[bindIndex++] = texture.style;
      }
      textures = new BindGroup.BindGroup(i$jscomp$0);
      i$jscomp$0 = cachedGroups[uid] = textures;
    }
    return i$jscomp$0;
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$batcher$gpu$getTextureBatchBindGroup.js.map
