{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$BackgroundLoader.js",
"lineCount":38,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,GAA0E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAElH,OAAMC,iBAAN;AAKEC,eAAW,CAACC,MAAD,EAASC,OAAA,GAAU,CAAA,CAAnB,CAAuB;AAChC,UAAKC,CAAAA,OAAL,GAAeF,MAAf;AAAuB,UAAKG,CAAAA,UAAL,GAAkB,EAAlB;AAAsB,UAAKC,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AAAsB,UAAKC,CAAAA,cAAL,GAAsB,CAAtB;AAAyB,UAAKJ,CAAAA,OAAL,GAAeA,OAAf;AAD5D;AAOlCK,OAAG,CAACC,SAAD,CAAY;AACbA,eAAUC,CAAAA,OAAV,CAAmBC,CAAD,IAAO;AACvB,YAAKN,CAAAA,UAAWO,CAAAA,IAAhB,CAAqBD,CAArB,CAAA;AADuB,OAAzB,CAAA;AAEI,UAAKR,CAAAA,OAAL,IAAgBU,OAAQC,CAAAA,GAAR,CAAY,6BAAZ,EAA2C,IAAKT,CAAAA,UAAhD,CAAhB;AAA6E,UAAKU,CAAAA,SAAL,IAAkB,CAAC,IAAKT,CAAAA,UAAxB,IAAsC,IAAKU,CAAAA,KAAL,EAAtC;AAHpE;AAUTA,eAAK,EAAG;AACZ,UAAI,IAAKX,CAAAA,UAAWY,CAAAA,MAApB,IAA8B,IAAKF,CAAAA,SAAnC,CAA8C;AAC5C,YAAKT,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AAD4C,cAEtCY,SAAS,EAF6B,EAEzBC,eAAeC,IAAKC,CAAAA,GAAL,CAAS,IAAKhB,CAAAA,UAAWY,CAAAA,MAAzB,EAAiC,IAAKV,CAAAA,cAAtC,CAFU;AAG5C,aAAK,IAAIe,IAAI,CAAb,EAAgBA,CAAhB,GAAoBH,YAApB,EAAkCG,CAAA,EAAlC;AACEJ,gBAAON,CAAAA,IAAP,CAAY,IAAKP,CAAAA,UAAWkB,CAAAA,GAAhB,EAAZ,CAAA;AADF;AAEA,cAAM,IAAKnB,CAAAA,OAAQoB,CAAAA,IAAb,CAAkBN,MAAlB,CAAN;AAAiC,YAAKZ,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AAAsB,YAAKU,CAAAA,KAAL,EAAA;AALX;AADlC;AAaV,cAAS,EAAA;AACX,aAAO,IAAKD,CAAAA,SAAZ;AADW;AAGT,cAAM,CAACU,KAAD,CAAQ;AAChB,UAAKV,CAAAA,SAAL,KAAmBU,KAAnB,KAA6B,IAAKV,CAAAA,SAAL,GAAiBU,KAAjB,EAAwBA,KAAxB,IAAiC,CAAC,IAAKnB,CAAAA,UAAvC,IAAqD,IAAKU,CAAAA,KAAL,EAAlF;AADgB;AAtCpB;AA0CAjB,SAAQC,CAAAA,gBAAR,GAA2BA,gBAA3B;AA5CkH,CAAlH;;",
"sources":["node_modules/@pixi/assets/lib/BackgroundLoader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$BackgroundLoader\"] = function(global,require,module,exports) {\n\"use strict\";\nclass BackgroundLoader {\n  /**\n   * @param loader\n   * @param verbose - should the loader log to the console\n   */\n  constructor(loader, verbose = !1) {\n    this._loader = loader, this._assetList = [], this._isLoading = !1, this._maxConcurrent = 1, this.verbose = verbose;\n  }\n  /**\n   * Adds an array of assets to load.\n   * @param assetUrls - assets to load\n   */\n  add(assetUrls) {\n    assetUrls.forEach((a) => {\n      this._assetList.push(a);\n    }), this.verbose && console.log(\"[BackgroundLoader] assets: \", this._assetList), this._isActive && !this._isLoading && this._next();\n  }\n  /**\n   * Loads the next set of assets. Will try to load as many assets as it can at the same time.\n   *\n   * The max assets it will try to load at one time will be 4.\n   */\n  async _next() {\n    if (this._assetList.length && this._isActive) {\n      this._isLoading = !0;\n      const toLoad = [], toLoadAmount = Math.min(this._assetList.length, this._maxConcurrent);\n      for (let i = 0; i < toLoadAmount; i++)\n        toLoad.push(this._assetList.pop());\n      await this._loader.load(toLoad), this._isLoading = !1, this._next();\n    }\n  }\n  /**\n   * Activate/Deactivate the loading. If set to true then it will immediately continue to load the next asset.\n   * @returns whether the class is active\n   */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    this._isActive !== value && (this._isActive = value, value && !this._isLoading && this._next());\n  }\n}\nexports.BackgroundLoader = BackgroundLoader;\n//# sourceMappingURL=BackgroundLoader.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","BackgroundLoader","constructor","loader","verbose","_loader","_assetList","_isLoading","_maxConcurrent","add","assetUrls","forEach","a","push","console","log","_isActive","_next","length","toLoad","toLoadAmount","Math","min","i","pop","load","value"]
}
