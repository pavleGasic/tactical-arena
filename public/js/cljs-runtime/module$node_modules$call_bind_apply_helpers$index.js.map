{
"version":3,
"file":"module$node_modules$call_bind_apply_helpers$index.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,GAAsE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9G,MAAIC,OAAOH,OAAA,CAAQ,yCAAR,CAAX,EACII,aAAaJ,OAAA,CAAQ,oCAAR,CADjB,EAGIK,QAAQL,OAAA,CAAQ,0DAAR,CAHZ,EAIIM,eAAeN,OAAA,CAAQ,yDAAR,CAJnB;AAOAC,QAAOC,CAAAA,OAAP,GAAiBK,QAAsB,CAACC,IAAD,CAAO;AAC7C,QAAkB,CAAlB,GAAIA,IAAKC,CAAAA,MAAT,IAA0C,UAA1C,KAAuB,MAAOD,KAAA,CAAK,CAAL,CAA9B;AACC,YAAM,IAAIJ,UAAJ,CAAe,wBAAf,CAAN;AADD;AAGA,WAAOE,YAAA,CAAaH,IAAb,EAAmBE,KAAnB,EAA0BG,IAA1B,CAAP;AAJ6C,GAA9C;AAV8G,CAA9G;;",
"sources":["node_modules/call-bind-apply-helpers/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$call_bind_apply_helpers$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","bind","$TypeError","$call","$actualApply","module.exports","args","length"]
}
