{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$_virtual$loadImageBitmap_worker.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,GAAwF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAAA;AAGA,MAAIC,aAAa,IAAjB;AACA,OAAMC,eAAN;AAEIC,eAAW,EACX;AACSF,gBAAL,KAEIA,UAFJ,GAEiBG,GAAIC,CAAAA,eAAJ,CAAoB,IAAIC,IAAJ,CAAS,CARlCC,g+BAQkC,CAAT;AAAwB,OAAEC,KAAM,wBAAR,CAAxB,CAApB,CAFjB;AAIA,UAAKC,CAAAA,MAAL,GAAc,IAAIC,MAAJ,CAAWT,UAAX,CAAd;AALJ;AAHJ;AAWAC,gBAAeS,CAAAA,eAAf,GAAiCC,QAAwB,EACzD;AACQX,cAAJ,KAEIG,GAAIO,CAAAA,eAAJ,CAAoBV,UAApB,CACA,EAAAA,UAAA,GAAa,IAHjB;AADJ,GADA;AASAJ,SAAQgB,CAAAA,OAAR,GAAkBX,cAAlB;AA3BgI,CAAhI;;",
"sources":["node_modules/pixi_DOT_js/lib/_virtual/loadImageBitmap.worker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$_virtual$loadImageBitmap_worker\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst WORKER_CODE = \"(function () {\\n    'use strict';\\n\\n    async function loadImageBitmap(url, alphaMode) {\\n      const response = await fetch(url);\\n      if (!response.ok) {\\n        throw new Error(`[WorkerManager.loadImageBitmap] Failed to fetch ${url}: ${response.status} ${response.statusText}`);\\n      }\\n      const imageBlob = await response.blob();\\n      return alphaMode === \\\"premultiplied-alpha\\\" ? createImageBitmap(imageBlob, { premultiplyAlpha: \\\"none\\\" }) : createImageBitmap(imageBlob);\\n    }\\n    self.onmessage = async (event) => {\\n      try {\\n        const imageBitmap = await loadImageBitmap(event.data.data[0], event.data.data[1]);\\n        self.postMessage({\\n          data: imageBitmap,\\n          uuid: event.data.uuid,\\n          id: event.data.id\\n        }, [imageBitmap]);\\n      } catch (e) {\\n        self.postMessage({\\n          error: e,\\n          uuid: event.data.uuid,\\n          id: event.data.id\\n        });\\n      }\\n    };\\n\\n})();\\n\";\nlet WORKER_URL = null;\nclass WorkerInstance\n{\n    constructor()\n    {\n        if (!WORKER_URL)\n        {\n            WORKER_URL = URL.createObjectURL(new Blob([WORKER_CODE], { type: 'application/javascript' }));\n        }\n        this.worker = new Worker(WORKER_URL);\n    }\n}\nWorkerInstance.revokeObjectURL = function revokeObjectURL()\n{\n    if (WORKER_URL)\n    {\n        URL.revokeObjectURL(WORKER_URL);\n        WORKER_URL = null;\n    }\n};\n\nexports.default = WorkerInstance;\n//# sourceMappingURL=loadImageBitmap.worker.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WORKER_URL","WorkerInstance","constructor","URL","createObjectURL","Blob","WORKER_CODE","type","worker","Worker","revokeObjectURL","WorkerInstance.revokeObjectURL","default"]
}
