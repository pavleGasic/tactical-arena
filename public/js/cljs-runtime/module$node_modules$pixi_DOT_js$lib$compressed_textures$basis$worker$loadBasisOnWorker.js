shadow$provide.module$node_modules$pixi_DOT_js$lib$compressed_textures$basis$worker$loadBasisOnWorker = function(global, require, module, exports) {
  function getBasisWorker(supportedTextures) {
    basisWorker || (basisWorker = (new basis_worker.default()).worker, basisWorker.onmessage = messageEvent => {
      const {success, url, textureOptions} = messageEvent.data;
      success || console.warn("Failed to load Basis texture", url);
      urlHash[url](textureOptions);
    }, basisWorker.postMessage({type:"init", jsUrl:setBasisTranscoderPath.basisTranscoderUrls.jsUrl, wasmUrl:setBasisTranscoderPath.basisTranscoderUrls.wasmUrl, supportedTextures}));
    return basisWorker;
  }
  var basis_worker = require("module$node_modules$pixi_DOT_js$lib$_virtual$basis_worker"), setBasisTranscoderPath = require("module$node_modules$pixi_DOT_js$lib$compressed_textures$basis$utils$setBasisTranscoderPath");
  "use strict";
  let basisWorker;
  const urlHash = {};
  exports.loadBasisOnWorker = function(url, supportedTextures) {
    const ktxWorker = getBasisWorker(supportedTextures);
    return new Promise(resolve => {
      urlHash[url] = resolve;
      ktxWorker.postMessage({type:"load", url});
    });
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$compressed_textures$basis$worker$loadBasisOnWorker.js.map
