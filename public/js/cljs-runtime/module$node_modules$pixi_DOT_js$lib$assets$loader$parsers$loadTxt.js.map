{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$assets$loader$parsers$loadTxt.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,GAAsF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9H,MAAIC,UAAUH,OAAA,CAAQ,yDAAR,CAAd;AACII,QAAAA,GAAaJ,OAAA,CAAQ,2DAAR,CAAbI;AACJ,MAAIC,eAAeL,OAAA,CAAQ,+DAAR,CAAnB,EACIM,iBAAiBN,OAAA,CAAQ,iEAAR,CADrB;AAEIO,SAAAA,GAAeP,OAAA,CAAQ,wEAAR,CAAfO;AAEJ,cAAA;AAoBAL,SAAQM,CAAAA,OAAR,GAjBgBA,CACdC,KAAM,SADQD,EAEdE,UAAW,CACTC,KAAMP,MAAWQ,CAAAA,aAAcC,CAAAA,UADtB,EAETC,SAAUP,OAAaQ,CAAAA,oBAAqBC,CAAAA,GAFnC,EAGTP,KAAM,SAHG,CAFGD,EAOdS,IAAI,CAACC,GAAD,CAAM;AACR,WAAOb,YAAaA,CAAAA,YAAb,CAA0Ba,GAA1B,EATUC,YASV,CAAP,IAAuDb,cAAeA,CAAAA,cAAf,CAA8BY,GAA9B,EAVjCE,MAUiC,CAAvD;AADQ,GAPIZ,EAURa,UAAI,CAACH,GAAD,CAAM;AAGd,WADYI,MAAeC,CADVC,MAAMrB,OAAQsB,CAAAA,UAAWC,CAAAA,GAAnB,EAAyBC,CAAAA,KAAzB,CAA+BT,GAA/B,CACIK,EAAAA,IAAT,EAClB;AAHc,GAVFf,CAiBhB;AA7B8H,CAA9H;;",
"sources":["node_modules/pixi_DOT_js/lib/assets/loader/parsers/loadTxt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$assets$loader$parsers$loadTxt\"] = function(global,require,module,exports) {\n'use strict';\n\nvar adapter = require('../../../environment/adapter.js');\nvar Extensions = require('../../../extensions/Extensions.js');\nvar checkDataUrl = require('../../utils/checkDataUrl.js');\nvar checkExtension = require('../../utils/checkExtension.js');\nvar LoaderParser = require('./LoaderParser.js');\n\n\"use strict\";\nconst validTXTExtension = \".txt\";\nconst validTXTMIME = \"text/plain\";\nconst loadTxt = {\n  name: \"loadTxt\",\n  extension: {\n    type: Extensions.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.Low,\n    name: \"loadTxt\"\n  },\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validTXTMIME) || checkExtension.checkExtension(url, validTXTExtension);\n  },\n  async load(url) {\n    const response = await adapter.DOMAdapter.get().fetch(url);\n    const txt = await response.text();\n    return txt;\n  }\n};\n\nexports.loadTxt = loadTxt;\n//# sourceMappingURL=loadTxt.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","adapter","Extensions","checkDataUrl","checkExtension","LoaderParser","loadTxt","name","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","Low","test","url","validTXTMIME","validTXTExtension","load","txt","text","response","DOMAdapter","get","fetch"]
}
