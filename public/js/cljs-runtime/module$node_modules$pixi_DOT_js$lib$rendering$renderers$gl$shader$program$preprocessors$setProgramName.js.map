{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$preprocessors$setProgramName.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAA,sGAAA,GAA2H,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAInK,QAAMC,oBAAoB,EAA1B,EACMC,kBAAkB,EADxB;AAmBAF,SAAQG,CAAAA,cAAR,GAjBAA,QAAuB,CAACC,GAAD,EAAM,CAAEC,IAAA,GAAQ,cAAV,CAAN,EAAiCC,UAAA,GAAa,CAAA,CAA9C,CAAoD;AACzED,QAAA,GAAOA,IAAKE,CAAAA,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACAF,QAAA,IAAQC,UAAA,GAAa,WAAb,GAA2B,SAAnC;AACME,cAAAA,GAAYF,UAAA,GAAaL,iBAAb,GAAiCC,eAA7CM;AACFA,cAAA,CAAUH,IAAV,CAAJ,IACEG,UAAA,CAAUH,IAAV,CAAA,EACA,EAAAA,IAAA,IAAS,IAAGG,UAAA,CAAUH,IAAV,CAAH,EAFX,IAIEG,UAAA,CAAUH,IAAV,CAJF,GAIoB,CAJpB;AAMA,WAA2C,CAAC,CAA5C,KAAID,GAAIK,CAAAA,OAAJ,CAAY,qBAAZ,CAAJ,GACSL,GADT,GAGQ,GADYM,uBAAsBL,IAAtBK,EACZ;EACRN,GADQ,EAHR;AAVyE,GAiB3E;AAvBmK,CAAnK;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/program/preprocessors/setProgramName.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$preprocessors$setProgramName\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst fragmentNameCache = {};\nconst VertexNameCache = {};\nfunction setProgramName(src, { name = `pixi-program` }, isFragment = true) {\n  name = name.replace(/\\s+/g, \"-\");\n  name += isFragment ? \"-fragment\" : \"-vertex\";\n  const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n  if (nameCache[name]) {\n    nameCache[name]++;\n    name += `-${nameCache[name]}`;\n  } else {\n    nameCache[name] = 1;\n  }\n  if (src.indexOf(\"#define SHADER_NAME\") !== -1)\n    return src;\n  const shaderName = `#define SHADER_NAME ${name}`;\n  return `${shaderName}\n${src}`;\n}\n\nexports.setProgramName = setProgramName;\n//# sourceMappingURL=setProgramName.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","fragmentNameCache","VertexNameCache","setProgramName","src","name","isFragment","replace","nameCache","indexOf","shaderName"]
}
