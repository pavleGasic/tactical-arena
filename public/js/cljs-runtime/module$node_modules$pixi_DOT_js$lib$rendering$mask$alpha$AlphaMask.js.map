{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$mask$alpha$AlphaMask.js",
"lineCount":42,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,GAAuF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG3HC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,SAASJ,OAAA,CAAQ,yDAAR,CAAb,EACIK,gBAAgBL,OAAA,CAAQ,wEAAR,CADpB,EAEIM,qBAAqBN,OAAA,CAAQ,6EAAR,CAFzB;AAIA,cAAA;AACA,OAAMO,UAAN;AACEC,eAAW,CAACC,OAAD,CAAU;AACnB,UAAKC,CAAAA,QAAL,GAAgB,CAAhB;AACA,UAAKC,CAAAA,OAAL,GAAe,CAAA,CAAf;AACA,UAAKC,CAAAA,IAAL,GAAY,WAAZ;AACIH,aAASI,EAAAA,IAAb,IACE,IAAKC,CAAAA,IAAL,CAAUL,OAAQI,CAAAA,IAAlB,CADF;AAJmB;AAQrBC,QAAI,CAACD,IAAD,CAAO;AACT,UAAKA,CAAAA,IAAL,GAAYA,IAAZ;AACA,UAAKE,CAAAA,mBAAL,GAA2B,EAAEF,IAAF,YAAkBT,MAAOA,CAAAA,MAAzB,CAA3B;AACA,UAAKS,CAAAA,IAAKG,CAAAA,UAAV,GAAuB,IAAKD,CAAAA,mBAA5B;AACA,UAAKF,CAAAA,IAAKI,CAAAA,cAAV,GAA2B,CAAC,IAAKF,CAAAA,mBAAjC;AACA,UAAKF,CAAAA,IAAKK,CAAAA,UAAV,GAAuB,CAAA,CAAvB;AALS;AAOXC,SAAK,EAAG;AACN,UAAKN,CAAAA,IAAKK,CAAAA,UAAV,GAAuB,CAAA,CAAvB;AACA,UAAKL,CAAAA,IAAL,GAAY,IAAZ;AAFM;AAIRO,aAAS,CAACC,MAAD,EAASC,mBAAT,CAA8B;AAChC,UAAKX,CAAAA,OAAV,IACEN,aAAcA,CAAAA,aAAd,CAA4B,IAAKQ,CAAAA,IAAjC,EAAuCQ,MAAvC,EAA+CC,mBAA/C,CADF;AADqC;AAKvCC,kBAAc,CAACF,MAAD,EAASG,SAAT,CAAoB;AAChClB,wBAAmBA,CAAAA,kBAAnB,CAAsC,IAAKO,CAAAA,IAA3C,EAAiDQ,MAAjD,EAAyDG,SAAzD,CAAA;AADgC;AAGlCC,iBAAa,CAACC,KAAD,EAAQC,SAAR,CAAmB;AAE9B,aAAOA,SAAA,CADM,IAAKd,CAAAA,IACX,EAAgBa,KAAhB,CAAP;AAF8B;AAIhCE,WAAO,EAAG;AACR,UAAKT,CAAAA,KAAL,EAAA;AADQ;AAGHU,eAAI,CAAChB,IAAD,CAAO;AAChB,aAAOA,IAAP,YAAuBT,MAAOA,CAAAA,MAA9B;AADgB;AAnCpB;AAuCAG,WAAUuB,CAAAA,SAAV,GAAsB3B,MAAW4B,CAAAA,aAAcC,CAAAA,UAA/C;AAEA9B,SAAQK,CAAAA,SAAR,GAAoBA,SAApB;AAlD+H,CAA/H;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/mask/alpha/AlphaMask.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$mask$alpha$AlphaMask\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Sprite = require('../../../scene/sprite/Sprite.js');\nvar addMaskBounds = require('../utils/addMaskBounds.js');\nvar addMaskLocalBounds = require('../utils/addMaskLocalBounds.js');\n\n\"use strict\";\nclass AlphaMask {\n  constructor(options) {\n    this.priority = 0;\n    this.inverse = false;\n    this.pipe = \"alphaMask\";\n    if (options?.mask) {\n      this.init(options.mask);\n    }\n  }\n  init(mask) {\n    this.mask = mask;\n    this.renderMaskToTexture = !(mask instanceof Sprite.Sprite);\n    this.mask.renderable = this.renderMaskToTexture;\n    this.mask.includeInBuild = !this.renderMaskToTexture;\n    this.mask.measurable = false;\n  }\n  reset() {\n    this.mask.measurable = true;\n    this.mask = null;\n  }\n  addBounds(bounds, skipUpdateTransform) {\n    if (!this.inverse) {\n      addMaskBounds.addMaskBounds(this.mask, bounds, skipUpdateTransform);\n    }\n  }\n  addLocalBounds(bounds, localRoot) {\n    addMaskLocalBounds.addMaskLocalBounds(this.mask, bounds, localRoot);\n  }\n  containsPoint(point, hitTestFn) {\n    const mask = this.mask;\n    return hitTestFn(mask, point);\n  }\n  destroy() {\n    this.reset();\n  }\n  static test(mask) {\n    return mask instanceof Sprite.Sprite;\n  }\n}\nAlphaMask.extension = Extensions.ExtensionType.MaskEffect;\n\nexports.AlphaMask = AlphaMask;\n//# sourceMappingURL=AlphaMask.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Sprite","addMaskBounds","addMaskLocalBounds","AlphaMask","constructor","options","priority","inverse","pipe","mask","init","renderMaskToTexture","renderable","includeInBuild","measurable","reset","addBounds","bounds","skipUpdateTransform","addLocalBounds","localRoot","containsPoint","point","hitTestFn","destroy","test","extension","ExtensionType","MaskEffect"]
}
