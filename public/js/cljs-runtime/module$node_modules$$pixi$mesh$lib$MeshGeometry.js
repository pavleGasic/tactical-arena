shadow$provide.module$node_modules$$pixi$mesh$lib$MeshGeometry = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index");
  class MeshGeometry extends core.Geometry {
    constructor(vertices, uvs, index) {
      super();
      vertices = new core.Buffer(vertices);
      uvs = new core.Buffer(uvs, !0);
      index = new core.Buffer(index, !0, !0);
      this.addAttribute("aVertexPosition", vertices, 2, !1, core.TYPES.FLOAT).addAttribute("aTextureCoord", uvs, 2, !1, core.TYPES.FLOAT).addIndex(index);
      this._updateId = -1;
    }
    get vertexDirtyId() {
      return this.buffers[0]._updateID;
    }
  }
  exports.MeshGeometry = MeshGeometry;
};

//# sourceMappingURL=module$node_modules$$pixi$mesh$lib$MeshGeometry.js.map
