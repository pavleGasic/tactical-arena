{
"version":3,
"file":"module$node_modules$side_channel$index.js",
"lineCount":24,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,GAA2D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGnG,MAAIC,aAAaH,OAAA,CAAQ,oCAAR,CAAjB,EACII,UAAUJ,OAAA,CAAQ,0CAAR,CADd;AAEIK,QAAAA,GAAqBL,OAAA,CAAQ,6CAAR,CAArBK;AACAC,SAAAA,GAAoBN,OAAA,CAAQ,4CAAR,CAApBM;AAGJ,MAAIC,cAFwBP,OAAAQ,CAAQ,gDAARA,CAExBD,IAAuCD,OAAvCC,IAA4DF,MAAhE;AAGAJ,QAAOC,CAAAA,OAAP,GAAiBO,QAAuB,EAAG;AAGP,QAAIC,YAAJ,EAG/BC,UAAU,CACbC,OAAQA,QAAS,CAACC,GAAD,CAAM;AACtB,UAAI,CAACF,OAAQG,CAAAA,GAAR,CAAYD,GAAZ,CAAL;AACC,cAAM,IAAIV,UAAJ,CAAe,gCAAf,GAAkDC,OAAA,CAAQS,GAAR,CAAlD,CAAN;AADD;AADsB,KADV,EAMb,SAAUE,QAAS,CAACF,GAAD,CAAM;AACxB,aAAO,CAAC,CAACH,YAAT,IAAyBA,YAAA,CAAa,QAAb,CAAA,CAAuBG,GAAvB,CAAzB;AADwB,KANZ,EASbG,IAAKA,QAAS,CAACH,GAAD,CAAM;AACnB,aAAOH,YAAP,IAAuBA,YAAaM,CAAAA,GAAb,CAAiBH,GAAjB,CAAvB;AADmB,KATP,EAYbC,IAAKA,QAAS,CAACD,GAAD,CAAM;AACnB,aAAO,CAAC,CAACH,YAAT,IAAyBA,YAAaI,CAAAA,GAAb,CAAiBD,GAAjB,CAAzB;AADmB,KAZP,EAebI,IAAKA,QAAS,CAACJ,GAAD,EAAMK,KAAN,CAAa;AACrBR,kBAAL,KACCA,YADD,GACgBH,WAAA,EADhB;AAIAG,kBAAaO,CAAAA,GAAb,CAAiBJ,GAAjB,EAAsBK,KAAtB,CAAA;AAL0B,KAfd,CAHqB;AA2BnC,WAAOP,OAAP;AA9B0C,GAA3C;AAZmG,CAAnG;;",
"sources":["node_modules/side-channel/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$side_channel$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","$TypeError","inspect","getSideChannelList","getSideChannelMap","makeChannel","getSideChannelWeakMap","module.exports","$channelData","channel","assert","key","has","delete","get","set","value"]
}
