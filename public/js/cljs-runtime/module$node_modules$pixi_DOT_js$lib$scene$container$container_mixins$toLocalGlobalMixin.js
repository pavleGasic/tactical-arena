shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$container$container_mixins$toLocalGlobalMixin = function(global, require, module, exports) {
  var Point = require("module$node_modules$pixi_DOT_js$lib$maths$point$Point"), matrixAndBoundsPool = require("module$node_modules$pixi_DOT_js$lib$scene$container$bounds$utils$matrixAndBoundsPool");
  "use strict";
  exports.toLocalGlobalMixin = {getGlobalPosition(point = new Point.Point(), skipUpdate = !1) {
    this.parent ? this.parent.toGlobal(this._position, point, skipUpdate) : (point.x = this._position.x, point.y = this._position.y);
    return point;
  }, toGlobal(position, point, skipUpdate = !1) {
    skipUpdate = this.getGlobalTransform(matrixAndBoundsPool.matrixPool.get(), skipUpdate);
    point = skipUpdate.apply(position, point);
    matrixAndBoundsPool.matrixPool.return(skipUpdate);
    return point;
  }, toLocal(position, from, point, skipUpdate) {
    from && (position = from.toGlobal(position, point, skipUpdate));
    from = this.getGlobalTransform(matrixAndBoundsPool.matrixPool.get(), skipUpdate);
    point = from.applyInverse(position, point);
    matrixAndBoundsPool.matrixPool.return(from);
    return point;
  }};
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$container$container_mixins$toLocalGlobalMixin.js.map
