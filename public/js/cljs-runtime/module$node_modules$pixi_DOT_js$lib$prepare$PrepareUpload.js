shadow$provide.module$node_modules$pixi_DOT_js$lib$prepare$PrepareUpload = function(global, require, module, exports) {
  var TextureSource = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$texture$sources$TextureSource"), GraphicsContext = require("module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$GraphicsContext"), Text = require("module$node_modules$pixi_DOT_js$lib$scene$text$Text"), BitmapText = require("module$node_modules$pixi_DOT_js$lib$scene$text_bitmap$BitmapText"), HTMLText = require("module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLText");
  global = require("module$node_modules$pixi_DOT_js$lib$prepare$PrepareQueue");
  "use strict";
  class PrepareUpload extends global.PrepareQueue {
    uploadQueueItem(item) {
      item instanceof TextureSource.TextureSource ? this.uploadTextureSource(item) : item instanceof Text.Text ? this.uploadText(item) : item instanceof HTMLText.HTMLText ? this.uploadHTMLText(item) : item instanceof BitmapText.BitmapText ? this.uploadBitmapText(item) : item instanceof GraphicsContext.GraphicsContext && this.uploadGraphicsContext(item);
    }
    uploadTextureSource(textureSource) {
      this.renderer.texture.initSource(textureSource);
    }
    uploadText(_text) {
      this.renderer.renderPipes.text.initGpuText(_text);
    }
    uploadBitmapText(_text) {
      this.renderer.renderPipes.bitmapText.initGpuText(_text);
    }
    uploadHTMLText(_text) {
      this.renderer.renderPipes.htmlText.initGpuText(_text);
    }
    uploadGraphicsContext(graphicsContext) {
      this.renderer.graphicsContext.getGpuContext(graphicsContext);
      ({instructions:graphicsContext} = graphicsContext);
      for (const instruction of graphicsContext) {
        "texture" === instruction.action ? ({image:graphicsContext} = instruction.data, this.uploadTextureSource(graphicsContext.source)) : "fill" === instruction.action && ({texture:graphicsContext} = instruction.data.style, this.uploadTextureSource(graphicsContext.source));
      }
      return null;
    }
  }
  exports.PrepareUpload = PrepareUpload;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$prepare$PrepareUpload.js.map
