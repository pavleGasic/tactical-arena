{
"version":3,
"file":"module$node_modules$$pixi$core$lib$framebuffer$FramebufferSystem.js",
"lineCount":198,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/framebuffer/FramebufferSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$framebuffer$FramebufferSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), extensions = require(\"@pixi/extensions\"), math = require(\"@pixi/math\"), settings = require(\"@pixi/settings\"), Framebuffer = require(\"./Framebuffer.js\"), GLFramebuffer = require(\"./GLFramebuffer.js\");\nconst tempRectangle = new math.Rectangle();\nclass FramebufferSystem {\n  /**\n   * @param renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this.renderer = renderer, this.managedFramebuffers = [], this.unknownFramebuffer = new Framebuffer.Framebuffer(10, 10), this.msaaSamples = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this.disposeAll(!0);\n    const gl = this.gl = this.renderer.gl;\n    if (this.CONTEXT_UID = this.renderer.CONTEXT_UID, this.current = this.unknownFramebuffer, this.viewport = new math.Rectangle(), this.hasMRT = !0, this.writeDepthTexture = !0, this.renderer.context.webGLVersion === 1) {\n      let nativeDrawBuffersExtension = this.renderer.context.extensions.drawBuffers, nativeDepthTextureExtension = this.renderer.context.extensions.depthTexture;\n      settings.settings.PREFER_ENV === constants.ENV.WEBGL_LEGACY && (nativeDrawBuffersExtension = null, nativeDepthTextureExtension = null), nativeDrawBuffersExtension ? gl.drawBuffers = (activeTextures) => nativeDrawBuffersExtension.drawBuffersWEBGL(activeTextures) : (this.hasMRT = !1, gl.drawBuffers = () => {\n      }), nativeDepthTextureExtension || (this.writeDepthTexture = !1);\n    } else\n      this.msaaSamples = gl.getInternalformatParameter(gl.RENDERBUFFER, gl.RGBA8, gl.SAMPLES);\n  }\n  /**\n   * Bind a framebuffer.\n   * @param framebuffer\n   * @param frame - frame, default is framebuffer size\n   * @param mipLevel - optional mip level to set on the framebuffer - defaults to 0\n   */\n  bind(framebuffer, frame, mipLevel = 0) {\n    const { gl } = this;\n    if (framebuffer) {\n      const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID] || this.initFramebuffer(framebuffer);\n      this.current !== framebuffer && (this.current = framebuffer, gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.framebuffer)), fbo.mipLevel !== mipLevel && (framebuffer.dirtyId++, framebuffer.dirtyFormat++, fbo.mipLevel = mipLevel), fbo.dirtyId !== framebuffer.dirtyId && (fbo.dirtyId = framebuffer.dirtyId, fbo.dirtyFormat !== framebuffer.dirtyFormat ? (fbo.dirtyFormat = framebuffer.dirtyFormat, fbo.dirtySize = framebuffer.dirtySize, this.updateFramebuffer(framebuffer, mipLevel)) : fbo.dirtySize !== framebuffer.dirtySize && (fbo.dirtySize = framebuffer.dirtySize, this.resizeFramebuffer(framebuffer)));\n      for (let i = 0; i < framebuffer.colorTextures.length; i++) {\n        const tex = framebuffer.colorTextures[i];\n        this.renderer.texture.unbind(tex.parentTextureArray || tex);\n      }\n      if (framebuffer.depthTexture && this.renderer.texture.unbind(framebuffer.depthTexture), frame) {\n        const mipWidth = frame.width >> mipLevel, mipHeight = frame.height >> mipLevel, scale = mipWidth / frame.width;\n        this.setViewport(\n          frame.x * scale,\n          frame.y * scale,\n          mipWidth,\n          mipHeight\n        );\n      } else {\n        const mipWidth = framebuffer.width >> mipLevel, mipHeight = framebuffer.height >> mipLevel;\n        this.setViewport(0, 0, mipWidth, mipHeight);\n      }\n    } else\n      this.current && (this.current = null, gl.bindFramebuffer(gl.FRAMEBUFFER, null)), frame ? this.setViewport(frame.x, frame.y, frame.width, frame.height) : this.setViewport(0, 0, this.renderer.width, this.renderer.height);\n  }\n  /**\n   * Set the WebGLRenderingContext's viewport.\n   * @param x - X position of viewport\n   * @param y - Y position of viewport\n   * @param width - Width of viewport\n   * @param height - Height of viewport\n   */\n  setViewport(x, y, width, height) {\n    const v = this.viewport;\n    x = Math.round(x), y = Math.round(y), width = Math.round(width), height = Math.round(height), (v.width !== width || v.height !== height || v.x !== x || v.y !== y) && (v.x = x, v.y = y, v.width = width, v.height = height, this.gl.viewport(x, y, width, height));\n  }\n  /**\n   * Get the size of the current width and height. Returns object with `width` and `height` values.\n   * @readonly\n   */\n  get size() {\n    return this.current ? { x: 0, y: 0, width: this.current.width, height: this.current.height } : { x: 0, y: 0, width: this.renderer.width, height: this.renderer.height };\n  }\n  /**\n   * Clear the color of the context\n   * @param r - Red value from 0 to 1\n   * @param g - Green value from 0 to 1\n   * @param b - Blue value from 0 to 1\n   * @param a - Alpha value from 0 to 1\n   * @param {PIXI.BUFFER_BITS} [mask=BUFFER_BITS.COLOR | BUFFER_BITS.DEPTH] - Bitwise OR of masks\n   *  that indicate the buffers to be cleared, by default COLOR and DEPTH buffers.\n   */\n  clear(r, g, b, a, mask = constants.BUFFER_BITS.COLOR | constants.BUFFER_BITS.DEPTH) {\n    const { gl } = this;\n    gl.clearColor(r, g, b, a), gl.clear(mask);\n  }\n  /**\n   * Initialize framebuffer for this context\n   * @protected\n   * @param framebuffer\n   * @returns - created GLFramebuffer\n   */\n  initFramebuffer(framebuffer) {\n    const { gl } = this, fbo = new GLFramebuffer.GLFramebuffer(gl.createFramebuffer());\n    return fbo.multisample = this.detectSamples(framebuffer.multisample), framebuffer.glFramebuffers[this.CONTEXT_UID] = fbo, this.managedFramebuffers.push(framebuffer), framebuffer.disposeRunner.add(this), fbo;\n  }\n  /**\n   * Resize the framebuffer\n   * @param framebuffer\n   * @protected\n   */\n  resizeFramebuffer(framebuffer) {\n    const { gl } = this, fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n    if (fbo.stencil) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.stencil);\n      let stencilFormat;\n      this.renderer.context.webGLVersion === 1 ? stencilFormat = gl.DEPTH_STENCIL : framebuffer.depth && framebuffer.stencil ? stencilFormat = gl.DEPTH24_STENCIL8 : framebuffer.depth ? stencilFormat = gl.DEPTH_COMPONENT24 : stencilFormat = gl.STENCIL_INDEX8, fbo.msaaBuffer ? gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        fbo.multisample,\n        stencilFormat,\n        framebuffer.width,\n        framebuffer.height\n      ) : gl.renderbufferStorage(gl.RENDERBUFFER, stencilFormat, framebuffer.width, framebuffer.height);\n    }\n    const colorTextures = framebuffer.colorTextures;\n    let count = colorTextures.length;\n    gl.drawBuffers || (count = Math.min(count, 1));\n    for (let i = 0; i < count; i++) {\n      const texture = colorTextures[i], parentTexture = texture.parentTextureArray || texture;\n      this.renderer.texture.bind(parentTexture, 0), i === 0 && fbo.msaaBuffer && (gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.msaaBuffer), gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        fbo.multisample,\n        parentTexture._glTextures[this.CONTEXT_UID].internalFormat,\n        framebuffer.width,\n        framebuffer.height\n      ));\n    }\n    framebuffer.depthTexture && this.writeDepthTexture && this.renderer.texture.bind(framebuffer.depthTexture, 0);\n  }\n  /**\n   * Update the framebuffer\n   * @param framebuffer\n   * @param mipLevel\n   * @protected\n   */\n  updateFramebuffer(framebuffer, mipLevel) {\n    const { gl } = this, fbo = framebuffer.glFramebuffers[this.CONTEXT_UID], colorTextures = framebuffer.colorTextures;\n    let count = colorTextures.length;\n    gl.drawBuffers || (count = Math.min(count, 1)), fbo.multisample > 1 && this.canMultisampleFramebuffer(framebuffer) ? fbo.msaaBuffer = fbo.msaaBuffer || gl.createRenderbuffer() : fbo.msaaBuffer && (gl.deleteRenderbuffer(fbo.msaaBuffer), fbo.msaaBuffer = null, fbo.blitFramebuffer && (fbo.blitFramebuffer.dispose(), fbo.blitFramebuffer = null));\n    const activeTextures = [];\n    for (let i = 0; i < count; i++) {\n      const texture = colorTextures[i], parentTexture = texture.parentTextureArray || texture;\n      this.renderer.texture.bind(parentTexture, 0), i === 0 && fbo.msaaBuffer ? (gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.msaaBuffer), gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        fbo.multisample,\n        parentTexture._glTextures[this.CONTEXT_UID].internalFormat,\n        framebuffer.width,\n        framebuffer.height\n      ), gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, fbo.msaaBuffer)) : (gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        texture.target,\n        parentTexture._glTextures[this.CONTEXT_UID].texture,\n        mipLevel\n      ), activeTextures.push(gl.COLOR_ATTACHMENT0 + i));\n    }\n    if (activeTextures.length > 1 && gl.drawBuffers(activeTextures), framebuffer.depthTexture && this.writeDepthTexture) {\n      const depthTexture = framebuffer.depthTexture;\n      this.renderer.texture.bind(depthTexture, 0), gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.TEXTURE_2D,\n        depthTexture._glTextures[this.CONTEXT_UID].texture,\n        mipLevel\n      );\n    }\n    if ((framebuffer.stencil || framebuffer.depth) && !(framebuffer.depthTexture && this.writeDepthTexture)) {\n      fbo.stencil = fbo.stencil || gl.createRenderbuffer();\n      let stencilAttachment, stencilFormat;\n      this.renderer.context.webGLVersion === 1 ? (stencilAttachment = gl.DEPTH_STENCIL_ATTACHMENT, stencilFormat = gl.DEPTH_STENCIL) : framebuffer.depth && framebuffer.stencil ? (stencilAttachment = gl.DEPTH_STENCIL_ATTACHMENT, stencilFormat = gl.DEPTH24_STENCIL8) : framebuffer.depth ? (stencilAttachment = gl.DEPTH_ATTACHMENT, stencilFormat = gl.DEPTH_COMPONENT24) : (stencilAttachment = gl.STENCIL_ATTACHMENT, stencilFormat = gl.STENCIL_INDEX8), gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.stencil), fbo.msaaBuffer ? gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        fbo.multisample,\n        stencilFormat,\n        framebuffer.width,\n        framebuffer.height\n      ) : gl.renderbufferStorage(gl.RENDERBUFFER, stencilFormat, framebuffer.width, framebuffer.height), gl.framebufferRenderbuffer(gl.FRAMEBUFFER, stencilAttachment, gl.RENDERBUFFER, fbo.stencil);\n    } else\n      fbo.stencil && (gl.deleteRenderbuffer(fbo.stencil), fbo.stencil = null);\n  }\n  /**\n   * Returns true if the frame buffer can be multisampled.\n   * @param framebuffer\n   */\n  canMultisampleFramebuffer(framebuffer) {\n    return this.renderer.context.webGLVersion !== 1 && framebuffer.colorTextures.length <= 1 && !framebuffer.depthTexture;\n  }\n  /**\n   * Detects number of samples that is not more than a param but as close to it as possible\n   * @param samples - number of samples\n   * @returns - recommended number of samples\n   */\n  detectSamples(samples) {\n    const { msaaSamples } = this;\n    let res = constants.MSAA_QUALITY.NONE;\n    if (samples <= 1 || msaaSamples === null)\n      return res;\n    for (let i = 0; i < msaaSamples.length; i++)\n      if (msaaSamples[i] <= samples) {\n        res = msaaSamples[i];\n        break;\n      }\n    return res === 1 && (res = constants.MSAA_QUALITY.NONE), res;\n  }\n  /**\n   * Only works with WebGL2\n   *\n   * blits framebuffer to another of the same or bigger size\n   * after that target framebuffer is bound\n   *\n   * Fails with WebGL warning if blits multisample framebuffer to different size\n   * @param framebuffer - by default it blits \"into itself\", from renderBuffer to texture.\n   * @param sourcePixels - source rectangle in pixels\n   * @param destPixels - dest rectangle in pixels, assumed to be the same as sourcePixels\n   */\n  blit(framebuffer, sourcePixels, destPixels) {\n    const { current, renderer, gl, CONTEXT_UID } = this;\n    if (renderer.context.webGLVersion !== 2 || !current)\n      return;\n    const fbo = current.glFramebuffers[CONTEXT_UID];\n    if (!fbo)\n      return;\n    if (!framebuffer) {\n      if (!fbo.msaaBuffer)\n        return;\n      const colorTexture = current.colorTextures[0];\n      if (!colorTexture)\n        return;\n      fbo.blitFramebuffer || (fbo.blitFramebuffer = new Framebuffer.Framebuffer(current.width, current.height), fbo.blitFramebuffer.addColorTexture(0, colorTexture)), framebuffer = fbo.blitFramebuffer, framebuffer.colorTextures[0] !== colorTexture && (framebuffer.colorTextures[0] = colorTexture, framebuffer.dirtyId++, framebuffer.dirtyFormat++), (framebuffer.width !== current.width || framebuffer.height !== current.height) && (framebuffer.width = current.width, framebuffer.height = current.height, framebuffer.dirtyId++, framebuffer.dirtySize++);\n    }\n    sourcePixels || (sourcePixels = tempRectangle, sourcePixels.width = current.width, sourcePixels.height = current.height), destPixels || (destPixels = sourcePixels);\n    const sameSize = sourcePixels.width === destPixels.width && sourcePixels.height === destPixels.height;\n    this.bind(framebuffer), gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fbo.framebuffer), gl.blitFramebuffer(\n      sourcePixels.left,\n      sourcePixels.top,\n      sourcePixels.right,\n      sourcePixels.bottom,\n      destPixels.left,\n      destPixels.top,\n      destPixels.right,\n      destPixels.bottom,\n      gl.COLOR_BUFFER_BIT,\n      sameSize ? gl.NEAREST : gl.LINEAR\n    ), gl.bindFramebuffer(gl.READ_FRAMEBUFFER, framebuffer.glFramebuffers[this.CONTEXT_UID].framebuffer);\n  }\n  /**\n   * Disposes framebuffer.\n   * @param framebuffer - framebuffer that has to be disposed of\n   * @param contextLost - If context was lost, we suppress all delete function calls\n   */\n  disposeFramebuffer(framebuffer, contextLost) {\n    const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID], gl = this.gl;\n    if (!fbo)\n      return;\n    delete framebuffer.glFramebuffers[this.CONTEXT_UID];\n    const index = this.managedFramebuffers.indexOf(framebuffer);\n    index >= 0 && this.managedFramebuffers.splice(index, 1), framebuffer.disposeRunner.remove(this), contextLost || (gl.deleteFramebuffer(fbo.framebuffer), fbo.msaaBuffer && gl.deleteRenderbuffer(fbo.msaaBuffer), fbo.stencil && gl.deleteRenderbuffer(fbo.stencil)), fbo.blitFramebuffer && this.disposeFramebuffer(fbo.blitFramebuffer, contextLost);\n  }\n  /**\n   * Disposes all framebuffers, but not textures bound to them.\n   * @param [contextLost=false] - If context was lost, we suppress all delete function calls\n   */\n  disposeAll(contextLost) {\n    const list = this.managedFramebuffers;\n    this.managedFramebuffers = [];\n    for (let i = 0; i < list.length; i++)\n      this.disposeFramebuffer(list[i], contextLost);\n  }\n  /**\n   * Forcing creation of stencil buffer for current framebuffer, if it wasn't done before.\n   * Used by MaskSystem, when its time to use stencil mask for Graphics element.\n   *\n   * Its an alternative for public lazy `framebuffer.enableStencil`, in case we need stencil without rebind.\n   * @private\n   */\n  forceStencil() {\n    const framebuffer = this.current;\n    if (!framebuffer)\n      return;\n    const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n    if (!fbo || fbo.stencil && framebuffer.stencil)\n      return;\n    framebuffer.stencil = !0;\n    const w = framebuffer.width, h = framebuffer.height, gl = this.gl, stencil = fbo.stencil = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, stencil);\n    let stencilAttachment, stencilFormat;\n    this.renderer.context.webGLVersion === 1 ? (stencilAttachment = gl.DEPTH_STENCIL_ATTACHMENT, stencilFormat = gl.DEPTH_STENCIL) : framebuffer.depth ? (stencilAttachment = gl.DEPTH_STENCIL_ATTACHMENT, stencilFormat = gl.DEPTH24_STENCIL8) : (stencilAttachment = gl.STENCIL_ATTACHMENT, stencilFormat = gl.STENCIL_INDEX8), fbo.msaaBuffer ? gl.renderbufferStorageMultisample(gl.RENDERBUFFER, fbo.multisample, stencilFormat, w, h) : gl.renderbufferStorage(gl.RENDERBUFFER, stencilFormat, w, h), gl.framebufferRenderbuffer(gl.FRAMEBUFFER, stencilAttachment, gl.RENDERBUFFER, stencil);\n  }\n  /** Resets framebuffer stored state, binds screen framebuffer. Should be called before renderTexture reset(). */\n  reset() {\n    this.current = this.unknownFramebuffer, this.viewport = new math.Rectangle();\n  }\n  destroy() {\n    this.renderer = null;\n  }\n}\nFramebufferSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"framebuffer\"\n};\nextensions.extensions.add(FramebufferSystem);\nexports.FramebufferSystem = FramebufferSystem;\n//# sourceMappingURL=FramebufferSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","extensions","math","settings","Framebuffer","GLFramebuffer","tempRectangle","Rectangle","FramebufferSystem","constructor","renderer","managedFramebuffers","unknownFramebuffer","msaaSamples","contextChange","disposeAll","gl","CONTEXT_UID","current","viewport","hasMRT","writeDepthTexture","context","webGLVersion","nativeDrawBuffersExtension","drawBuffers","nativeDepthTextureExtension","depthTexture","PREFER_ENV","ENV","WEBGL_LEGACY","activeTextures","gl.drawBuffers","drawBuffersWEBGL","getInternalformatParameter","RENDERBUFFER","RGBA8","SAMPLES","bind","framebuffer","frame","mipLevel","fbo","glFramebuffers","initFramebuffer","bindFramebuffer","FRAMEBUFFER","dirtyId","dirtyFormat","dirtySize","updateFramebuffer","resizeFramebuffer","i","colorTextures","length","tex","texture","unbind","parentTextureArray","mipWidth","width","scale","setViewport","x","y","height","v","Math","round","clear","r","g","b","a","mask","BUFFER_BITS","COLOR","DEPTH","clearColor","createFramebuffer","multisample","detectSamples","push","disposeRunner","add","stencil","bindRenderbuffer","stencilFormat","DEPTH_STENCIL","depth","DEPTH24_STENCIL8","DEPTH_COMPONENT24","STENCIL_INDEX8","msaaBuffer","renderbufferStorageMultisample","renderbufferStorage","count","min","parentTexture","_glTextures","internalFormat","canMultisampleFramebuffer","createRenderbuffer","deleteRenderbuffer","blitFramebuffer","dispose","framebufferRenderbuffer","COLOR_ATTACHMENT0","framebufferTexture2D","target","DEPTH_ATTACHMENT","TEXTURE_2D","stencilAttachment","DEPTH_STENCIL_ATTACHMENT","STENCIL_ATTACHMENT","samples","res","MSAA_QUALITY","NONE","blit","sourcePixels","destPixels","colorTexture","addColorTexture","sameSize","READ_FRAMEBUFFER","left","top","right","bottom","COLOR_BUFFER_BIT","NEAREST","LINEAR","disposeFramebuffer","contextLost","index","indexOf","splice","remove","deleteFramebuffer","list","forceStencil","w","h","reset","destroy","extension","type","ExtensionType","RendererSystem","name"]
}
