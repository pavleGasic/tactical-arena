{
"version":3,
"file":"module$node_modules$$pixi$app$lib$ResizePlugin.js",
"lineCount":45,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,GAAmE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEvGC,QAAAA,GAAOH,OAAA,CAAQ,0CAAR,CAAPG;AACJ,OAAMC,aAAN;AAOSC,eAAI,CAACC,OAAD,CAAU;AACnBC,YAAOC,CAAAA,cAAP,CACE,IADF,EAEE,UAFF,EAUE,CACEC,GAAG,CAACC,GAAD,CAAM;AACPC,kBAAWC,CAAAA,mBAAX,CAA+B,QAA/B,EAAyC,IAAKC,CAAAA,WAA9C,CAAA;AAAkF,SAAtB,IAAKC,CAAAA,SAAiB,GAALJ,GAAK,MAAQC,UAAWI,CAAAA,gBAAX,CAA4B,QAA5B,EAAsC,IAAKF,CAAAA,WAA3C,CAAA,EAAyD,IAAKG,CAAAA,MAAL,EAAjE;AAD3E,OADX,EAIEC,GAAG,EAAG;AACJ,eAAO,IAAKH,CAAAA,SAAZ;AADI,OAJR,CAVF,CAAA;AAkBG,UAAKD,CAAAA,WAAL,GAAmB,EAAAK,IAAM;AAC1B,YAAKJ,CAAAA,SAAL,KAAmB,IAAKK,CAAAA,YAAL,EAAA,EAAqB,IAAKC,CAAAA,SAA1B,GAAsCC,qBAAA,CAAsB,EAAA,IAAM,IAAKL,CAAAA,MAAL,EAA5B,CAAzD;AAD0B,OAAzB;AAEA,UAAKG,CAAAA,YAAL,GAAoB,EAAAG,IAAM;AAC3B,YAAKF,CAAAA,SAAL,KAAmBG,oBAAA,CAAqB,IAAKH,CAAAA,SAA1B,CAAA,EAAsC,IAAKA,CAAAA,SAA3C,GAAuD,IAA1E;AAD2B,OAA1B;AAEA,UAAKJ,CAAAA,MAAL,GAAc,EAAAQ,IAAM;AACrB,YAAK,IAAKV,CAAAA,SAAV,CAAA;AAEA,cAAKK,CAAAA,YAAL,EAAA;AAEA,cAAI,IAAKL,CAAAA,SAAT,KAAuBH,UAAWc,CAAAA,MAAlC,CACE;AAAA,gBAAAC,QAAQf,UAAWgB,CAAAA,UAAnB;AAA+B,gBAAAC,SAASjB,UAAWkB,CAAAA,WAApB;AAA/B,WADF,KAEK;AACH,kBAAM,CAAEC,WAAF,EAAeC,YAAf,CAAA,GAAgC,IAAKjB,CAAAA,SAA3C;AACAY,iBAAA,GAAQI,WAAR;AAAqBF,kBAAA,GAASG,YAAT;AAFlB;AAIL,cAAKC,CAAAA,QAAShB,CAAAA,MAAd,CAAqBU,KAArB,EAA4BE,MAA5B,CAAA;AAAqC,cAAKK,CAAAA,MAAL,EAAA;AAVrC;AADqB,OAApB;AAYuB,UAAKnB,CAAAA,SAAL,GAAvB,IAAKM,CAAAA,SAAkB,GAAN,IAAM;AAAuB,UAAKc,CAAAA,QAAL,GAAgB5B,OAAQ4B,CAAAA,QAAxB,IAAoC,IAApC;AAnC9B;AA0CdC,kBAAO,EAAG;AACfxB,gBAAWC,CAAAA,mBAAX,CAA+B,QAA/B,EAAyC,IAAKC,CAAAA,WAA9C,CAAA;AAA4D,UAAKM,CAAAA,YAAL,EAAA;AAA8F,UAAKH,CAAAA,MAAL,GAAtB,IAAKkB,CAAAA,QAAiB,GAA/C,IAAKrB,CAAAA,WAA0C,GAAzE,IAAKM,CAAAA,YAAoE,GAArD,IAAqD;AAD3I;AAjDnB;AAqDAf,cAAagC,CAAAA,SAAb,GAAyBjC,MAAKkC,CAAAA,aAAcC,CAAAA,WAA5C;AACAnC,QAAKoC,CAAAA,UAAWC,CAAAA,GAAhB,CAAoBpC,YAApB,CAAA;AACAF,SAAQE,CAAAA,YAAR,GAAuBA,YAAvB;AA1D2G,CAA3G;;",
"sources":["node_modules/@pixi/app/lib/ResizePlugin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$app$lib$ResizePlugin\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nclass ResizePlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @static\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    Object.defineProperty(\n      this,\n      \"resizeTo\",\n      /**\n       * The HTML element or window to automatically resize the\n       * renderer's view element to match width and height.\n       * @member {Window|HTMLElement}\n       * @name resizeTo\n       * @memberof PIXI.Application#\n       */\n      {\n        set(dom) {\n          globalThis.removeEventListener(\"resize\", this.queueResize), this._resizeTo = dom, dom && (globalThis.addEventListener(\"resize\", this.queueResize), this.resize());\n        },\n        get() {\n          return this._resizeTo;\n        }\n      }\n    ), this.queueResize = () => {\n      this._resizeTo && (this.cancelResize(), this._resizeId = requestAnimationFrame(() => this.resize()));\n    }, this.cancelResize = () => {\n      this._resizeId && (cancelAnimationFrame(this._resizeId), this._resizeId = null);\n    }, this.resize = () => {\n      if (!this._resizeTo)\n        return;\n      this.cancelResize();\n      let width, height;\n      if (this._resizeTo === globalThis.window)\n        width = globalThis.innerWidth, height = globalThis.innerHeight;\n      else {\n        const { clientWidth, clientHeight } = this._resizeTo;\n        width = clientWidth, height = clientHeight;\n      }\n      this.renderer.resize(width, height), this.render();\n    }, this._resizeId = null, this._resizeTo = null, this.resizeTo = options.resizeTo || null;\n  }\n  /**\n   * Clean up the ticker, scoped to application\n   * @static\n   * @private\n   */\n  static destroy() {\n    globalThis.removeEventListener(\"resize\", this.queueResize), this.cancelResize(), this.cancelResize = null, this.queueResize = null, this.resizeTo = null, this.resize = null;\n  }\n}\nResizePlugin.extension = core.ExtensionType.Application;\ncore.extensions.add(ResizePlugin);\nexports.ResizePlugin = ResizePlugin;\n//# sourceMappingURL=ResizePlugin.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","ResizePlugin","init","options","Object","defineProperty","set","dom","globalThis","removeEventListener","queueResize","_resizeTo","addEventListener","resize","get","this.queueResize","cancelResize","_resizeId","requestAnimationFrame","this.cancelResize","cancelAnimationFrame","this.resize","window","width","innerWidth","height","innerHeight","clientWidth","clientHeight","renderer","render","resizeTo","destroy","extension","ExtensionType","Application","extensions","add"]
}
