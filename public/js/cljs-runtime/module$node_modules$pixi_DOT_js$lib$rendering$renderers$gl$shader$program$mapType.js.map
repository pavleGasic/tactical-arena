{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$mapType.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,iFAAA,GAAsG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAqD9IC,UAASA,QAAO,CAACC,EAAD,EAAKC,IAAL,CAAW;AACzB,QAAI,CAACC,QAAL,CAAe;AACb,YAAMC,YAAYC,MAAOC,CAAAA,IAAP,CAAYC,gBAAZ,CAAlB;AACAJ,cAAA,GAAW,EAAX;AACA,WAAK,IAAIK,IAAI,CAAb,EAAgBA,CAAhB,GAAoBJ,SAAUK,CAAAA,MAA9B,EAAsC,EAAED,CAAxC,CAA2C;AACzC,cAAME,KAAKN,SAAA,CAAUI,CAAV,CAAX;AACAL,gBAAA,CAASF,EAAA,CAAGS,EAAH,CAAT,CAAA,GAAmBH,gBAAA,CAAiBG,EAAjB,CAAnB;AAFyC;AAH9B;AAQf,WAAOP,QAAA,CAASD,IAAT,CAAP;AATyB;AAjD3B,MAAIC,WAAW,IAAf;AACA,QAAMI,mBAAmB,CACvBI,MAAO,OADgB,EAEvBC,WAAY,MAFW,EAGvBC,WAAY,MAHW,EAIvBC,WAAY,MAJW,EAKvBC,IAAK,KALkB,EAMvBC,SAAU,OANa,EAOvBC,SAAU,OAPa,EAQvBC,SAAU,OARa,EASvBC,aAAc,MATS,EAUvBC,kBAAmB,OAVI,EAWvBC,kBAAmB,OAXI,EAYvBC,kBAAmB,OAZI,EAavBC,KAAM,MAbiB,EAcvBC,UAAW,OAdY,EAevBC,UAAW,OAfY,EAgBvBC,UAAW,OAhBY,EAiBvBC,WAAY,MAjBW,EAkBvBC,WAAY,MAlBW,EAmBvBC,WAAY,MAnBW,EAoBvBC,WAAY,WApBW,EAqBvBC,eAAgB,WArBO,EAsBvBC,wBAAyB,WAtBF,EAuBvBC,aAAc,aAvBS;AAwBvBC,mBAAkB,aAxBK,EAyBvBC,0BAA2B,aAzBJ,EA0BvBC,iBAAkB,gBA1BK,EA2BvBC,qBAAsB,gBA3BC,EA4BvBC,8BAA+B,gBA5BR,CAAzB,EA8BMC,uBAAuB,CAC3BC,MAAO,SADoB,EAE3BC,KAAM,WAFqB,EAG3BC,KAAM,WAHqB,EAI3BC,KAAM,WAJqB,EAK3BC,IAAK,QALsB,EAM3BC,MAAO,UANoB,EAO3BC,MAAO,UAPoB,EAQ3BC,MAAO,UARoB,EAS3BC,KAAM,QATqB,EAU3BC,MAAO,UAVoB,EAW3BC,MAAO,UAXoB,EAY3BC,MAAO,UAZoB,EAa3BC,KAAM,QAbqB,EAc3BC,MAAO,UAdoB,EAe3BC,MAAO,UAfoB,EAgB3BC,MAAO,UAhBoB,CA9B7B;AAgEAxD,SAAQyD,CAAAA,mBAAR,GALAA,QAA4B,CAACvD,EAAD,EAAKC,IAAL,CAAW;AAC/BuD,MAAAA,GAAYzD,OAAA,CAAQC,EAAR,EAAYC,IAAZ,CAAZuD;AACN,WAAOlB,oBAAA,CAAqBkB,EAArB,CAAP,IAA0C,SAA1C;AAFqC,GAKvC;AACA1D,SAAQC,CAAAA,OAAR,GAAkBA,OAAlB;AAtE8I,CAA9I;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/shader/program/mapType.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$program$mapType\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nlet GL_TABLE = null;\nconst GL_TO_GLSL_TYPES = {\n  FLOAT: \"float\",\n  FLOAT_VEC2: \"vec2\",\n  FLOAT_VEC3: \"vec3\",\n  FLOAT_VEC4: \"vec4\",\n  INT: \"int\",\n  INT_VEC2: \"ivec2\",\n  INT_VEC3: \"ivec3\",\n  INT_VEC4: \"ivec4\",\n  UNSIGNED_INT: \"uint\",\n  UNSIGNED_INT_VEC2: \"uvec2\",\n  UNSIGNED_INT_VEC3: \"uvec3\",\n  UNSIGNED_INT_VEC4: \"uvec4\",\n  BOOL: \"bool\",\n  BOOL_VEC2: \"bvec2\",\n  BOOL_VEC3: \"bvec3\",\n  BOOL_VEC4: \"bvec4\",\n  FLOAT_MAT2: \"mat2\",\n  FLOAT_MAT3: \"mat3\",\n  FLOAT_MAT4: \"mat4\",\n  SAMPLER_2D: \"sampler2D\",\n  INT_SAMPLER_2D: \"sampler2D\",\n  UNSIGNED_INT_SAMPLER_2D: \"sampler2D\",\n  SAMPLER_CUBE: \"samplerCube\",\n  INT_SAMPLER_CUBE: \"samplerCube\",\n  UNSIGNED_INT_SAMPLER_CUBE: \"samplerCube\",\n  SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  INT_SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: \"sampler2DArray\"\n};\nconst GLSL_TO_VERTEX_TYPES = {\n  float: \"float32\",\n  vec2: \"float32x2\",\n  vec3: \"float32x3\",\n  vec4: \"float32x4\",\n  int: \"sint32\",\n  ivec2: \"sint32x2\",\n  ivec3: \"sint32x3\",\n  ivec4: \"sint32x4\",\n  uint: \"uint32\",\n  uvec2: \"uint32x2\",\n  uvec3: \"uint32x3\",\n  uvec4: \"uint32x4\",\n  bool: \"uint32\",\n  bvec2: \"uint32x2\",\n  bvec3: \"uint32x3\",\n  bvec4: \"uint32x4\"\n};\nfunction mapType(gl, type) {\n  if (!GL_TABLE) {\n    const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n    for (let i = 0; i < typeNames.length; ++i) {\n      const tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n  return GL_TABLE[type];\n}\nfunction mapGlToVertexFormat(gl, type) {\n  const typeValue = mapType(gl, type);\n  return GLSL_TO_VERTEX_TYPES[typeValue] || \"float32\";\n}\n\nexports.mapGlToVertexFormat = mapGlToVertexFormat;\nexports.mapType = mapType;\n//# sourceMappingURL=mapType.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","mapType","gl","type","GL_TABLE","typeNames","Object","keys","GL_TO_GLSL_TYPES","i","length","tn","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D","SAMPLER_CUBE","INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE","SAMPLER_2D_ARRAY","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_ARRAY","GLSL_TO_VERTEX_TYPES","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mapGlToVertexFormat","typeValue"]
}
