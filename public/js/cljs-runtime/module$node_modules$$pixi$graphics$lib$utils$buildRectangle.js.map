{
"version":3,
"file":"module$node_modules$$pixi$graphics$lib$utils$buildRectangle.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,GAAgF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAwCxHA,SAAQC,CAAAA,cAAR,GAtCuBA,CACrBC,KAAK,CAACC,YAAD,CAAe;AAAA,QACZC,WAAWD,YAAaE,CAAAA,KADZ;AAAA,UACmBC,IAAIF,QAASE,CAAAA,CADhC,EACmCC,IAAIH,QAASG,CAAAA,CADhD,EACmDC,QAAQJ,QAASI,CAAAA,KADpE;AAC2EC,YAAAA,GAASL,QAASK,CAAAA,MAAlBA;AAA0BC,gBAAAA,GAASP,YAAaO,CAAAA,MAAtBA;AACvHA,gBAAOC,CAAAA,MAAP,GAAgB,CAAhB;AAA4B,KAAT,IAAAH,KAAA,IAAwB,CAAxB,IAAcC,QAAd,IAA6BC,YAAOE,CAAAA,IAAP,CAC9CN,CAD8C,EAE9CC,CAF8C,EAG9CD,CAH8C,GAG1CE,KAH0C,EAI9CD,CAJ8C,EAK9CD,CAL8C,GAK1CE,KAL0C,EAM9CD,CAN8C,GAM1CE,QAN0C,EAO9CH,CAP8C,EAQ9CC,CAR8C,GAQ1CE,QAR0C,CAA7B;AAFD,GADCR,EAcrBY,WAAW,CAACV,YAAD,EAAeW,gBAAf,CAAiC;AACpCJ,gBAAAA,GAASP,YAAaO,CAAAA,MAAtBA;AAAN,UAAoCK,QAAQD,gBAAiBJ,CAAAA,MAA7D;AACA,QAAsB,CAAtB,KAAIA,YAAOC,CAAAA,MAAX,CAAA;AAEA,UAAMK,UAAUD,KAAMJ,CAAAA,MAAhBK,GAAyB,CAA/B;AACAD,WAAMH,CAAAA,IAAN,CACEF,YAAA,CAAO,CAAP,CADF,EAEEA,YAAA,CAAO,CAAP,CAFF,EAGEA,YAAA,CAAO,CAAP,CAHF,EAIEA,YAAA,CAAO,CAAP,CAJF,EAKEA,YAAA,CAAO,CAAP,CALF,EAMEA,YAAA,CAAO,CAAP,CANF,EAOEA,YAAA,CAAO,CAAP,CAPF,EAQEA,YAAA,CAAO,CAAP,CARF,CAAA;AASGI,sBAAiBG,CAAAA,OAAQL,CAAAA,IAAzB,CACDI,OADC,EAEDA,OAFC,GAES,CAFT,EAGDA,OAHC,GAGS,CAHT,EAIDA,OAJC,GAIS,CAJT,EAKDA,OALC,GAKS,CALT,EAMDA,OANC,GAMS,CANT,CAAA;AAZH;AAF0C,GAdvBf,CAsCvB;AAxCwH,CAAxH;;",
"sources":["node_modules/@pixi/graphics/lib/utils/buildRectangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$graphics$lib$utils$buildRectangle\"] = function(global,require,module,exports) {\n\"use strict\";\nconst buildRectangle = {\n  build(graphicsData) {\n    const rectData = graphicsData.shape, x = rectData.x, y = rectData.y, width = rectData.width, height = rectData.height, points = graphicsData.points;\n    points.length = 0, width >= 0 && height >= 0 && points.push(\n      x,\n      y,\n      x + width,\n      y,\n      x + width,\n      y + height,\n      x,\n      y + height\n    );\n  },\n  triangulate(graphicsData, graphicsGeometry) {\n    const points = graphicsData.points, verts = graphicsGeometry.points;\n    if (points.length === 0)\n      return;\n    const vertPos = verts.length / 2;\n    verts.push(\n      points[0],\n      points[1],\n      points[2],\n      points[3],\n      points[6],\n      points[7],\n      points[4],\n      points[5]\n    ), graphicsGeometry.indices.push(\n      vertPos,\n      vertPos + 1,\n      vertPos + 2,\n      vertPos + 1,\n      vertPos + 2,\n      vertPos + 3\n    );\n  }\n};\nexports.buildRectangle = buildRectangle;\n//# sourceMappingURL=buildRectangle.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildRectangle","build","graphicsData","rectData","shape","x","y","width","height","points","length","push","triangulate","graphicsGeometry","verts","vertPos","indices"]
}
