{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$createUboSyncFunction.js",
"lineCount":30,
"mappings":"AAAAA,cAAA,CAAA,iGAAA,GAAsH,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9J,MAAIC,iBAAiBH,OAAA,CAAQ,4FAAR,CAArB;AAEA,cAAA;AA0DAE,SAAQE,CAAAA,qBAAR,GAzDAA,QAA8B,CAACC,WAAD,EAAcC,UAAd,EAA0BC,uBAA1B,EAAmDC,gBAAnD,CAAqE;AACjG,UAAMC,gBAAgB,CAAE,gLAAF,CAAtB;AAQA,QAAIC,OAAO,CAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBN,WAAYO,CAAAA,MAAhC,EAAwCD,CAAA,EAAxC,CAA6C;AAC3C,YAAME,aAAaR,WAAA,CAAYM,CAAZ,CAAnB,EACMG,OAAOD,UAAWE,CAAAA,IAAKD,CAAAA,IAD7B;AAEA,UAAIE,SAAS,CAAA,CAAb;AACA,UAAIC,SAAS,CAAb;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBf,cAAeA,CAAAA,cAAeS,CAAAA,MAAlD,EAA0DM,CAAA,EAA1D;AAEE,YADsBf,cAAeA,CAAAA,cAAfgB,CAA8BD,CAA9BC,CACJC,CAAAA,IAAd,CAAmBP,UAAWE,CAAAA,IAA9B,CAAJ,CAAyC;AACvCE,gBAAA,GAASJ,UAAWI,CAAAA,MAApB,GAA6B,CAA7B;AACAR,uBAAcY,CAAAA,IAAd,CACG,WAAUP,IAAV,IADH,EAEG,aAAYG,MAAZ,GAAqBP,IAArB,GAFH,EAGEP,cAAeA,CAAAA,cAAf,CAA8Be,CAA9B,CAAA,CAAiCZ,UAAjC,CAHF,IAGkDH,cAAeA,CAAAA,cAAf,CAA8Be,CAA9B,CAAiCI,CAAAA,GAHnF,CAAA;AAKAN,gBAAA,GAAS,CAAA,CAAT;AACA;AARuC;AAF3C;AAaKA,YAAL,KAC6B,CAA3B,GAAIH,UAAWE,CAAAA,IAAKQ,CAAAA,IAApB,IACEN,MACA,GADSJ,UAAWI,CAAAA,MACpB,GAD6B,CAC7B,EAAAR,aAAcY,CAAAA,IAAd,CAAmBd,uBAAA,CAAwBM,UAAxB,EAAoCI,MAApC,GAA6CP,IAA7C,CAAnB,CAFF,KAIQc,MAEN,GAFiBhB,gBAAA,CAAiBK,UAAWE,CAAAA,IAAKU,CAAAA,IAAjC,CAEjB,EADAR,MACA,GADSJ,UAAWI,CAAAA,MACpB,GAD6B,CAC7B,EAAAR,aAAcY,CAAAA,IAAd,CAEG;6BACkBP,IADlB;gCAEqBG,MAFrB,GAE8BP,IAF9B;sBAGWc,MAHX;iBAFH,CANF,CADF;AAiBAd,UAAA,GAAOO,MAAP;AAnC2C;AAqCvCS,eAAAA,GAAcjB,aAAckB,CAAAA,IAAd,CAAmB,IAAnB,CAAdD;AACN,WAAO,IAAIE,QAAJ,CACL,IADK,EAEL,MAFK,EAGL,WAHK,EAIL,QAJK,EAKLF,WALK,CAAP;AAhDiG,GAyDnG;AA/D8J,CAA9J;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/shader/utils/createUboSyncFunction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$utils$createUboSyncFunction\"] = function(global,require,module,exports) {\n'use strict';\n\nvar uniformParsers = require('./uniformParsers.js');\n\n\"use strict\";\nfunction createUboSyncFunction(uboElements, parserCode, arrayGenerationFunction, singleSettersMap) {\n  const funcFragments = [`\n        var v = null;\n        var v2 = null;\n        var t = 0;\n        var index = 0;\n        var name = null;\n        var arrayOffset = null;\n    `];\n  let prev = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    const name = uboElement.data.name;\n    let parsed = false;\n    let offset = 0;\n    for (let j = 0; j < uniformParsers.uniformParsers.length; j++) {\n      const uniformParser = uniformParsers.uniformParsers[j];\n      if (uniformParser.test(uboElement.data)) {\n        offset = uboElement.offset / 4;\n        funcFragments.push(\n          `name = \"${name}\";`,\n          `offset += ${offset - prev};`,\n          uniformParsers.uniformParsers[j][parserCode] || uniformParsers.uniformParsers[j].ubo\n        );\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      if (uboElement.data.size > 1) {\n        offset = uboElement.offset / 4;\n        funcFragments.push(arrayGenerationFunction(uboElement, offset - prev));\n      } else {\n        const template = singleSettersMap[uboElement.data.type];\n        offset = uboElement.offset / 4;\n        funcFragments.push(\n          /* wgsl */\n          `\n                    v = uv.${name};\n                    offset += ${offset - prev};\n                    ${template};\n                `\n        );\n      }\n    }\n    prev = offset;\n  }\n  const fragmentSrc = funcFragments.join(\"\\n\");\n  return new Function(\n    \"uv\",\n    \"data\",\n    \"dataInt32\",\n    \"offset\",\n    fragmentSrc\n  );\n}\n\nexports.createUboSyncFunction = createUboSyncFunction;\n//# sourceMappingURL=createUboSyncFunction.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","uniformParsers","createUboSyncFunction","uboElements","parserCode","arrayGenerationFunction","singleSettersMap","funcFragments","prev","i","length","uboElement","name","data","parsed","offset","j","uniformParser","test","push","ubo","size","template","type","fragmentSrc","join","Function"]
}
