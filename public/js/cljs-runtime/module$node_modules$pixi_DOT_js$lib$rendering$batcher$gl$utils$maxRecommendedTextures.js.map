{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$batcher$gl$utils$maxRecommendedTextures.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,qFAAA,GAA0G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGlJ,MAAIC,iBAAiBH,OAAA,CAAQ,0FAAR,CAArB,EACII,+BAA+BJ,OAAA,CAAQ,6FAAR,CADnC;AAGA,cAAA;AACA,MAAIK,2BAA2B,IAA/B;AAcAH,SAAQI,CAAAA,sBAAR,GAbAA,QAA+B,EAAG;AAChC,QAAID,wBAAJ;AACE,aAAOA,wBAAP;AADF;AAEA,UAAME,KAAKJ,cAAeA,CAAAA,cAAf,EAAX;AACAE,4BAAA,GAA2BE,EAAGC,CAAAA,YAAH,CAAgBD,EAAGE,CAAAA,uBAAnB,CAA3B;AACAJ,4BAAA,GAA2BD,4BAA6BA,CAAAA,4BAA7B,CACzBC,wBADyB,EAEzBE,EAFyB,CAA3B;AAIAA,MAAGG,CAAAA,YAAH,CAAgB,oBAAhB,CAAuCC,EAAAA,WAAvC,EAAA;AACA,WAAON,wBAAP;AAVgC,GAalC;AArBkJ,CAAlJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/batcher/gl/utils/maxRecommendedTextures.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$batcher$gl$utils$maxRecommendedTextures\"] = function(global,require,module,exports) {\n'use strict';\n\nvar getTestContext = require('../../../renderers/gl/shader/program/getTestContext.js');\nvar checkMaxIfStatementsInShader = require('./checkMaxIfStatementsInShader.js');\n\n\"use strict\";\nlet maxTexturesPerBatchCache = null;\nfunction getMaxTexturesPerBatch() {\n  if (maxTexturesPerBatchCache)\n    return maxTexturesPerBatchCache;\n  const gl = getTestContext.getTestContext();\n  maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  maxTexturesPerBatchCache = checkMaxIfStatementsInShader.checkMaxIfStatementsInShader(\n    maxTexturesPerBatchCache,\n    gl\n  );\n  gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n  return maxTexturesPerBatchCache;\n}\n\nexports.getMaxTexturesPerBatch = getMaxTexturesPerBatch;\n//# sourceMappingURL=maxRecommendedTextures.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","getTestContext","checkMaxIfStatementsInShader","maxTexturesPerBatchCache","getMaxTexturesPerBatch","gl","getParameter","MAX_TEXTURE_IMAGE_UNITS","getExtension","loseContext"]
}
