shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$SdfShader = function(global, require, module, exports) {
  var Matrix = require("module$node_modules$pixi_DOT_js$lib$maths$matrix$Matrix"), maxRecommendedTextures = require("module$node_modules$pixi_DOT_js$lib$rendering$batcher$gl$utils$maxRecommendedTextures"), compileHighShaderToProgram = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$compileHighShaderToProgram"), colorBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$colorBit"), generateTextureBatchBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$generateTextureBatchBit"), 
  roundPixelsBit = require("module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$roundPixelsBit"), getBatchSamplersUniformGroup = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$shader$getBatchSamplersUniformGroup");
  global = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$Shader");
  var UniformGroup = require("module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$shader$UniformGroup"), localUniformMSDFBit = require("module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$shader_bits$localUniformMSDFBit"), mSDFBit = require("module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$shader_bits$mSDFBit");
  "use strict";
  let gpuProgram, glProgram;
  class SdfShader extends global.Shader {
    constructor() {
      const uniforms = new UniformGroup.UniformGroup({uColor:{value:new Float32Array([1, 1, 1, 1]), type:"vec4\x3cf32\x3e"}, uTransformMatrix:{value:new Matrix.Matrix(), type:"mat3x3\x3cf32\x3e"}, uDistance:{value:4, type:"f32"}, uRound:{value:0, type:"f32"}}), maxTextures = maxRecommendedTextures.getMaxTexturesPerBatch();
      gpuProgram ?? (gpuProgram = compileHighShaderToProgram.compileHighShaderGpuProgram({name:"sdf-shader", bits:[colorBit.colorBit, generateTextureBatchBit.generateTextureBatchBit(maxTextures), localUniformMSDFBit.localUniformMSDFBit, mSDFBit.mSDFBit, roundPixelsBit.roundPixelsBit]}));
      glProgram ?? (glProgram = compileHighShaderToProgram.compileHighShaderGlProgram({name:"sdf-shader", bits:[colorBit.colorBitGl, generateTextureBatchBit.generateTextureBatchBitGl(maxTextures), localUniformMSDFBit.localUniformMSDFBitGl, mSDFBit.mSDFBitGl, roundPixelsBit.roundPixelsBitGl]}));
      super({glProgram, gpuProgram, resources:{localUniforms:uniforms, batchSamplers:getBatchSamplersUniformGroup.getBatchSamplersUniformGroup(maxTextures)}});
    }
  }
  exports.SdfShader = SdfShader;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$SdfShader.js.map
