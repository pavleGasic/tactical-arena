{
"version":3,
"file":"module$node_modules$$pixi$utils$lib$browser$isWebGLSupported.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,GAAiF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEzHF,SAAA,CAAQ,8CAAR,CAAA;AACA,MAAIG,WAAWH,OAAA,CAAQ,8CAAR,CAAf;AACA,MAAII,SAAJ;AAuBAF,SAAQG,CAAAA,gBAAR,GAtBAA,QAAyB,EAAG;AAC1B,WAA0B,GAAnB,GAAA,MAAOD,UAAP,KAA2BA,SAA3B,GAAuC,QAAQ,EAAG;AACvD,UAAME,iBAAiB,CACrBC,QAAS,CAAA,CADY,EAErBC,6BAA8BL,QAASA,CAAAA,QAASM,CAAAA,gCAF3B,CAAvB;AAIA,SAAI;AACF,YAAI,CAACN,QAASA,CAAAA,QAASO,CAAAA,OAAQC,CAAAA,wBAA1B,EAAL;AACE,iBAAO,CAAA,CAAP;AADF;AAEA,cAAMC,SAAST,QAASA,CAAAA,QAASO,CAAAA,OAAQG,CAAAA,YAA1B,EAAf;AACA,YAAIC,KAAKF,MAAOG,CAAAA,UAAP,CAAkB,OAAlB,EAA2BT,cAA3B,CAALQ,IAAmDF,MAAOG,CAAAA,UAAP,CAAkB,oBAAlB,EAAwCT,cAAxC,CAAvD;AACMU,sBAAAA,GAAU,CAAC,CAACF,EAAIG,EAAAA,oBAAJ,EAA4BV,EAAAA,OAAxCS;AACN,YAAIF,EAAJ,CAAQ;AACN,gBAAMI,cAAcJ,EAAGK,CAAAA,YAAH,CAAgB,oBAAhB,CAApB;AACAD,qBAAA,IAAeA,WAAYA,CAAAA,WAAZ,EAAf;AAFM;AAIR,eAAkBF,cAAlB;AAVE,OAWF,OAAM;AACN,eAAO,CAAA,CAAP;AADM;AAhB+C,KAAX,EAAvC,GAmBDZ,SAnBN;AAD0B,GAsB5B;AA3ByH,CAAzH;;",
"sources":["node_modules/@pixi/utils/lib/browser/isWebGLSupported.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$utils$lib$browser$isWebGLSupported\"] = function(global,require,module,exports) {\n\"use strict\";\nrequire(\"../settings.js\");\nvar settings = require(\"@pixi/settings\");\nlet supported;\nfunction isWebGLSupported() {\n  return typeof supported > \"u\" && (supported = function() {\n    const contextOptions = {\n      stencil: !0,\n      failIfMajorPerformanceCaveat: settings.settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n    };\n    try {\n      if (!settings.settings.ADAPTER.getWebGLRenderingContext())\n        return !1;\n      const canvas = settings.settings.ADAPTER.createCanvas();\n      let gl = canvas.getContext(\"webgl\", contextOptions) || canvas.getContext(\"experimental-webgl\", contextOptions);\n      const success = !!gl?.getContextAttributes()?.stencil;\n      if (gl) {\n        const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n        loseContext && loseContext.loseContext();\n      }\n      return gl = null, success;\n    } catch {\n      return !1;\n    }\n  }()), supported;\n}\nexports.isWebGLSupported = isWebGLSupported;\n//# sourceMappingURL=isWebGLSupported.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","settings","supported","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","ADAPTER","getWebGLRenderingContext","canvas","createCanvas","gl","getContext","success","getContextAttributes","loseContext","getExtension"]
}
