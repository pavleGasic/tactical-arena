{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$app$Application.js",
"lineCount":50,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,GAAwE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG5GC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,qBAAqBJ,OAAA,CAAQ,4EAAR,CAAzB,EACIK,YAAYL,OAAA,CAAQ,+DAAR,CADhB;AAEIM,QAAAA,GAAcN,OAAA,CAAQ,8DAAR,CAAdM;AACJ,MAAIC,cAAcP,OAAA,CAAQ,+DAAR,CAAlB;AAEA,cAAA;AACqB,QAAA,+DAAA,KAAA;AAEnBQ,eAAW,CAAC,GAAGC,IAAJ,CAAU;AAEnB,UAAKC,CAAAA,KAAL,GAAa,IAAIL,SAAUA,CAAAA,SAAd,EAAb;AACgB,UAAK,EAArB,KAAII,IAAA,CAAK,CAAL,CAAJ,IACEF,WAAYA,CAAAA,WAAZ,CAAwBA,WAAYI,CAAAA,MAApC,EAA4C,wFAA5C,CADF;AAHmB;AAUfC,cAAI,CAACC,OAAD,CAAU;AAClBA,aAAA,GAAU,CAAE,GAAGA,OAAL,CAAV;AACA,UAAKC,CAAAA,QAAL,GAAgB,MAAMV,kBAAmBA,CAAAA,kBAAnB,CAAsCS,OAAtC,CAAtB;AACAE,kEAAaC,CAAAA,QAASC,CAAAA,OAAtB,CAA+BC,MAAD,IAAY;AACxCA,cAAON,CAAAA,IAAKO,CAAAA,IAAZ,CAAiB,IAAjB,EAAuBN,OAAvB,CAAA;AADwC,OAA1C,CAAA;AAHkB;AAQpBO,UAAM,EAAG;AACP,UAAKN,CAAAA,QAASM,CAAAA,MAAd,CAAqB,CAAEC,UAAW,IAAKX,CAAAA,KAAlB,CAArB,CAAA;AADO;AAQL,cAAS,EAAA;AACX,aAAO,IAAKI,CAAAA,QAASQ,CAAAA,MAArB;AADW;AAQT,YAAO,EAAA;AACTf,iBAAYA,CAAAA,WAAZ,CAAwBA,WAAYI,CAAAA,MAApC,EAA4C,wEAA5C,CAAA;AACA,aAAO,IAAKG,CAAAA,QAASQ,CAAAA,MAArB;AAFS;AAQP,cAAS,EAAA;AACX,aAAO,IAAKR,CAAAA,QAASS,CAAAA,MAArB;AADW;AAoBbC,WAAO,CAACC,sBAAA,GAAyB,CAAA,CAA1B,EAAiCZ,OAAA,GAAU,CAAA,CAA3C,CAAkD;AACvD,YAAMa,UAAUX,4DAAaC,CAAAA,QAASW,CAAAA,KAAtB,CAA4B,CAA5B,CAAhB;AACAD,aAAQE,CAAAA,OAAR,EAAA;AACAF,aAAQT,CAAAA,OAAR,CAAiBC,MAAD,IAAY;AAC1BA,cAAOM,CAAAA,OAAQL,CAAAA,IAAf,CAAoB,IAApB,CAAA;AAD0B,OAA5B,CAAA;AAGA,UAAKT,CAAAA,KAAMc,CAAAA,OAAX,CAAmBX,OAAnB,CAAA;AACA,UAAKH,CAAAA,KAAL,GAAa,IAAb;AACA,UAAKI,CAAAA,QAASU,CAAAA,OAAd,CAAsBC,sBAAtB,CAAA;AACA,UAAKX,CAAAA,QAAL,GAAgB,IAAhB;AATuD;AAhEtC,GAAA;AAAfC,SAAAA,GAAe,4DAAfA;AAgFNA,SAAaC,CAAAA,QAAb,GAAwB,EAAxB;AAEAb,QAAW0B,CAAAA,UAAWC,CAAAA,YAAtB,CAAmC3B,MAAW4B,CAAAA,aAAcC,CAAAA,WAA5D,EADkBjB,OACmEC,CAAAA,QAArF,CAAA;AACAb,QAAW0B,CAAAA,UAAWI,CAAAA,GAAtB,CAA0B3B,MAAY4B,CAAAA,mBAAtC,CAAA;AAEAhC,SAAQ8B,CAAAA,WAAR,GAJkBjB,OAIlB;AA/FgH,CAAhH;;",
"sources":["node_modules/pixi_DOT_js/lib/app/Application.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$app$Application\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar autoDetectRenderer = require('../rendering/renderers/autoDetectRenderer.js');\nvar Container = require('../scene/container/Container.js');\nvar globalHooks = require('../utils/global/globalHooks.js');\nvar deprecation = require('../utils/logging/deprecation.js');\n\n\"use strict\";\nconst _Application = class _Application {\n  /** @ignore */\n  constructor(...args) {\n    /** The root display container that's rendered. */\n    this.stage = new Container.Container();\n    if (args[0] !== void 0) {\n      deprecation.deprecation(deprecation.v8_0_0, \"Application constructor options are deprecated, please use Application.init() instead.\");\n    }\n  }\n  /**\n   * @param options - The optional application and renderer parameters.\n   */\n  async init(options) {\n    options = { ...options };\n    this.renderer = await autoDetectRenderer.autoDetectRenderer(options);\n    _Application._plugins.forEach((plugin) => {\n      plugin.init.call(this, options);\n    });\n  }\n  /** Render the current stage. */\n  render() {\n    this.renderer.render({ container: this.stage });\n  }\n  /**\n   * Reference to the renderer's canvas element.\n   * @readonly\n   * @member {HTMLCanvasElement}\n   */\n  get canvas() {\n    return this.renderer.canvas;\n  }\n  /**\n   * Reference to the renderer's canvas element.\n   * @member {HTMLCanvasElement}\n   * @deprecated since 8.0.0\n   */\n  get view() {\n    deprecation.deprecation(deprecation.v8_0_0, \"Application.view is deprecated, please use Application.canvas instead.\");\n    return this.renderer.canvas;\n  }\n  /**\n   * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n   * @readonly\n   */\n  get screen() {\n    return this.renderer.screen;\n  }\n  /**\n   * Destroys the application and all of its resources.\n   * @param {object|boolean}[rendererDestroyOptions=false] - The options for destroying the renderer.\n   * @param {boolean}[rendererDestroyOptions.removeView=false] - Removes the Canvas element from the DOM.\n   * @param {object|boolean} [options=false] - The options for destroying the stage.\n   * @param {boolean} [options.children=false] - If set to true, all the children will have their destroy method\n   * called as well. `options` will be passed on to those calls.\n   * @param {boolean} [options.texture=false] - Only used for children with textures e.g. Sprites.\n   * If options.children is set to true,\n   * it should destroy the texture of the child sprite.\n   * @param {boolean} [options.textureSource=false] - Only used for children with textures e.g. Sprites.\n   *  If options.children is set to true,\n   * it should destroy the texture source of the child sprite.\n   * @param {boolean} [options.context=false] - Only used for children with graphicsContexts e.g. Graphics.\n   * If options.children is set to true,\n   * it should destroy the context of the child graphics.\n   */\n  destroy(rendererDestroyOptions = false, options = false) {\n    const plugins = _Application._plugins.slice(0);\n    plugins.reverse();\n    plugins.forEach((plugin) => {\n      plugin.destroy.call(this);\n    });\n    this.stage.destroy(options);\n    this.stage = null;\n    this.renderer.destroy(rendererDestroyOptions);\n    this.renderer = null;\n  }\n};\n/**\n * Collection of installed plugins.\n * @alias _plugins\n */\n_Application._plugins = [];\nlet Application = _Application;\nExtensions.extensions.handleByList(Extensions.ExtensionType.Application, Application._plugins);\nExtensions.extensions.add(globalHooks.ApplicationInitHook);\n\nexports.Application = Application;\n//# sourceMappingURL=Application.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","autoDetectRenderer","Container","globalHooks","deprecation","constructor","args","stage","v8_0_0","init","options","renderer","_Application","_plugins","forEach","plugin","call","render","container","canvas","screen","destroy","rendererDestroyOptions","plugins","slice","reverse","extensions","handleByList","ExtensionType","Application","add","ApplicationInitHook"]
}
