shadow$provide.module$node_modules$pixi_DOT_js$lib$utils$logging$logScene = function(global, require, module, exports) {
  function logScene(container, depth = 0, data = {color:"#000000"}) {
    container.renderGroup && (data.color = colors[colorTick++]);
    var spaces = "";
    for (var i = 0; i < depth; i++) {
      spaces += "    ";
    }
    i = container.label;
    !i && container instanceof Sprite.Sprite && (i = `sprite:${container.texture.label}`);
    spaces = `%c ${spaces}|- ${i} (worldX:${container.worldTransform.tx}, relativeRenderX:${container.relativeGroupTransform.tx}, renderX:${container.groupTransform.tx}, localX:${container.x})`;
    container.renderGroup && (spaces += " (RenderGroup)");
    container.filters && (spaces += "(*filters)");
    console.log(spaces, `color:${data.color}; font-weight:bold;`);
    depth++;
    for (spaces = 0; spaces < container.children.length; spaces++) {
      logScene(container.children[spaces], depth, {...data});
    }
  }
  function logRenderGroupScene(renderGroup, depth = 0, data = {index:0, color:"#000000"}) {
    var spaces = "";
    for (let i = 0; i < depth; i++) {
      spaces += "    ";
    }
    console.log(`%c ${spaces}- ${data.index}: ${renderGroup.root.label} worldX:${renderGroup.worldTransform.tx}`, `color:${data.color}; font-weight:bold;`);
    depth++;
    for (spaces = 0; spaces < renderGroup.renderGroupChildren.length; spaces++) {
      logRenderGroupScene(renderGroup.renderGroupChildren[spaces], depth, {...data, index:spaces});
    }
  }
  var Sprite = require("module$node_modules$pixi_DOT_js$lib$scene$sprite$Sprite");
  "use strict";
  const colors = "#000080 #228B22 #8B0000 #4169E1 #008080 #800000 #9400D3 #FF8C00 #556B2F #8B008B".split(" ");
  let colorTick = 0;
  exports.logRenderGroupScene = logRenderGroupScene;
  exports.logScene = logScene;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$utils$logging$logScene.js.map
