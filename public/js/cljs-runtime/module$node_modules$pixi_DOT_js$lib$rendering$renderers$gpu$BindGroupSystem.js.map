{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$BindGroupSystem.js",
"lineCount":41,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,GAAgG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGpIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AAEJ,cAAA;AACA,OAAMC,gBAAN;AACEC,eAAW,CAACC,QAAD,CAAW;AACpB,UAAKC,CAAAA,KAAL,GAA6BC,MAAOC,CAAAA,MAAP,CAAc,IAAd,CAA7B;AACA,UAAKC,CAAAA,SAAL,GAAiBJ,QAAjB;AACA,UAAKI,CAAAA,SAAUC,CAAAA,YAAaC,CAAAA,cAA5B,CAA2C,IAA3C,EAAiD,OAAjD,CAAA;AAHoB;AAKtBC,iBAAa,CAACC,GAAD,CAAM;AACjB,UAAKC,CAAAA,IAAL,GAAYD,GAAZ;AADiB;AAGnBE,gBAAY,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,UAArB,CAAiC;AAC3CF,eAAUG,CAAAA,UAAV,EAAA;AAEA,aADqB,IAAKb,CAAAA,KAAL,CAAWU,SAAUI,CAAAA,IAArB,CACrB,IADmD,IAAKC,CAAAA,gBAAL,CAAsBL,SAAtB,EAAiCC,OAAjC,EAA0CC,UAA1C,CACnD;AAH2C;AAK7CG,oBAAgB,CAACC,KAAD,EAAQL,OAAR,EAAiBC,UAAjB,CAA6B;AAC3C,UAAMK,SAAS,IAAKT,CAAAA,IAAKS,CAAAA,MAAzB;AACA,YAAMC,cAAcP,OAAQQ,CAAAA,MAAR,CAAeP,UAAf,CAApB,EACMQ,UAAU,EADhB,EAEMrB,WAAW,IAAKI,CAAAA,SAFtB;AAGA,WAAK,MAAMkB,CAAX,GAAgBH,YAAhB,CAA6B;AAC3B,YAAMI,WAAWN,KAAMO,CAAAA,SAAN,CAAgBF,CAAhB,CAAXC,IAAiCN,KAAMO,CAAAA,SAAN,CAAgBL,WAAA,CAAYG,CAAZ,CAAhB,CAAvC;AACA,YAAIG,WAAJ;AAC+B,sBAA/B,KAAIF,QAASG,CAAAA,aAAb,IAEE1B,QAAS2B,CAAAA,GAAIC,CAAAA,kBAAb,CAAgCC,QAAhC,CAEA,EADMC,QACN,GADeD,QAAaC,CAAAA,MAC5B,EAAAL,WAAA,GAAc,CACZK,OAAQ9B,QAAS8B,CAAAA,MAAOC,CAAAA,YAAhB,CAA6BD,QAA7B,CADI,EAEZE,OAAQ,CAFI,EAGZC,KAAMH,QAAOI,CAAAA,UAAWD,CAAAA,IAHZ,CAJhB,IASsC,QAA/B,KAAIV,QAASG,CAAAA,aAAb,GAELD,WAFK,GAES,CACZK,OAAQ9B,QAAS8B,CAAAA,MAAOC,CAAAA,YAAhB,CAA6BD,QAA7B,CADI,EAEZE,OAAQ,CAFI,EAGZC,KAAMH,QAAOI,CAAAA,UAAWD,CAAAA,IAHZ,CAFT,GAO+B,gBAA/B,KAAIV,QAASG,CAAAA,aAAb,GAELD,WAFK,GAES,CACZK,OAAQ9B,QAAS8B,CAAAA,MAAOC,CAAAA,YAAhB,CAA6BI,QAAeL,CAAAA,MAA5C,CADI,EAEZE,OAAQG,QAAeH,CAAAA,MAFX;AAGZC,aAAME,QAAeF,CAAAA,IAHT,CAFT,GAO+B,gBAA/B,KAAIV,QAASG,CAAAA,aAAb,GAELD,WAFK,GAESzB,QAASoC,CAAAA,OAAQC,CAAAA,aAAjB,CADEd,QACF,CAFT,GAG+B,eAH/B,KAGIA,QAASG,CAAAA,aAHb,KAKLD,WALK,GAKSzB,QAASoC,CAAAA,OAAQE,CAAAA,YAAjB,CADEf,QACF,CAAuCgB,CAAAA,UAAvC,CAAkD,EAAlD,CALT,CAvBP;AA8BAlB,eAAQmB,CAAAA,IAAR,CAAa,CACXC,QAAStB,WAAA,CAAYG,CAAZ,CADE,EAEXC,SAAUE,WAFC,CAAb,CAAA;AAjC2B;AAsCvBL,aAAAA,GAASpB,QAAS0C,CAAAA,MAAOC,CAAAA,cAAhB,CAA+B/B,OAA/B,CAAwCgC,CAAAA,UAAxC,CAAmD/B,UAAnD,CAATO;AACAyB,YAAAA,GAAe3B,MAAO4B,CAAAA,eAAP,CAAuB,CAC1C1B,OAAAA,OAD0C,EAE1CC,OAF0C,CAAvB,CAAfwB;AAKN,aADA,IAAK5C,CAAAA,KAAL,CAAWgB,KAAMF,CAAAA,IAAjB,CACA,GADyB8B,MACzB;AAjD2C;AAmD7CE,WAAO,EAAG;AACR,WAAK,MAAMC,GAAX,IAAkB9C,MAAO+C,CAAAA,IAAP,CAAY,IAAKhD,CAAAA,KAAjB,CAAlB;AACE,YAAKA,CAAAA,KAAL,CAAW+C,GAAX,CAAA,GAAkB,IAAlB;AADF;AAIA,UAAK5C,CAAAA,SAAL,GADA,IAAKH,CAAAA,KACL,GADa,IACb;AALQ;AAjEZ;AA0EAH,iBAAgBoD,CAAAA,SAAhB,GAA4B,CAC1BC,KAAM,CACJtD,MAAWuD,CAAAA,aAAcC,CAAAA,YADrB,CADoB,EAI1BC,KAAM,WAJoB,CAA5B;AAOA1D,SAAQE,CAAAA,eAAR,GAA0BA,eAA1B;AAvFwI,CAAxI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gpu/BindGroupSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gpu$BindGroupSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\n\n\"use strict\";\nclass BindGroupSystem {\n  constructor(renderer) {\n    this._hash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_hash\");\n  }\n  contextChange(gpu) {\n    this._gpu = gpu;\n  }\n  getBindGroup(bindGroup, program, groupIndex) {\n    bindGroup._updateKey();\n    const gpuBindGroup = this._hash[bindGroup._key] || this._createBindGroup(bindGroup, program, groupIndex);\n    return gpuBindGroup;\n  }\n  _createBindGroup(group, program, groupIndex) {\n    const device = this._gpu.device;\n    const groupLayout = program.layout[groupIndex];\n    const entries = [];\n    const renderer = this._renderer;\n    for (const j in groupLayout) {\n      const resource = group.resources[j] ?? group.resources[groupLayout[j]];\n      let gpuResource;\n      if (resource._resourceType === \"uniformGroup\") {\n        const uniformGroup = resource;\n        renderer.ubo.updateUniformGroup(uniformGroup);\n        const buffer = uniformGroup.buffer;\n        gpuResource = {\n          buffer: renderer.buffer.getGPUBuffer(buffer),\n          offset: 0,\n          size: buffer.descriptor.size\n        };\n      } else if (resource._resourceType === \"buffer\") {\n        const buffer = resource;\n        gpuResource = {\n          buffer: renderer.buffer.getGPUBuffer(buffer),\n          offset: 0,\n          size: buffer.descriptor.size\n        };\n      } else if (resource._resourceType === \"bufferResource\") {\n        const bufferResource = resource;\n        gpuResource = {\n          buffer: renderer.buffer.getGPUBuffer(bufferResource.buffer),\n          offset: bufferResource.offset,\n          size: bufferResource.size\n        };\n      } else if (resource._resourceType === \"textureSampler\") {\n        const sampler = resource;\n        gpuResource = renderer.texture.getGpuSampler(sampler);\n      } else if (resource._resourceType === \"textureSource\") {\n        const texture = resource;\n        gpuResource = renderer.texture.getGpuSource(texture).createView({});\n      }\n      entries.push({\n        binding: groupLayout[j],\n        resource: gpuResource\n      });\n    }\n    const layout = renderer.shader.getProgramData(program).bindGroups[groupIndex];\n    const gpuBindGroup = device.createBindGroup({\n      layout,\n      entries\n    });\n    this._hash[group._key] = gpuBindGroup;\n    return gpuBindGroup;\n  }\n  destroy() {\n    for (const key of Object.keys(this._hash)) {\n      this._hash[key] = null;\n    }\n    this._hash = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nBindGroupSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGPUSystem\n  ],\n  name: \"bindGroup\"\n};\n\nexports.BindGroupSystem = BindGroupSystem;\n//# sourceMappingURL=BindGroupSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","BindGroupSystem","constructor","renderer","_hash","Object","create","_renderer","renderableGC","addManagedHash","contextChange","gpu","_gpu","getBindGroup","bindGroup","program","groupIndex","_updateKey","_key","_createBindGroup","group","device","groupLayout","layout","entries","j","resource","resources","gpuResource","_resourceType","ubo","updateUniformGroup","uniformGroup","buffer","getGPUBuffer","offset","size","descriptor","bufferResource","texture","getGpuSampler","getGpuSource","createView","push","binding","shader","getProgramData","bindGroups","gpuBindGroup","createBindGroup","destroy","key","keys","extension","type","ExtensionType","WebGPUSystem","name"]
}
