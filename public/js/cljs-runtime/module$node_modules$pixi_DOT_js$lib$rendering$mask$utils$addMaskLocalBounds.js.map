{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$mask$utils$addMaskLocalBounds.js",
"lineCount":24,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,GAAgG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAmBxIC,UAASA,0BAAyB,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,CAAuB;AACvD,QAAI,CAACF,MAAL;AAEE,aADAG,IAAKA,CAAAA,IAAL,CAAU,0DAAV,CACOD,EAAAA,MAAP;AAFF;AAIIF,UAAJ,KAAeC,IAAf,KACEF,yBAAA,CAA0BC,MAAOI,CAAAA,MAAjC,EAAyCH,IAAzC,EAA+CC,MAA/C,CAEA,EADAF,MAAOK,CAAAA,oBAAP,EACA,EAAAH,MAAOI,CAAAA,MAAP,CAAcN,MAAOO,CAAAA,cAArB,CAHF;AAKA,WAAOL,MAAP;AAVuD;AAhBzD,MAAIM,iBAAiBZ,OAAA,CAAQ,2EAAR,CAArB,EACIa,sBAAsBb,OAAA,CAAQ,sFAAR,CAD1B,EAEIO,OAAOP,OAAA,CAAQ,wDAAR,CAFX;AAIA,cAAA;AAyBAE,SAAQY,CAAAA,kBAAR,GAxBAA,QAA2B,CAACC,IAAD,EAAOC,MAAP,EAAeC,SAAf,CAA0B;AACnD,UAAMC,eAAeL,mBAAoBM,CAAAA,UAAWC,CAAAA,GAA/B,EAArB;AACAL,QAAKM,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACA,UAAMC,aAAaT,mBAAoBU,CAAAA,UAAWH,CAAAA,GAA/B,EAAqCI,CAAAA,QAArC,EAAnB;AACMC,aAAAA,GAAetB,yBAAA,CAA0BY,IAA1B,EAAgCE,SAAhC,EAA2CK,UAA3C,CAAfG;AACNb,kBAAeA,CAAAA,cAAf,CAA8BG,IAA9B,EAAoCG,YAApC,EAAkDO,SAAlD,CAAA;AACAV,QAAKM,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACAL,UAAOU,CAAAA,aAAP,CAAqBR,YAArB,CAAA;AACAL,uBAAoBU,CAAAA,UAAWI,CAAAA,MAA/B,CAAsCL,UAAtC,CAAA;AACAT,uBAAoBM,CAAAA,UAAWQ,CAAAA,MAA/B,CAAsCT,YAAtC,CAAA;AATmD,GAwBrD;AACAhB,SAAQC,CAAAA,yBAAR,GAAoCA,yBAApC;AAjCwI,CAAxI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/mask/utils/addMaskLocalBounds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$mask$utils$addMaskLocalBounds\"] = function(global,require,module,exports) {\n'use strict';\n\nvar getLocalBounds = require('../../../scene/container/bounds/getLocalBounds.js');\nvar matrixAndBoundsPool = require('../../../scene/container/bounds/utils/matrixAndBoundsPool.js');\nvar warn = require('../../../utils/logging/warn.js');\n\n\"use strict\";\nfunction addMaskLocalBounds(mask, bounds, localRoot) {\n  const boundsToMask = matrixAndBoundsPool.boundsPool.get();\n  mask.measurable = true;\n  const tempMatrix = matrixAndBoundsPool.matrixPool.get().identity();\n  const relativeMask = getMatrixRelativeToParent(mask, localRoot, tempMatrix);\n  getLocalBounds.getLocalBounds(mask, boundsToMask, relativeMask);\n  mask.measurable = false;\n  bounds.addBoundsMask(boundsToMask);\n  matrixAndBoundsPool.matrixPool.return(tempMatrix);\n  matrixAndBoundsPool.boundsPool.return(boundsToMask);\n}\nfunction getMatrixRelativeToParent(target, root, matrix) {\n  if (!target) {\n    warn.warn(\"Mask bounds, renderable is not inside the root container\");\n    return matrix;\n  }\n  if (target !== root) {\n    getMatrixRelativeToParent(target.parent, root, matrix);\n    target.updateLocalTransform();\n    matrix.append(target.localTransform);\n  }\n  return matrix;\n}\n\nexports.addMaskLocalBounds = addMaskLocalBounds;\nexports.getMatrixRelativeToParent = getMatrixRelativeToParent;\n//# sourceMappingURL=addMaskLocalBounds.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","getMatrixRelativeToParent","target","root","matrix","warn","parent","updateLocalTransform","append","localTransform","getLocalBounds","matrixAndBoundsPool","addMaskLocalBounds","mask","bounds","localRoot","boundsToMask","boundsPool","get","measurable","tempMatrix","matrixPool","identity","relativeMask","addBoundsMask","return"]
}
