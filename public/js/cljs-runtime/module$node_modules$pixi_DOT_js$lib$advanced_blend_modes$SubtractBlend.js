shadow$provide.module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SubtractBlend = function(global, require, module, exports) {
  global = require("module$node_modules$pixi_DOT_js$lib$extensions$Extensions");
  require = require("module$node_modules$pixi_DOT_js$lib$filters$blend_modes$BlendModeFilter");
  "use strict";
  class SubtractBlend extends require.BlendModeFilter {
    constructor() {
      super({gl:{functions:"\n                float subtract(float base, float blend)\n                {\n                    return max(0.0, base - blend);\n                }\n\n                vec3 blendSubtract(vec3 base, vec3 blend, float opacity)\n                {\n                    vec3 blended \x3d vec3(\n                        subtract(base.r, blend.r),\n                        subtract(base.g, blend.g),\n                        subtract(base.b, blend.b)\n                    );\n\n                    return (blended * opacity + base * (1.0 - opacity));\n                }\n                ", 
      main:"\n                finalColor \x3d vec4(blendSubtract(back.rgb, front.rgb, front.a), blendedAlpha) * uBlend;\n                "}, gpu:{functions:"\n                fn subtract(base: f32, blend: f32) -\x3e f32\n                {\n                    return max(0, base - blend);\n                }\n\n                fn blendSubtract(base:vec3\x3cf32\x3e,  blend:vec3\x3cf32\x3e,  opacity:f32) -\x3e vec3\x3cf32\x3e\n                {\n                    let blended \x3d vec3\x3cf32\x3e(\n                        subtract(base.r, blend.r),\n                        subtract(base.g, blend.g),\n                        subtract(base.b, blend.b)\n                    );\n\n                    return (blended * opacity + base * (1.0 - opacity));\n                }\n                ", 
      main:"\n                out \x3d vec4\x3cf32\x3e(blendSubtract(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n                "}});
    }
  }
  SubtractBlend.extension = {name:"subtract", type:global.ExtensionType.BlendMode};
  exports.SubtractBlend = SubtractBlend;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SubtractBlend.js.map
