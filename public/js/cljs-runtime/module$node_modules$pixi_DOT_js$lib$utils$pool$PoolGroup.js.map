{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$utils$pool$PoolGroup.js",
"lineCount":33,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,GAA6E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGrH,MAAIC,OAAOH,OAAA,CAAQ,qDAAR,CAAX;AAEA,cAAA;AACA,OAAMI,eAAN;AACEC,eAAW,EAAG;AAKZ,UAAKC,CAAAA,aAAL,GAAqC,IAAIC,GAAJ,EAArC;AALY;AAadC,eAAW,CAACC,KAAD,EAAQC,KAAR,CAAe;AACN,UAAKC,CAAAA,OAALC,CAAaH,KAAbG,CACRJ,CAAAA,WAAV,CAAsBE,KAAtB,CAAA;AAFwB;AAW1BG,OAAG,CAACJ,KAAD,EAAQK,IAAR,CAAc;AAEf,aADa,IAAKH,CAAAA,OAALI,CAAaN,KAAbM,CACDF,CAAAA,GAAL,CAASC,IAAT,CAAP;AAFe;AAQjBE,UAAM,CAACC,IAAD,CAAO;AACE,UAAKN,CAAAA,OAALI,CAAaE,IAAKZ,CAAAA,WAAlBU,CACRC,CAAAA,MAAL,CAAYC,IAAZ,CAAA;AAFW;AAUbN,WAAO,CAACO,SAAD,CAAY;AACZ,UAAKZ,CAAAA,aAAca,CAAAA,GAAnB,CAAuBD,SAAvB,CAAL,IACE,IAAKZ,CAAAA,aAAcc,CAAAA,GAAnB,CAAuBF,SAAvB,EAAkC,IAAIf,IAAKA,CAAAA,IAAT,CAAce,SAAd,CAAlC,CADF;AAGA,aAAO,IAAKZ,CAAAA,aAAcO,CAAAA,GAAnB,CAAuBK,SAAvB,CAAP;AAJiB;AAOnBG,SAAK,EAAG;AACN,YAAMA,QAAQ,EAAd;AACA,UAAKf,CAAAA,aAAcgB,CAAAA,OAAnB,CAA4BP,IAAD,IAAU;AAEnCM,aAAA,CADaA,KAAA,CAAMN,IAAKQ,CAAAA,UAAWC,CAAAA,IAAtB,CAAAA,GAA8BT,IAAKQ,CAAAA,UAAWC,CAAAA,IAA9CA,GAAqDT,IAAKQ,CAAAA,UAAWE,CAAAA,EAArED,GAA0ET,IAAKQ,CAAAA,UAAWC,CAAAA,IACvG,CAAA,GAAc,CACZE,KAAMX,IAAKY,CAAAA,SADC,EAEZC,KAAMb,IAAKc,CAAAA,SAFC,EAGZC,KAAMf,IAAKgB,CAAAA,SAHC,CAAd;AAFmC,OAArC,CAAA;AAQA,aAAOV,KAAP;AAVM;AAlDV;AA+DMW,QAAAA,GAAU,IAAI5B,cAAJ,EAAV4B;AAEN9B,SAAQ8B,CAAAA,OAAR,GAAkBA,MAAlB;AACA9B,SAAQE,CAAAA,cAAR,GAAyBA,cAAzB;AAxEqH,CAArH;;",
"sources":["node_modules/pixi_DOT_js/lib/utils/pool/PoolGroup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$utils$pool$PoolGroup\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Pool = require('./Pool.js');\n\n\"use strict\";\nclass PoolGroupClass {\n  constructor() {\n    /**\n     * A map to store the pools by their class type.\n     * @private\n     */\n    this._poolsByClass = /* @__PURE__ */ new Map();\n  }\n  /**\n   * Prepopulates a specific pool with a given number of items.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n   * @param {number} total - The number of items to add to the pool.\n   */\n  prepopulate(Class, total) {\n    const classPool = this.getPool(Class);\n    classPool.prepopulate(total);\n  }\n  /**\n   * Gets an item from a specific pool.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n   * @param {unknown} [data] - Optional data to pass to the item's constructor.\n   * @returns {T} The item from the pool.\n   */\n  get(Class, data) {\n    const pool = this.getPool(Class);\n    return pool.get(data);\n  }\n  /**\n   * Returns an item to its respective pool.\n   * @param {PoolItem} item - The item to return to the pool.\n   */\n  return(item) {\n    const pool = this.getPool(item.constructor);\n    pool.return(item);\n  }\n  /**\n   * Gets a specific pool based on the class type.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} ClassType - The constructor of the items in the pool.\n   * @returns {Pool<T>} The pool of the given class type.\n   */\n  getPool(ClassType) {\n    if (!this._poolsByClass.has(ClassType)) {\n      this._poolsByClass.set(ClassType, new Pool.Pool(ClassType));\n    }\n    return this._poolsByClass.get(ClassType);\n  }\n  /** gets the usage stats of each pool in the system */\n  stats() {\n    const stats = {};\n    this._poolsByClass.forEach((pool) => {\n      const name = stats[pool._classType.name] ? pool._classType.name + pool._classType.ID : pool._classType.name;\n      stats[name] = {\n        free: pool.totalFree,\n        used: pool.totalUsed,\n        size: pool.totalSize\n      };\n    });\n    return stats;\n  }\n}\nconst BigPool = new PoolGroupClass();\n\nexports.BigPool = BigPool;\nexports.PoolGroupClass = PoolGroupClass;\n//# sourceMappingURL=PoolGroup.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Pool","PoolGroupClass","constructor","_poolsByClass","Map","prepopulate","Class","total","getPool","classPool","get","data","pool","return","item","ClassType","has","set","stats","forEach","_classType","name","ID","free","totalFree","used","totalUsed","size","totalSize","BigPool"]
}
