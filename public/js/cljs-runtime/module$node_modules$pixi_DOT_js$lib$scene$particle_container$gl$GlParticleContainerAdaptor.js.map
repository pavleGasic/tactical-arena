{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$particle_container$gl$GlParticleContainerAdaptor.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,GAA+G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAIvJ,OAAMC,2BAAN;AACEC,WAAO,CAACC,qBAAD,EAAwBC,SAAxB,CAAmC;AACxC,YAAMC,QAAQF,qBAAsBE,CAAAA,KAApC,EACMC,WAAWH,qBAAsBG,CAAAA,QADvC,EAEMC,SAASH,SAAUG,CAAAA,MAAnBA,IAA6BJ,qBAAsBK,CAAAA,aAFzD;AAGAD,YAAOE,CAAAA,SAAUC,CAAAA,QAAjB,GAA4BN,SAAUO,CAAAA,OAAQC,CAAAA,OAA9C;AACAL,YAAOE,CAAAA,SAAUI,CAAAA,QAAjB,GAA4BV,qBAAsBW,CAAAA,aAAlD;AACA,YAAMC,KAAKT,QAASS,CAAAA,EAApB;AACMC,2BAAAA,GAASb,qBAAsBc,CAAAA,UAAtB,CAAiCb,SAAjC,CAATY;AACNV,cAASC,CAAAA,MAAOW,CAAAA,IAAhB,CAAqBX,MAArB,CAAA;AACAD,cAASD,CAAAA,KAAMc,CAAAA,GAAf,CAAmBd,KAAnB,CAAA;AACAC,cAASc,CAAAA,QAASF,CAAAA,IAAlB,CAAuBF,qBAAOI,CAAAA,QAA9B,EAAwCb,MAAOc,CAAAA,SAA/C,CAAA;AAGAN,QAAGO,CAAAA,YAAH,CAAgBP,EAAGQ,CAAAA,SAAnB,EAAkE,CAAlE,GAA8BnB,SAAUoB,CAAAA,gBAAiBC,CAAAA,MAAzD,EAD4B,CAAbC,KADEV,qBAAOI,CAAAA,QAASO,CAAAA,WAAYC,CAAAA,IAAKC,CAAAA,iBACnCH,GAAiBX,EAAGe,CAAAA,cAApBJ,GAAqCX,EAAGgB,CAAAA,YACvD,EAA6E,CAA7E,CAAA;AAbwC;AAD5C;AAkBA/B,SAAQC,CAAAA,0BAAR,GAAqCA,0BAArC;AAtBuJ,CAAvJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/particle-container/gl/GlParticleContainerAdaptor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$particle_container$gl$GlParticleContainerAdaptor\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nclass GlParticleContainerAdaptor {\n  execute(particleContainerPipe, container) {\n    const state = particleContainerPipe.state;\n    const renderer = particleContainerPipe.renderer;\n    const shader = container.shader || particleContainerPipe.defaultShader;\n    shader.resources.uTexture = container.texture._source;\n    shader.resources.uniforms = particleContainerPipe.localUniforms;\n    const gl = renderer.gl;\n    const buffer = particleContainerPipe.getBuffers(container);\n    renderer.shader.bind(shader);\n    renderer.state.set(state);\n    renderer.geometry.bind(buffer.geometry, shader.glProgram);\n    const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n    const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n    gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n  }\n}\n\nexports.GlParticleContainerAdaptor = GlParticleContainerAdaptor;\n//# sourceMappingURL=GlParticleContainerAdaptor.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","GlParticleContainerAdaptor","execute","particleContainerPipe","container","state","renderer","shader","defaultShader","resources","uTexture","texture","_source","uniforms","localUniforms","gl","buffer","getBuffers","bind","set","geometry","glProgram","drawElements","TRIANGLES","particleChildren","length","glType","indexBuffer","data","BYTES_PER_ELEMENT","UNSIGNED_SHORT","UNSIGNED_INT"]
}
