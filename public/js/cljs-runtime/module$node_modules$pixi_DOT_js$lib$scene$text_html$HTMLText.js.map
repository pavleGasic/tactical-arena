{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLText.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,GAAiF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGzH,MAAIC,eAAeH,OAAA,CAAQ,6DAAR,CAAnB,EACII,gBAAgBJ,OAAA,CAAQ,mEAAR,CADpB,EAEIK,kBAAkBL,OAAA,CAAQ,2EAAR,CAFtB;AAIA,cAAA;AACA,OAAMM,SAAN,QAAuBH,aAAaA,CAAAA,YAApC;AACEI,eAAW,CAAC,GAAGC,IAAJ,CAAU;AAEnB,WAAA,CADgBL,YAAaM,CAAAA,iBAAbC,CAA+BF,IAA/BE,EAAqC,UAArCA,CAChB,EAAeN,aAAcA,CAAAA,aAA7B,CAAA;AACA,UAAKO,CAAAA,YAAL,GAAoB,UAApB;AAHmB;AAMrBC,gBAAY,EAAG;AACb,YAAMC,SAAS,IAAKC,CAAAA,OAApB,EACMC,SAAS,IAAKC,CAAAA,OADpB,EAEMC,kBAAkBZ,eAAgBA,CAAAA,eAAhB,CAAgC,IAAKa,CAAAA,IAArC,EAA2C,IAAKC,CAAAA,MAAhD,CAFxB,EAGM,CAAEC,KAAF,EAASC,MAAT,CAAA,GAAoBJ,eAH1B;AAIAJ,YAAOS,CAAAA,IAAP,GAAc,CAACP,MAAOQ,CAAAA,EAAtB,GAA2BH,KAA3B;AACAP,YAAOW,CAAAA,IAAP,GAAcX,MAAOS,CAAAA,IAArB,GAA4BF,KAA5B;AACAP,YAAOY,CAAAA,IAAP,GAAc,CAACV,MAAOW,CAAAA,EAAtB,GAA2BL,MAA3B;AACAR,YAAOc,CAAAA,IAAP,GAAcd,MAAOY,CAAAA,IAArB,GAA4BJ,MAA5B;AARa;AAPjB;AAmBAnB,SAAQI,CAAAA,QAAR,GAAmBA,QAAnB;AA3ByH,CAAzH;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text-html/HTMLText.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text_html$HTMLText\"] = function(global,require,module,exports) {\n'use strict';\n\nvar AbstractText = require('../text/AbstractText.js');\nvar HTMLTextStyle = require('./HTMLTextStyle.js');\nvar measureHtmlText = require('./utils/measureHtmlText.js');\n\n\"use strict\";\nclass HTMLText extends AbstractText.AbstractText {\n  constructor(...args) {\n    const options = AbstractText.ensureTextOptions(args, \"HtmlText\");\n    super(options, HTMLTextStyle.HTMLTextStyle);\n    this.renderPipeId = \"htmlText\";\n  }\n  /** @private */\n  updateBounds() {\n    const bounds = this._bounds;\n    const anchor = this._anchor;\n    const htmlMeasurement = measureHtmlText.measureHtmlText(this.text, this._style);\n    const { width, height } = htmlMeasurement;\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n}\n\nexports.HTMLText = HTMLText;\n//# sourceMappingURL=HTMLText.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","AbstractText","HTMLTextStyle","measureHtmlText","HTMLText","constructor","args","ensureTextOptions","options","renderPipeId","updateBounds","bounds","_bounds","anchor","_anchor","htmlMeasurement","text","_style","width","height","minX","_x","maxX","minY","_y","maxY"]
}
