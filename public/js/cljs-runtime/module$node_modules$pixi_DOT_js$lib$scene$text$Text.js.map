{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text$Text.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,GAAwE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhH,MAAIC,eAAeH,OAAA,CAAQ,6DAAR,CAAnB,EACII,oBAAoBJ,OAAA,CAAQ,yEAAR,CADxB,EAEIK,YAAYL,OAAA,CAAQ,0DAAR,CAFhB;AAIA,cAAA;AACA,OAAMM,KAAN,QAAmBH,aAAaA,CAAAA,YAAhC;AACEI,eAAW,CAAC,GAAGC,IAAJ,CAAU;AAEnB,WAAA,CADgBL,YAAaM,CAAAA,iBAAbC,CAA+BF,IAA/BE,EAAqC,MAArCA,CAChB,EAAeL,SAAUA,CAAAA,SAAzB,CAAA;AACA,UAAKM,CAAAA,YAAL,GAAoB,MAApB;AAHmB;AAMrBC,gBAAY,EAAG;AACb,YAAMC,SAAS,IAAKC,CAAAA,OAApB,EACMC,SAAS,IAAKC,CAAAA,OADpB,EAEMC,oBAAoBb,iBAAkBA,CAAAA,iBAAkBc,CAAAA,WAApC,CACxB,IAAKC,CAAAA,KADmB,EAExB,IAAKC,CAAAA,MAFmB,CAF1B,EAMM,CAAEC,KAAF,EAASC,MAAT,CAAA,GAAoBL,iBAN1B;AAOAJ,YAAOU,CAAAA,IAAP,GAAc,CAACR,MAAOS,CAAAA,EAAtB,GAA2BH,KAA3B;AACAR,YAAOY,CAAAA,IAAP,GAAcZ,MAAOU,CAAAA,IAArB,GAA4BF,KAA5B;AACAR,YAAOa,CAAAA,IAAP,GAAc,CAACX,MAAOY,CAAAA,EAAtB,GAA2BL,MAA3B;AACAT,YAAOe,CAAAA,IAAP,GAAcf,MAAOa,CAAAA,IAArB,GAA4BJ,MAA5B;AAXa;AAPjB;AAsBApB,SAAQI,CAAAA,IAAR,GAAeA,IAAf;AA9BgH,CAAhH;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text/Text.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text$Text\"] = function(global,require,module,exports) {\n'use strict';\n\nvar AbstractText = require('./AbstractText.js');\nvar CanvasTextMetrics = require('./canvas/CanvasTextMetrics.js');\nvar TextStyle = require('./TextStyle.js');\n\n\"use strict\";\nclass Text extends AbstractText.AbstractText {\n  constructor(...args) {\n    const options = AbstractText.ensureTextOptions(args, \"Text\");\n    super(options, TextStyle.TextStyle);\n    this.renderPipeId = \"text\";\n  }\n  /** @private */\n  updateBounds() {\n    const bounds = this._bounds;\n    const anchor = this._anchor;\n    const canvasMeasurement = CanvasTextMetrics.CanvasTextMetrics.measureText(\n      this._text,\n      this._style\n    );\n    const { width, height } = canvasMeasurement;\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n}\n\nexports.Text = Text;\n//# sourceMappingURL=Text.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","AbstractText","CanvasTextMetrics","TextStyle","Text","constructor","args","ensureTextOptions","options","renderPipeId","updateBounds","bounds","_bounds","anchor","_anchor","canvasMeasurement","measureText","_text","_style","width","height","minX","_x","maxX","minY","_y","maxY"]
}
