{
"version":3,
"file":"module$node_modules$call_bound$index.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGjG,MAAIC,eAAeH,OAAA,CAAQ,yCAAR,CAAnB,EAEII,gBAAgBJ,OAAA,CAAQ,mDAAR,CAFpB,EAKIK,WAAWD,aAAA,CAAc,CAACD,YAAA,CAAa,4BAAb,CAAD,CAAd,CALf;AAQAF,QAAOC,CAAAA,OAAP,GAAiBI,QAA2B,CAACC,IAAD,EAAOC,YAAP,CAAqB;AAG5DC,gBAAAA,GAA2EN,YAAA,CAAaI,IAAb,EAAmB,CAAC,CAACC,YAArB,CAA3EC;AACJ,WAAyB,UAAzB,KAAI,MAAOA,aAAX,IAAuE,CAAC,CAAxE,GAAuCJ,QAAA,CAASE,IAAT,EAAe,aAAf,CAAvC,GACQH,aAAA,CAAoC,CAACK,YAAD,CAApC,CADR,GAGOA,YAHP;AAJgE,GAAjE;AAXiG,CAAjG;;",
"sources":["node_modules/call-bound/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$call_bound$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetIntrinsic","callBindBasic","$indexOf","module.exports","name","allowMissing","intrinsic"]
}
