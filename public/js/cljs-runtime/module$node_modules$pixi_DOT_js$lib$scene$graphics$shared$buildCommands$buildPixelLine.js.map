{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildPixelLine.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,sFAAA,GAA2G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGnJ,MAAIC,SAASH,OAAA,CAAQ,iEAAR,CAAb;AAEA,cAAA;AA0BAE,SAAQE,CAAAA,cAAR,GAzBAA,QAAuB,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,CAAoC;AACzD,QAAMC,MAAMN,MAAOO,CAAAA,aAAnB;AACA,QAAsB,CAAtB,KAAIL,MAAOM,CAAAA,MAAX,CAAA;AAGA,UAAMC,KAAKP,MAAA,CAAO,CAAP,CAAX,EACMQ,KAAKR,MAAA,CAAO,CAAP,CADX,EAEMS,KAAKT,MAAA,CAAOA,MAAOM,CAAAA,MAAd,GAAuB,CAAvB,CAFX,EAGMI,KAAKV,MAAA,CAAOA,MAAOM,CAAAA,MAAd,GAAuB,CAAvB,CAHX;AAIMK,YAAAA,GAAYV,MAAZU,IAAsBC,IAAKC,CAAAA,GAAL,CAASN,EAAT,GAAcE,EAAd,CAAtBE,GAA0CP,GAA1CO,IAAiDC,IAAKC,CAAAA,GAAL,CAASL,EAAT,GAAcE,EAAd,CAAjDC,GAAqEP,GAArEO;AAEAL,SAAAA,GAASN,MAAOM,CAAAA,MAAhBA,GAAyB,CAAzBA;AACAQ,QAAAA,GAFQZ,QAEWI,CAAAA,MAAnBQ,GAA4B,CAA5BA;AACN,WAASC,EAAT,GAAa,CAAb,EAAgBA,EAAhB,GAAoBT,GAApB,EAA4BS,EAAA,EAA5B;AAHcb,gBAINc,CAAAA,IAAN,CAAWhB,MAAA,CAAW,CAAX,GAAOe,EAAP,CAAX,CACA,EALYb,QAKNc,CAAAA,IAAN,CAAWhB,MAAA,CAAW,CAAX,GAAOe,EAAP,GAAe,CAAf,CAAX,CAAA;AAFF;AAIA,WAASA,MAAT,GAAa,CAAb,EAAgBA,MAAhB,GAAoBT,GAApB,GAA6B,CAA7B,EAAgCS,MAAA,EAAhC;AACEZ,eAAQa,CAAAA,IAAR,CAAaF,EAAb,GAA0BC,MAA1B,EAA6BD,EAA7B,GAA0CC,MAA1C,GAA8C,CAA9C,CAAA;AADF;AAGIJ,YAAJ,IACER,OAAQa,CAAAA,IAAR,CAAaF,EAAb,GAA0BR,GAA1B,GAAmC,CAAnC,EAAsCQ,EAAtC,CADF;AAlBA;AAFyD,GAyB3D;AA/BmJ,CAAnJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/buildCommands/buildPixelLine.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildPixelLine\"] = function(global,require,module,exports) {\n'use strict';\n\nvar _const = require('../const.js');\n\n\"use strict\";\nfunction buildPixelLine(points, closed, vertices, indices) {\n  const eps = _const.closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const fx = points[0];\n  const fy = points[1];\n  const lx = points[points.length - 2];\n  const ly = points[points.length - 1];\n  const closePath = closed || Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps;\n  const verts = vertices;\n  const length = points.length / 2;\n  const indexStart = verts.length / 2;\n  for (let i = 0; i < length; i++) {\n    verts.push(points[i * 2]);\n    verts.push(points[i * 2 + 1]);\n  }\n  for (let i = 0; i < length - 1; i++) {\n    indices.push(indexStart + i, indexStart + i + 1);\n  }\n  if (closePath) {\n    indices.push(indexStart + length - 1, indexStart);\n  }\n}\n\nexports.buildPixelLine = buildPixelLine;\n//# sourceMappingURL=buildPixelLine.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_const","buildPixelLine","points","closed","vertices","indices","eps","closePointEps","length","fx","fy","lx","ly","closePath","Math","abs","indexStart","i","push"]
}
