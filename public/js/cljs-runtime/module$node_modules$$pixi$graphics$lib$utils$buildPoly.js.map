{
"version":3,
"file":"module$node_modules$$pixi$graphics$lib$utils$buildPoly.js",
"lineCount":53,
"mappings":"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",
"sources":["node_modules/@pixi/graphics/lib/utils/buildPoly.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$graphics$lib$utils$buildPoly\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nfunction fixOrientation(points, hole = !1) {\n  const m = points.length;\n  if (m < 6)\n    return;\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i], y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1), x1 = x2, y1 = y2;\n  }\n  if (!hole && area > 0 || hole && area <= 0) {\n    const n = m / 2;\n    for (let i = n + n % 2; i < m; i += 2) {\n      const i1 = m - i - 2, i2 = m - i - 1, i3 = i, i4 = i + 1;\n      [points[i1], points[i3]] = [points[i3], points[i1]], [points[i2], points[i4]] = [points[i4], points[i2]];\n    }\n  }\n}\nconst buildPoly = {\n  build(graphicsData) {\n    graphicsData.points = graphicsData.shape.points.slice();\n  },\n  triangulate(graphicsData, graphicsGeometry) {\n    let points = graphicsData.points;\n    const holes = graphicsData.holes, verts = graphicsGeometry.points, indices = graphicsGeometry.indices;\n    if (points.length >= 6) {\n      fixOrientation(points, !1);\n      const holeArray = [];\n      for (let i = 0; i < holes.length; i++) {\n        const hole = holes[i];\n        fixOrientation(hole.points, !0), holeArray.push(points.length / 2), points = points.concat(hole.points);\n      }\n      const triangles = core.utils.earcut(points, holeArray, 2);\n      if (!triangles)\n        return;\n      const vertPos = verts.length / 2;\n      for (let i = 0; i < triangles.length; i += 3)\n        indices.push(triangles[i] + vertPos), indices.push(triangles[i + 1] + vertPos), indices.push(triangles[i + 2] + vertPos);\n      for (let i = 0; i < points.length; i++)\n        verts.push(points[i]);\n    }\n  }\n};\nexports.buildPoly = buildPoly;\n//# sourceMappingURL=buildPoly.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","fixOrientation","points","hole","m","length","area","i","x1","y1","x2","y2","n","i1","i2","i3","i4","core","buildPoly","build","graphicsData","shape","slice","triangulate","graphicsGeometry","holes","verts","indices","holeArray","push","concat","triangles","utils","earcut","vertPos"]
}
