shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$buildUvs = function(global, require, module, exports) {
  exports.buildSimpleUvs = function(uvs, uvsOffset, uvsStride, size) {
    let index = 0;
    for (uvsOffset *= uvsStride; index < size;) {
      uvs[uvsOffset] = 0, uvs[uvsOffset + 1] = 0, uvsOffset += uvsStride, index++;
    }
  };
  exports.buildUvs = function(vertices, verticesStride, verticesOffset, uvs, uvsOffset, uvsStride, size, matrix = null) {
    let index = 0;
    verticesOffset *= verticesStride;
    uvsOffset *= uvsStride;
    const a = matrix.a, b = matrix.b, c = matrix.c, d = matrix.d, tx = matrix.tx;
    for (matrix = matrix.ty; index < size;) {
      const x = vertices[verticesOffset], y = vertices[verticesOffset + 1];
      uvs[uvsOffset] = a * x + c * y + tx;
      uvs[uvsOffset + 1] = b * x + d * y + matrix;
      uvsOffset += uvsStride;
      verticesOffset += verticesStride;
      index++;
    }
  };
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$geometry$utils$buildUvs.js.map
