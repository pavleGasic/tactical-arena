{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$container$bounds$getGlobalBounds.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/container/bounds/getGlobalBounds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$container$bounds$getGlobalBounds\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Matrix = require('../../../maths/matrix/Matrix.js');\nvar matrixAndBoundsPool = require('./utils/matrixAndBoundsPool.js');\n\n\"use strict\";\nfunction getGlobalBounds(target, skipUpdateTransform, bounds) {\n  bounds.clear();\n  let parentTransform;\n  let pooledMatrix;\n  if (target.parent) {\n    if (!skipUpdateTransform) {\n      pooledMatrix = matrixAndBoundsPool.matrixPool.get().identity();\n      parentTransform = updateTransformBackwards(target, pooledMatrix);\n    } else {\n      parentTransform = target.parent.worldTransform;\n    }\n  } else {\n    parentTransform = Matrix.Matrix.IDENTITY;\n  }\n  _getGlobalBounds(target, bounds, parentTransform, skipUpdateTransform);\n  if (pooledMatrix) {\n    matrixAndBoundsPool.matrixPool.return(pooledMatrix);\n  }\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  return bounds;\n}\nfunction _getGlobalBounds(target, bounds, parentTransform, skipUpdateTransform) {\n  if (!target.visible || !target.measurable)\n    return;\n  let worldTransform;\n  if (!skipUpdateTransform) {\n    target.updateLocalTransform();\n    worldTransform = matrixAndBoundsPool.matrixPool.get();\n    worldTransform.appendFrom(target.localTransform, parentTransform);\n  } else {\n    worldTransform = target.worldTransform;\n  }\n  const parentBounds = bounds;\n  const preserveBounds = !!target.effects.length;\n  if (preserveBounds) {\n    bounds = matrixAndBoundsPool.boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, worldTransform);\n  } else {\n    if (target.bounds) {\n      bounds.matrix = worldTransform;\n      bounds.addBounds(target.bounds);\n    }\n    for (let i = 0; i < target.children.length; i++) {\n      _getGlobalBounds(target.children[i], bounds, worldTransform, skipUpdateTransform);\n    }\n  }\n  if (preserveBounds) {\n    for (let i = 0; i < target.effects.length; i++) {\n      target.effects[i].addBounds?.(bounds);\n    }\n    parentBounds.addBounds(bounds, Matrix.Matrix.IDENTITY);\n    matrixAndBoundsPool.boundsPool.return(bounds);\n  }\n  if (!skipUpdateTransform) {\n    matrixAndBoundsPool.matrixPool.return(worldTransform);\n  }\n}\nfunction updateTransformBackwards(target, parentTransform) {\n  const parent = target.parent;\n  if (parent) {\n    updateTransformBackwards(parent, parentTransform);\n    parent.updateLocalTransform();\n    parentTransform.append(parent.localTransform);\n  }\n  return parentTransform;\n}\n\nexports._getGlobalBounds = _getGlobalBounds;\nexports.getGlobalBounds = getGlobalBounds;\nexports.updateTransformBackwards = updateTransformBackwards;\n//# sourceMappingURL=getGlobalBounds.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_getGlobalBounds","target","bounds","parentTransform","skipUpdateTransform","visible","measurable","worldTransform","updateLocalTransform","matrixAndBoundsPool","matrixPool","get","appendFrom","localTransform","parentBounds","preserveBounds","effects","length","boundsPool","clear","boundsArea","addRect","matrix","addBounds","i","children","Matrix","IDENTITY","return","updateTransformBackwards","parent","append","getGlobalBounds","pooledMatrix","identity","isValid","set"]
}
