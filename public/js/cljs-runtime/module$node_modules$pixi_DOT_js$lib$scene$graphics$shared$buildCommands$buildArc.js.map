{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildArc.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,GAAqG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AA0B7IA,SAAQC,CAAAA,QAAR,GAtBAA,QAAiB,CAACC,MAAD,EAASC,CAAT,EAAYC,CAAZ,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,SAAnC,EAA8CC,KAA9C,CAAqD;AACpE,QAAIC,OAAOC,IAAKC,CAAAA,GAAL,CAASN,KAAT,GAAiBC,GAAjB,CAAX;AACI,KAACC,SAAL,IAAkBF,KAAlB,GAA0BC,GAA1B,GACEG,IADF,GACS,CADT,GACaC,IAAKE,CAAAA,EADlB,GACuBH,IADvB,GAEWF,SAFX,IAEwBD,GAFxB,GAE8BD,KAF9B,KAGEI,IAHF,GAGS,CAHT,GAGaC,IAAKE,CAAAA,EAHlB,GAGuBH,IAHvB,CAAA;AAKAD,SAAA,KAAUA,KAAV,GAAkBE,IAAKG,CAAAA,GAAL,CAAS,CAAT,EAAYH,IAAKI,CAAAA,KAAL,CAA0CL,IAA1C,GAAiDC,IAAKE,CAAAA,EAAtD,GAAeF,IAAKK,CAAAA,GAAL,CAASX,MAAT,EAAiB,CAAjB,GAAqB,CAArB,CAAf,GAAW,CAAX,CAAZ,CAAlB;AACAI,SAAA,GAAQE,IAAKG,CAAAA,GAAL,CAASL,KAAT,EAAgB,CAAhB,CAAR;AAGAQ,aAAA,GAFQP,IAER,GAFeD,KAEf,IAAKD,SAAA,GAAY,CAAC,CAAb,GAAiB,CAAtB;AACA,SAASU,IAAT,GAAa,CAAb,EAAgBA,IAAhB,GAAoBT,KAApB,GAA4B,CAA5B,EAA+BS,IAAA,EAA/B;AAKEhB,YAAOiB,CAAAA,IAAP,CAFWhB,CAEX,GAJWQ,IAAKS,CAAAA,GAALC,CAASC,KAATD,CAIX,GAFoBhB,MAEpB,EADWD,CACX,GAHWO,IAAKY,CAAAA,GAALC,CAASF,KAATE,CAGX,GADoBnB,MACpB,CACA,EAAAiB,KAAA,IAAKL,SAAL;AANF;AAZoE,GAsBtE;AA1B6I,CAA7I;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/graphics/shared/buildCommands/buildArc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$graphics$shared$buildCommands$buildArc\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nfunction buildArc(points, x, y, radius, start, end, clockwise, steps) {\n  let dist = Math.abs(start - end);\n  if (!clockwise && start > end) {\n    dist = 2 * Math.PI - dist;\n  } else if (clockwise && end > start) {\n    dist = 2 * Math.PI - dist;\n  }\n  steps || (steps = Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / Math.PI))));\n  steps = Math.max(steps, 3);\n  let f = dist / steps;\n  let t = start;\n  f *= clockwise ? -1 : 1;\n  for (let i = 0; i < steps + 1; i++) {\n    const cs = Math.cos(t);\n    const sn = Math.sin(t);\n    const nx = x + cs * radius;\n    const ny = y + sn * radius;\n    points.push(nx, ny);\n    t += f;\n  }\n}\n\nexports.buildArc = buildArc;\n//# sourceMappingURL=buildArc.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildArc","points","x","y","radius","start","end","clockwise","steps","dist","Math","abs","PI","max","floor","pow","f","i","push","cos","cs","t","sin","sn"]
}
