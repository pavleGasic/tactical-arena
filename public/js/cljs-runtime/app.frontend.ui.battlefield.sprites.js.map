{"version":3,"sources":["app/frontend/ui/battlefield/sprites.cljs"],"mappings":";;AAKA,6DAAA,7DAAMA,kIAAwBC,QAAQC,GAAGC,EAAEC;AAA3C,AACE,WAAA,PAAMC;IACAC,SAAOC;IACPC,SAAOD;IACPE,UAAQ,CAAG,AAACC,cAAIR,GAAGG,QAAMC;IACzBK,UAAQ,CAAG,AAACC,WAAW,CAAGV,KAAGG,SAAOG;IACpCK,QAAM,KAAAC,oDAAYL,QAAQE,QAAQL,OAAOE;IACzCO,eAAa,KAAAC,kDAAUf,QAAQY;IAC/BI,SAAO,KAAAC,iDAASH;AAPtB,AAQE,CAAM,AAAKE,WAAQ,CAAA,CAAGd,IAAEG,UAAOa;;AAC/B,CAAM,AAAKF,WAAQ,CAAA,CAAGb,IAAEI,UAAOW;;AAC/B,CAAM,AAAWF,iBAAQE;;AACzB,CAAM,AAAWF,iBAAQE;;AACzBF;;AAEJ,8DAAA,9DAAMG,oIAAyBC,UAAUpB;AAAzC,AACE,IAAMgB,SAAO,KAAAC,iDAASjB;AAAtB,AACE,CAAM,AAAKgB,WAAQ,CAAA,CAAG,AAAA,6EAAII,aAAWd,gDAAiBY;;AACtD,CAAM,AAAKF,WAAQ,CAAA,CAAG,AAAA,8EAAII,aAAWd,gDAAiBY;;AACtD,CAAM,AAAWF,iBAAQE;;AACzB,CAAM,AAAWF,iBAAQE;;AACzB,oBAAA,nBAAM,AAAaF;;AACnB,qBAAA,pBAAM,AAAcA;;AACpB,UAAA,VAAKA,wBACA,WAAKK;AAAL,AACE,uGAAA,WAAAC,3GAACC,mDAAMC;AAAP,AAAyB,OAACC,6CAAK,WAAKC;AAAL,AAAQ,uDAAA,hDAACC,8CAAMD,iEAAa,AAACE,6CAAE,AAAA,gFAAKF,GAAG,AAAA,gFAAKN;GAAlDE;;;;AAChCN;;AAEJ,2DAAA,3DAAMa,8HAAgB3B,EAAEC,EAAE2B;AAA1B,AACE,OAACC,eAAK,WAAKC;AAAL,AACE,OAACD,eAAK,WAAKE;AAAL,AACE,IAAAC,oBAAK,AAACN,6CAAE,AAAA,6EAAIK,MAAM/B;AAAlB,AAAA,GAAAgC;AAAA,IAAAA,wBACK,AAACN,6CAAE,AAAA,8EAAIK,MAAM9B;AADlB,AAAA,GAAA+B;AAEK,OAAA,2FAAYD;;AAFjBC;;;AAAAA;;GAGF,AAAA,oFAAQF;GAChB,AAAA,uFAASF","names":["app.frontend.ui.battlefield.sprites/create-map-tile-sprite","texture","id","x","y","cols","tile-w","app.frontend.ui.battlefield.config/tile-size","tile-h","frame-x","cljs.core/mod","frame-y","Math/floor","frame","js/module$node_modules$pixi_DOT_js$lib$index.Rectangle","tile-texture","js/module$node_modules$pixi_DOT_js$lib$index.Texture","sprite","js/module$node_modules$pixi_DOT_js$lib$index.Sprite","app.frontend.ui.battlefield.config/tile-scale","app.frontend.ui.battlefield.sprites/create-character-sprite","character","_","p1__36982#","cljs.core.swap_BANG_","app.frontend.ui.battlefield.state/characters","cljs.core.mapv","c","cljs.core.assoc","cljs.core._EQ_","app.frontend.ui.battlefield.sprites/walkable-tile?","map-data","cljs.core/some","layer","tile","and__5000__auto__"],"sourcesContent":["(ns app.frontend.ui.battlefield.sprites\n  (:require [\"pixi.js\" :refer [Texture Sprite Rectangle]]\n            [app.frontend.ui.battlefield.config :as config]\n            [app.frontend.ui.battlefield.state :as state]))\n\n(defn create-map-tile-sprite [texture id x y]\n  (let [cols 8\n        tile-w config/tile-size\n        tile-h config/tile-size\n        frame-x (* (mod id cols) tile-w)\n        frame-y (* (Math/floor (/ id cols)) tile-h)\n        frame (Rectangle. frame-x frame-y tile-w tile-h)\n        tile-texture (Texture. texture frame)\n        sprite (Sprite. tile-texture)]\n    (set! (.-x sprite) (* x tile-w config/tile-scale))\n    (set! (.-y sprite) (* y tile-h config/tile-scale))\n    (set! (.-scale.x sprite) config/tile-scale)\n    (set! (.-scale.y sprite) config/tile-scale)\n    sprite))\n\n(defn create-character-sprite [character texture]\n  (let [sprite (Sprite. texture)]\n    (set! (.-x sprite) (* (:x character) config/tile-size config/tile-scale))\n    (set! (.-y sprite) (* (:y character) config/tile-size config/tile-scale))\n    (set! (.-scale.x sprite) config/tile-scale)\n    (set! (.-scale.y sprite) config/tile-scale)\n    (set! (.-eventMode sprite) \"dynamic\")\n    (set! (.-buttonMode sprite) true)\n    (.on sprite \"pointerdown\"\n         (fn [_]\n           (swap! state/characters #(mapv (fn [c] (assoc c :selected? (= (:id c) (:id character)))) %))))\n    sprite))\n\n(defn walkable-tile? [x y map-data]\n  (some (fn [layer]\n          (some (fn [tile]\n                  (and (= (:x tile) x)\n                       (= (:y tile) y)\n                       (:walkable? tile)))\n                (:tiles layer)))\n        (:layers map-data)))\n"]}