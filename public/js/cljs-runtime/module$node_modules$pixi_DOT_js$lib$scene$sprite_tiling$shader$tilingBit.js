shadow$provide.module$node_modules$pixi_DOT_js$lib$scene$sprite_tiling$shader$tilingBit = function(global, require, module, exports) {
  exports.tilingBit = {name:"tiling-bit", vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3\x3cf32\x3e,\n                uClampFrame:vec4\x3cf32\x3e,\n                uClampOffset:vec2\x3cf32\x3e,\n                uTextureTransform:mat3x3\x3cf32\x3e,\n                uSizeAnchor:vec4\x3cf32\x3e\n            };\n\n            @group(2) @binding(0) var\x3cuniform\x3e tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d\x3cf32\x3e;\n            @group(2) @binding(2) var uSampler: sampler;\n        ", 
  main:"\n            uv \x3d (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position \x3d (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "}, fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3\x3cf32\x3e,\n                uClampFrame:vec4\x3cf32\x3e,\n                uClampOffset:vec2\x3cf32\x3e,\n                uTextureTransform:mat3x3\x3cf32\x3e,\n                uSizeAnchor:vec4\x3cf32\x3e\n            };\n\n            @group(2) @binding(0) var\x3cuniform\x3e tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d\x3cf32\x3e;\n            @group(2) @binding(2) var uSampler: sampler;\n        ", 
  main:"\n\n            var coord \x3d vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord \x3d (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped \x3d coord;\n            coord \x3d clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias \x3d 0.;\n\n            if(unclamped.x \x3d\x3d coord.x \x26\x26 unclamped.y \x3d\x3d coord.y)\n            {\n                bias \x3d -32.;\n            } \n\n            outColor \x3d textureSampleBias(uTexture, uSampler, coord, bias);\n        "}};
  exports.tilingBitGl = {name:"tiling-bit", vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        ", main:"\n            uv \x3d (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position \x3d (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "}, fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ", 
  main:"\n\n        vec2 coord \x3d vUV + ceil(uClampOffset - vUV);\n        coord \x3d (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped \x3d coord;\n        coord \x3d clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor \x3d texture(uTexture, coord, unclamped \x3d\x3d coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        "}};
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$scene$sprite_tiling$shader$tilingBit.js.map
