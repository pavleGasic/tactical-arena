{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$mask$stencil$StencilMaskPipe.js",
"lineCount":57,
"mappings":"AAAAA,cAAA,CAAA,0EAAA,GAA+F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGnIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,WAAWJ,OAAA,CAAQ,kEAAR,CAAf,EACIK,SAASL,OAAA,CAAQ,4EAAR,CADb;AAGA,cAAA;AACA,OAAMM,gBAAN;AACEC,eAAW,CAACC,QAAD,CAAW;AAEpB,UAAKC,CAAAA,cAAL,GAAsB,EAAtB;AACA,UAAKC,CAAAA,SAAL,GAAiC,IAAIC,OAAJ,EAAjC;AACA,UAAKC,CAAAA,SAAL,GAAiBJ,QAAjB;AAJoB;AAMtBK,QAAI,CAACC,IAAD,EAAOC,UAAP,EAAmBC,cAAnB,CAAmC;AACrC,UAAIC,EAAJ;AAEA,YAAMT,WAAW,IAAKI,CAAAA,SAAtB;AACAJ,cAASU,CAAAA,WAAYC,CAAAA,KAAMC,CAAAA,KAA3B,CAAiCJ,cAAjC,CAAA;AACAR,cAASU,CAAAA,WAAYG,CAAAA,SAAUC,CAAAA,YAA/B,CAHeR,IAGoCA,CAAAA,IAAnD,EAAyD,MAAzD,EAAiEE,cAAjE,CAAA;AACAA,oBAAeO,CAAAA,GAAf,CAAmB,CACjBC,aAAc,aADG,EAEjBC,OAAQ,eAFS,EAGjBX,IAHiB,EAIjBY,QAASX,UAAWY,CAAAA,YAAaD,CAAAA,OAJhB,EAKjBE,UAAW,CAAA,CALM,CAAnB,CAAA;AAOA,YAAMC,gBAXSf,IAWcA,CAAAA,IAA7B;AACAe,mBAAcC,CAAAA,cAAd,GAA+B,CAAA,CAA/B;AACK,UAAKpB,CAAAA,SAAUqB,CAAAA,GAAf,CAbUjB,IAaV,CAAL,IACE,IAAKJ,CAAAA,SAAUsB,CAAAA,GAAf,CAdalB,IAcb,EAA2B,CACzBmB,kBAAmB,CADM,EAEzBC,mBAAoB,CAFK,CAA3B,CADF;AAMA,YAAMC,WAAW,IAAKzB,CAAAA,SAAU0B,CAAAA,GAAf,CAnBFtB,IAmBE,CAAjB;AACAqB,cAASF,CAAAA,iBAAT,GAA6BjB,cAAeqB,CAAAA,eAA5C;AACAR,mBAAcS,CAAAA,kBAAd,CACEtB,cADF,EAEER,QAFF,EAGE,IAHF,CAAA;AAKAqB,mBAAcC,CAAAA,cAAd,GAA+B,CAAA,CAA/B;AACAtB,cAASU,CAAAA,WAAYC,CAAAA,KAAMC,CAAAA,KAA3B,CAAiCJ,cAAjC,CAAA;AACAA,oBAAeO,CAAAA,GAAf,CAAmB,CACjBC,aAAc,aADG,EAEjBC,OAAQ,aAFS,EAGjBX,IAHiB,EAIjBY,QAASX,UAAWY,CAAAA,YAAaD,CAAAA,OAJhB,EAKjBE,UAAW,CAAA,CALM,CAAnB,CAAA;AAQAO,cAASD,CAAAA,kBAAT,GAD2BlB,cAAeqB,CAAAA,eAC1C,GAD4DF,QAASF,CAAAA,iBACrE,GADyF,CACzF;AACMM,UAAAA,GAAkB/B,QAASgC,CAAAA,YAAaA,CAAAA,YAAaC,CAAAA,GAArDF;AACN,OAACtB,EAAD,GAAM,IAAKR,CAAAA,cAAX,EAA2B8B,IAA3B,CAAA,KAAgDtB,EAAA,CAAGsB,IAAH,CAAhD,GAAsE,CAAtE;AAxCqC;AA0CvCG,OAAG,CAAC5B,IAAD,EAAOC,UAAP,EAAmBC,cAAnB,CAAmC;AAEpC,YAAMR,WAAW,IAAKI,CAAAA,SAAtB;AACAJ,cAASU,CAAAA,WAAYC,CAAAA,KAAMC,CAAAA,KAA3B,CAAiCJ,cAAjC,CAAA;AACAR,cAASU,CAAAA,WAAYG,CAAAA,SAAUC,CAAAA,YAA/B,CAHeR,IAGoCA,CAAAA,IAAnD,EAAyD,MAAzD,EAAiEE,cAAjE,CAAA;AACAA,oBAAeO,CAAAA,GAAf,CAAmB,CACjBC,aAAc,aADG,EAEjBC,OAAQ,cAFS,EAGjBC,QAASX,UAAWY,CAAAA,YAAaD,CAAAA,OAHhB,EAIjBE,UAAW,CAAA,CAJM,CAAnB,CAAA;AAMMO,UAAAA,GAAW,IAAKzB,CAAAA,SAAU0B,CAAAA,GAAf,CAAmBtB,IAAnB,CAAXqB;AACN,WAASQ,UAAT,GAAa,CAAb,EAAgBA,UAAhB,GAAoBR,IAASD,CAAAA,kBAA7B,EAAiDS,UAAA,EAAjD;AACE3B,sBAAe4B,CAAAA,YAAf,CAA4B5B,cAAeqB,CAAAA,eAAf,EAA5B,CAAA,GAAgErB,cAAe4B,CAAAA,YAAf,CAA4BT,IAASF,CAAAA,iBAAT,EAA5B,CAAhE;AADF;AAGAjB,oBAAeO,CAAAA,GAAf,CAAmB,CACjBC,aAAc,aADG,EAEjBC,OAAQ,YAFS,EAGjBG,UAAW,CAAA,CAHM,CAAnB,CAAA;AAfoC;AAqBtCiB,WAAO,CAACC,WAAD,CAAc;AACnB,UAAI7B,EAAJ;AACA,YAAMT,WAAW,IAAKI,CAAAA,SAAtB,EACM2B,kBAAkB/B,QAASgC,CAAAA,YAAaA,CAAAA,YAAaC,CAAAA,GAD3D;AAEA,UAAIM,iBAAiB,CAAC9B,EAAD,GAAM,IAAKR,CAAAA,cAAX,EAA2B8B,eAA3B,CAAjBQ,KAAiE9B,EAAA,CAAGsB,eAAH,CAAjEQ,GAAuF,CAAvFA,CAAJ;AAC2B,qBAA3B,KAAID,WAAYrB,CAAAA,MAAhB,IACEjB,QAASgC,CAAAA,YAAaQ,CAAAA,kBAAtB,EAGA,EAFAxC,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcC,CAAAA,kBAArD,EAAyEL,cAAzE,CAEA,EADAA,cAAA,EACA,EAAAvC,QAAS6C,CAAAA,SAAUC,CAAAA,OAAnB,CAA2B,CAA3B,CAJF,IAKkC,aAA3B,KAAIR,WAAYrB,CAAAA,MAAhB,IACDqB,WAAYpB,CAAAA,OAAhB,GACElB,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcI,CAAAA,mBAArD,EAA0ER,cAA1E,CADF,GAGEvC,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcK,CAAAA,WAArD,EAAkET,cAAlE,CAEF,EAAAvC,QAAS6C,CAAAA,SAAUC,CAAAA,OAAnB,CAA2B,EAA3B,CANK;AAO2B,oBAA3B,KAAIR,WAAYrB,CAAAA,MAAhB,IACLjB,QAAS6C,CAAAA,SAAUC,CAAAA,OAAnB,CAA2B,CAA3B,CAOA,EANuB,CAAvB,KAAIP,cAAJ,GACEvC,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcM,CAAAA,qBAArD,EAA4EV,cAA5E,CADF,IAGEvC,QAASgC,CAAAA,YAAakB,CAAAA,KAAtB,CAA4B,IAA5B,EAAkCtD,QAASuD,CAAAA,KAAMC,CAAAA,OAAjD,CACA,EAAApD,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcU,CAAAA,QAArD,EAA+Dd,cAA/D,CAJF,CAMA,EAAAA,cAAA,EARK,IAS2B,YAT3B,KASID,WAAYrB,CAAAA,MAThB,KAUDqB,WAAYpB,CAAAA,OAAhB,GACElB,QAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcI,CAAAA,mBAArD,EAA0ER,cAA1E,CADF;AAGEvC,cAASyC,CAAAA,OAAQC,CAAAA,cAAjB,CAAgC7C,MAAO8C,CAAAA,aAAcK,CAAAA,WAArD,EAAkET,cAAlE,CAEF,EAAAvC,QAAS6C,CAAAA,SAAUC,CAAAA,OAAnB,CAA2B,EAA3B,CAfK,CAZP;AA6BA,UAAK7C,CAAAA,cAAL,CAAoB8B,eAApB,CAAA,GAAuCQ,cAAvC;AAlCmB;AAoCrBe,WAAO,EAAG;AAGR,UAAKpD,CAAAA,SAAL,GADA,IAAKD,CAAAA,cACL,GAFA,IAAKG,CAAAA,SAEL,GAFiB,IAEjB;AAHQ;AA1GZ;AAgHAN,iBAAgByD,CAAAA,SAAhB,GAA4B,CAC1BC,KAAM,CACJ7D,MAAW8D,CAAAA,aAAcC,CAAAA,UADrB,EAEJ/D,MAAW8D,CAAAA,aAAcE,CAAAA,WAFrB,EAGJhE,MAAW8D,CAAAA,aAAcG,CAAAA,WAHrB,CADoB,EAM1BC,KAAM,aANoB,CAA5B;AASAnE,SAAQI,CAAAA,eAAR,GAA0BA,eAA1B;AAjIuI,CAAvI;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/mask/stencil/StencilMaskPipe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$mask$stencil$StencilMaskPipe\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar _const$1 = require('../../renderers/gl/const.js');\nvar _const = require('../../renderers/shared/state/const.js');\n\n\"use strict\";\nclass StencilMaskPipe {\n  constructor(renderer) {\n    // used when building and also when executing..\n    this._maskStackHash = {};\n    this._maskHash = /* @__PURE__ */ new WeakMap();\n    this._renderer = renderer;\n  }\n  push(mask, _container, instructionSet) {\n    var _a;\n    const effect = mask;\n    const renderer = this._renderer;\n    renderer.renderPipes.batch.break(instructionSet);\n    renderer.renderPipes.blendMode.setBlendMode(effect.mask, \"none\", instructionSet);\n    instructionSet.add({\n      renderPipeId: \"stencilMask\",\n      action: \"pushMaskBegin\",\n      mask,\n      inverse: _container._maskOptions.inverse,\n      canBundle: false\n    });\n    const maskContainer = effect.mask;\n    maskContainer.includeInBuild = true;\n    if (!this._maskHash.has(effect)) {\n      this._maskHash.set(effect, {\n        instructionsStart: 0,\n        instructionsLength: 0\n      });\n    }\n    const maskData = this._maskHash.get(effect);\n    maskData.instructionsStart = instructionSet.instructionSize;\n    maskContainer.collectRenderables(\n      instructionSet,\n      renderer,\n      null\n    );\n    maskContainer.includeInBuild = false;\n    renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"stencilMask\",\n      action: \"pushMaskEnd\",\n      mask,\n      inverse: _container._maskOptions.inverse,\n      canBundle: false\n    });\n    const instructionsLength = instructionSet.instructionSize - maskData.instructionsStart - 1;\n    maskData.instructionsLength = instructionsLength;\n    const renderTargetUid = renderer.renderTarget.renderTarget.uid;\n    (_a = this._maskStackHash)[renderTargetUid] ?? (_a[renderTargetUid] = 0);\n  }\n  pop(mask, _container, instructionSet) {\n    const effect = mask;\n    const renderer = this._renderer;\n    renderer.renderPipes.batch.break(instructionSet);\n    renderer.renderPipes.blendMode.setBlendMode(effect.mask, \"none\", instructionSet);\n    instructionSet.add({\n      renderPipeId: \"stencilMask\",\n      action: \"popMaskBegin\",\n      inverse: _container._maskOptions.inverse,\n      canBundle: false\n    });\n    const maskData = this._maskHash.get(mask);\n    for (let i = 0; i < maskData.instructionsLength; i++) {\n      instructionSet.instructions[instructionSet.instructionSize++] = instructionSet.instructions[maskData.instructionsStart++];\n    }\n    instructionSet.add({\n      renderPipeId: \"stencilMask\",\n      action: \"popMaskEnd\",\n      canBundle: false\n    });\n  }\n  execute(instruction) {\n    var _a;\n    const renderer = this._renderer;\n    const renderTargetUid = renderer.renderTarget.renderTarget.uid;\n    let maskStackIndex = (_a = this._maskStackHash)[renderTargetUid] ?? (_a[renderTargetUid] = 0);\n    if (instruction.action === \"pushMaskBegin\") {\n      renderer.renderTarget.ensureDepthStencil();\n      renderer.stencil.setStencilMode(_const.STENCIL_MODES.RENDERING_MASK_ADD, maskStackIndex);\n      maskStackIndex++;\n      renderer.colorMask.setMask(0);\n    } else if (instruction.action === \"pushMaskEnd\") {\n      if (instruction.inverse) {\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.INVERSE_MASK_ACTIVE, maskStackIndex);\n      } else {\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.MASK_ACTIVE, maskStackIndex);\n      }\n      renderer.colorMask.setMask(15);\n    } else if (instruction.action === \"popMaskBegin\") {\n      renderer.colorMask.setMask(0);\n      if (maskStackIndex !== 0) {\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.RENDERING_MASK_REMOVE, maskStackIndex);\n      } else {\n        renderer.renderTarget.clear(null, _const$1.CLEAR.STENCIL);\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.DISABLED, maskStackIndex);\n      }\n      maskStackIndex--;\n    } else if (instruction.action === \"popMaskEnd\") {\n      if (instruction.inverse) {\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.INVERSE_MASK_ACTIVE, maskStackIndex);\n      } else {\n        renderer.stencil.setStencilMode(_const.STENCIL_MODES.MASK_ACTIVE, maskStackIndex);\n      }\n      renderer.colorMask.setMask(15);\n    }\n    this._maskStackHash[renderTargetUid] = maskStackIndex;\n  }\n  destroy() {\n    this._renderer = null;\n    this._maskStackHash = null;\n    this._maskHash = null;\n  }\n}\nStencilMaskPipe.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLPipes,\n    Extensions.ExtensionType.WebGPUPipes,\n    Extensions.ExtensionType.CanvasPipes\n  ],\n  name: \"stencilMask\"\n};\n\nexports.StencilMaskPipe = StencilMaskPipe;\n//# sourceMappingURL=StencilMaskPipe.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","_const$1","_const","StencilMaskPipe","constructor","renderer","_maskStackHash","_maskHash","WeakMap","_renderer","push","mask","_container","instructionSet","_a","renderPipes","batch","break","blendMode","setBlendMode","add","renderPipeId","action","inverse","_maskOptions","canBundle","maskContainer","includeInBuild","has","set","instructionsStart","instructionsLength","maskData","get","instructionSize","collectRenderables","renderTargetUid","renderTarget","uid","pop","i","instructions","execute","instruction","maskStackIndex","ensureDepthStencil","stencil","setStencilMode","STENCIL_MODES","RENDERING_MASK_ADD","colorMask","setMask","INVERSE_MASK_ACTIVE","MASK_ACTIVE","RENDERING_MASK_REMOVE","clear","CLEAR","STENCIL","DISABLED","destroy","extension","type","ExtensionType","WebGLPipes","WebGPUPipes","CanvasPipes","name"]
}
