{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$ExclusionBlend.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,GAA4F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACAC,SAAAA,GAAkBJ,OAAA,CAAQ,yEAAR,CAAlBI;AAEJ,cAAA;AACA,OAAMC,eAAN,QAA6BD,QAAgBA,CAAAA,eAA7C;AACEE,eAAW,EAAG;AACZ,WAAA,CAAM,CACJC,GAAI,CACFC,UAAY,4XADV,EAYFC,KAAO,+HAZL,CADA;AAiBJC,UAAK,CACHF,UAAY,ucADT,EAYHC,KAAO,8IAZJ,CAjBD,CAAN,CAAA;AADY;AADhB;AAuCAJ,gBAAeM,CAAAA,SAAf,GAA2B,CACzBC,KAAM,WADmB,EAEzBC,KAAMV,MAAWW,CAAAA,aAAcC,CAAAA,SAFN,CAA3B;AAKAb,SAAQG,CAAAA,cAAR,GAAyBA,cAAzB;AAnDoI,CAApI;;",
"sources":["node_modules/pixi_DOT_js/lib/advanced-blend-modes/ExclusionBlend.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$ExclusionBlend\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar BlendModeFilter = require('../filters/blend-modes/BlendModeFilter.js');\n\n\"use strict\";\nclass ExclusionBlend extends BlendModeFilter.BlendModeFilter {\n  constructor() {\n    super({\n      gl: {\n        functions: `\n                vec3 exclusion(vec3 base, vec3 blend)\n                {\n                    return base + blend - 2.0 * base * blend;\n                }\n\n                vec3 blendExclusion(vec3 base, vec3 blend, float opacity)\n                {\n                    return (exclusion(base, blend) * opacity + base * (1.0 - opacity));\n                }\n                `,\n        main: `\n                finalColor = vec4(blendExclusion(back.rgb, front.rgb,front.a), blendedAlpha) * uBlend;\n                `\n      },\n      gpu: {\n        functions: `\n                fn exclusion(base: vec3<f32>, blend: vec3<f32>) -> vec3<f32>\n                {\n                    return base+blend-2.0*base*blend;\n                }\n\n                fn blendExclusion(base: vec3<f32>, blend: vec3<f32>, opacity: f32) -> vec3<f32>\n                {\n                    return (exclusion(base, blend) * opacity + base * (1.0 - opacity));\n                }\n            `,\n        main: `\n                out = vec4<f32>(blendExclusion(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n            `\n      }\n    });\n  }\n}\n/** @ignore */\nExclusionBlend.extension = {\n  name: \"exclusion\",\n  type: Extensions.ExtensionType.BlendMode\n};\n\nexports.ExclusionBlend = ExclusionBlend;\n//# sourceMappingURL=ExclusionBlend.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","BlendModeFilter","ExclusionBlend","constructor","gl","functions","main","gpu","extension","name","type","ExtensionType","BlendMode"]
}
