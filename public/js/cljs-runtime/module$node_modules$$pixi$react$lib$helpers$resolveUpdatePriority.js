shadow$provide.module$node_modules$$pixi$react$lib$helpers$resolveUpdatePriority = function(global, require, module, exports) {
  var constants = require("module$node_modules$react_reconciler$constants"), store = require("module$node_modules$$pixi$react$lib$store"), log = require("module$node_modules$$pixi$react$lib$helpers$log");
  "use strict";
  exports.resolveUpdatePriority = function() {
    log.log("info", "lifecycle::resolveUpdatePriority");
    if (store.store.currentUpdatePriority) {
      return store.store.currentUpdatePriority;
    }
    const globalScope = "undefined" !== typeof self && self || "undefined" !== typeof window && window;
    if (!globalScope) {
      return constants.DefaultEventPriority;
    }
    switch(globalScope.event?.type) {
      case "click":
      case "contextmenu":
      case "dblclick":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
        return constants.DiscreteEventPriority;
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "pointerenter":
      case "pointerleave":
      case "wheel":
        return constants.ContinuousEventPriority;
      default:
        return constants.DefaultEventPriority;
    }
  };
};

//# sourceMappingURL=module$node_modules$$pixi$react$lib$helpers$resolveUpdatePriority.js.map
