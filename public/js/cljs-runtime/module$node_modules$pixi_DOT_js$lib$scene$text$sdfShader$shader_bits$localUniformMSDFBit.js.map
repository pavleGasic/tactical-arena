{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$shader_bits$localUniformMSDFBit.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,wFAAA,GAA6G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAsGrJA,SAAQC,CAAAA,mBAAR,GAlG4BA,CAC1BC,KAAM,wBADoBD,EAE1BE,OAAQ,CACNC,OAEG,kTAHG,EAcNC,KAEG,2HAhBG;AAqBNC,MAEG,sMAvBG,CAFkBL,EAiC1BM,SAAU,CACRH,OAEG,qRAHK;AAaRC,OAEG,sIAfK,CAjCgBJ,CAkG5B;AACAD,SAAQQ,CAAAA,qBAAR,GA7C8BA,CAC5BN,KAAM,wBADsBM,EAE5BL,OAAQ,CACNC,OAEG,6HAHG,EASNC,KAEG,+FAXG,EAgBNC,IAEG,6JAlBG,CAFoBE,EA4B5BD,SAAU,CACRH,OAEG,mDAHK;AAORC,OAEG,+FATK,CA5BkBG,CA6C9B;AAvGqJ,CAArJ;;",
"sources":["node_modules/pixi_DOT_js/lib/scene/text/sdfShader/shader-bits/localUniformMSDFBit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$text$sdfShader$shader_bits$localUniformMSDFBit\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst localUniformMSDFBit = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         `\n    ),\n    main: (\n      /* wgsl */\n      ` \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        `\n    )\n  }\n};\nconst localUniformMSDFBitGl = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform float uDistance;\n         `\n    ),\n    main: (\n      /* glsl */\n      ` \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        `\n    )\n  }\n};\n\nexports.localUniformMSDFBit = localUniformMSDFBit;\nexports.localUniformMSDFBitGl = localUniformMSDFBitGl;\n//# sourceMappingURL=localUniformMSDFBit.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","localUniformMSDFBit","name","vertex","header","main","end","fragment","localUniformMSDFBitGl"]
}
