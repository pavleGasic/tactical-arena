{
"version":3,
"file":"module$node_modules$$pixi$events$lib$EventTicker.js",
"lineCount":51,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,GAAqE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAE7G,MAAIC,OAAOH,OAAA,CAAQ,0CAAR,CAAX;AACA,OAAMI,kBAAN;AACEC,eAAW,EAAG;AACZ,UAAKC,CAAAA,oBAAL,GAA4B,EAA5B;AAAgC,UAAKC,CAAAA,UAAL,GAAkB,CAAlB;AAAyC,UAAKC,CAAAA,WAAL,GAApB,IAAKC,CAAAA,QAAe,GAAJ,CAAA,CAAI;AAAuB,UAAKC,CAAAA,YAAL,GAAoB,CAAA,CAApB;AADpF;AAOdC,QAAI,CAACC,MAAD,CAAS;AACX,UAAKC,CAAAA,oBAAL,EAAA;AAA6B,UAAKD,CAAAA,MAAL,GAAcA,MAAd;AAAsB,UAAKN,CAAAA,oBAAL,GAA4B,EAA5B;AAAgC,UAAKC,CAAAA,UAAL,GAAkB,CAAlB;AAAyC,UAAKC,CAAAA,WAAL,GAApB,IAAKC,CAAAA,QAAe,GAAJ,CAAA,CAAI;AAAuB,UAAKC,CAAAA,YAAL,GAAoB,CAAA,CAApB;AADxI;AAIT,mBAAc,EAAA;AAChB,aAAO,IAAKA,CAAAA,YAAZ;AADgB;AAGd,mBAAW,CAACI,MAAD,CAAS;AACtB,UAAKJ,CAAAA,YAAL,GAAoBI,MAApB;AADsB;AAIxBC,qBAAiB,EAAG;AAClB,UAAKP,CAAAA,WAAL,IAAoB,CAAC,IAAKQ,CAAAA,UAA1B,KAAyCb,IAAKc,CAAAA,MAAOC,CAAAA,MAAOC,CAAAA,GAAnB,CAAuB,IAAKC,CAAAA,YAA5B,EAA0C,IAA1C,EAAgDjB,IAAKkB,CAAAA,eAAgBC,CAAAA,WAArE,CAAA,EAAmF,IAAKd,CAAAA,WAAxF,GAAsG,CAAA,CAA/I;AADkB;AAIpBK,wBAAoB,EAAG;AACrB,UAAKL,CAAAA,WAAL,KAAqBL,IAAKc,CAAAA,MAAOC,CAAAA,MAAOK,CAAAA,MAAnB,CAA0B,IAAKH,CAAAA,YAA/B,EAA6C,IAA7C,CAAA,EAAoD,IAAKZ,CAAAA,WAAzD,GAAuE,CAAA,CAA5F;AADqB;AAIvBgB,gBAAY,EAAG;AACb,UAAKf,CAAAA,QAAL,GAAgB,CAAA,CAAhB;AADa;AAIfgB,UAAM,EAAG;AACP,UAAK,IAAKT,CAAAA,UAAV,IAA6BN,CAAL,IAAKA,CAAAA,YAA7B;AAEA,YAAI,IAAKD,CAAAA,QAAT;AACE,cAAKA,CAAAA,QAAL,GAAgB,CAAA,CAAhB;AADF,cAAA;AAIA,cAAMiB,mBAAmB,IAAKd,CAAAA,MAAOc,CAAAA,gBAArC;AACA,cAAKd,CAAAA,MAAOe,CAAAA,mBAAZ,IAAoE,OAApE,KAAmCD,gBAAiBE,CAAAA,WAApD,IAA+EC,UAAWC,CAAAA,QAASC,CAAAA,aAApB,CAAkC,IAAIC,YAAJ,CAAiB,aAAjB,EAAgC,CAC/IC,QAASP,gBAAiBO,CAAAA,OADqH,EAE/IC,QAASR,gBAAiBQ,CAAAA,OAFqH,CAAhC,CAAlC,CAA/E;AALA;AAFA;AADO;AAoBTd,gBAAY,CAACe,SAAD,CAAY;AACtB,UAAK5B,CAAAA,UAAL,IAAmB4B,SAAnB;AAAgC,UAAK5B,CAAAA,UAAP,GAAoB,IAAKD,CAAAA,oBAAzB,KAAmD,IAAKC,CAAAA,UAAgB,GAAH,CAAG,EAAA,IAAKkB,CAAAA,MAAL,EAAxE;AADR;AAnD1B;AAuDMW,QAAAA,GAAe,IAAIhC,iBAAJ,EAAfgC;AACNlC,SAAQkC,CAAAA,YAAR,GAAuBA,MAAvB;AA3D6G,CAA7G;;",
"sources":["node_modules/@pixi/events/lib/EventTicker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$events$lib$EventTicker\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\");\nclass EventsTickerClass {\n  constructor() {\n    this.interactionFrequency = 10, this._deltaTime = 0, this._didMove = !1, this.tickerAdded = !1, this._pauseUpdate = !0;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener(), this.events = events, this.interactionFrequency = 10, this._deltaTime = 0, this._didMove = !1, this.tickerAdded = !1, this._pauseUpdate = !0;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    this.tickerAdded || !this.domElement || (core.Ticker.system.add(this.tickerUpdate, this, core.UPDATE_PRIORITY.INTERACTION), this.tickerAdded = !0);\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    this.tickerAdded && (core.Ticker.system.remove(this.tickerUpdate, this), this.tickerAdded = !1);\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = !0;\n  }\n  /** Updates the state of interactive objects. */\n  update() {\n    if (!this.domElement || this._pauseUpdate)\n      return;\n    if (this._didMove) {\n      this._didMove = !1;\n      return;\n    }\n    const rootPointerEvent = this.events.rootPointerEvent;\n    this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\" || globalThis.document.dispatchEvent(new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link PIXI.EventsTicker#interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link PIXI.Ticker.system}.\n   * @param deltaTime - time delta since the last call\n   */\n  tickerUpdate(deltaTime) {\n    this._deltaTime += deltaTime, !(this._deltaTime < this.interactionFrequency) && (this._deltaTime = 0, this.update());\n  }\n}\nconst EventsTicker = new EventsTickerClass();\nexports.EventsTicker = EventsTicker;\n//# sourceMappingURL=EventTicker.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","EventsTickerClass","constructor","interactionFrequency","_deltaTime","tickerAdded","_didMove","_pauseUpdate","init","events","removeTickerListener","paused","addTickerListener","domElement","Ticker","system","add","tickerUpdate","UPDATE_PRIORITY","INTERACTION","remove","pointerMoved","update","rootPointerEvent","supportsTouchEvents","pointerType","globalThis","document","dispatchEvent","PointerEvent","clientX","clientY","deltaTime","EventsTicker"]
}
