{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SaturationBlend.js",
"lineCount":30,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,GAA6F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGjIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACAC,QAAAA,GAAkBJ,OAAA,CAAQ,yEAAR,CAAlBI;AACJ,MAAIC,QAAQL,OAAA,CAAQ,mEAAR,CAAZ,EACIM,SAASN,OAAA,CAAQ,oEAAR,CADb;AAGA,cAAA;AACA,OAAMO,gBAAN,QAA8BH,OAAgBA,CAAAA,eAA9C;AACEI,eAAW,EAAG;AACZ,WAAA,CAAM,CACJC,GAAI,CACFC,UAAY;kBACFL,KAAMM,CAAAA,KADJ;;;;;;;aADV,EAUFC,KAAO,6HAVL,CADA,EAeJC,IAAK,CACHH,UAAY;kBACFJ,MAAOQ,CAAAA,MADL;;;;;;;aADT,EAUHF,KAAO,+IAVJ,CAfD,CAAN,CAAA;AADY;AADhB;AAmCAL,iBAAgBQ,CAAAA,SAAhB,GAA4B,CAC1BC,KAAM,YADoB,EAE1BC,KAAMd,MAAWe,CAAAA,aAAcC,CAAAA,SAFL,CAA5B;AAKAjB,SAAQK,CAAAA,eAAR,GAA0BA,eAA1B;AAjDqI,CAArI;;",
"sources":["node_modules/pixi_DOT_js/lib/advanced-blend-modes/SaturationBlend.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$advanced_blend_modes$SaturationBlend\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../extensions/Extensions.js');\nvar BlendModeFilter = require('../filters/blend-modes/BlendModeFilter.js');\nvar GLhls = require('../filters/blend-modes/hls/GLhls.js');\nvar GPUhls = require('../filters/blend-modes/hls/GPUhls.js');\n\n\"use strict\";\nclass SaturationBlend extends BlendModeFilter.BlendModeFilter {\n  constructor() {\n    super({\n      gl: {\n        functions: `\n                ${GLhls.hslgl}\n\n                vec3 blendSaturation(vec3 base, vec3 blend,  float opacity)\n                {\n                    vec3 blendSaturation = setLuminosity(setSaturation(base, getSaturation(blend)), getLuminosity(base));\n                    return (blendSaturation * opacity + base * (1.0 - opacity));\n                }\n            `,\n        main: `\n                finalColor = vec4(blendSaturation(back.rgb, front.rgb, front.a), blendedAlpha) * uBlend;\n            `\n      },\n      gpu: {\n        functions: `\n                ${GPUhls.hslgpu}\n\n                fn blendSaturation(base:vec3<f32>,  blend:vec3<f32>,  opacity:f32) -> vec3<f32>\n                {\n                    let blendSaturation = setLuminosity(setSaturation(base, getSaturation(blend)), getLuminosity(base));\n                    return (blendSaturation * opacity + base * (1.0 - opacity));\n                }\n            `,\n        main: `\n                out = vec4<f32>(blendSaturation(back.rgb, front.rgb, front.a), blendedAlpha) * blendUniforms.uBlend;\n            `\n      }\n    });\n  }\n}\n/** @ignore */\nSaturationBlend.extension = {\n  name: \"saturation\",\n  type: Extensions.ExtensionType.BlendMode\n};\n\nexports.SaturationBlend = SaturationBlend;\n//# sourceMappingURL=SaturationBlend.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","BlendModeFilter","GLhls","GPUhls","SaturationBlend","constructor","gl","functions","hslgl","main","gpu","hslgpu","extension","name","type","ExtensionType","BlendMode"]
}
