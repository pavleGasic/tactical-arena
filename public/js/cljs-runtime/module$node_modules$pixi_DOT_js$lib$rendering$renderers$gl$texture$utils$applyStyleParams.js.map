{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$utils$applyStyleParams.js",
"lineCount":29,
"mappings":"AAAAA,cAAA,CAAA,yFAAA,GAA8G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGtJ,MAAIC,eAAeH,OAAA,CAAQ,uFAAR,CAAnB;AAEA,cAAA;AAgCAE,SAAQE,CAAAA,gBAAR,GA/BAA,QAAyB,CAACC,KAAD,EAAQC,EAAR,EAAYC,OAAZ,EAAqBC,cAArB,EAAqCC,cAArC,EAAqDC,UAArD,EAAiEC,UAAjE,EAA6EC,aAA7E,CAA4F;AAEnH,QAAI,CAACA,aAAL,IAA6C,QAA7C,KAAsBP,KAAMQ,CAAAA,YAA5B,IAAgF,QAAhF,KAAyDR,KAAMS,CAAAA,YAA/D,IAAmH,QAAnH,KAA4FT,KAAMU,CAAAA,YAAlG,CAA6H;AAE3H,YAAMC,YAAYb,YAAac,CAAAA,mBAAb,CAAiCN,UAAA,GAAa,eAAb,GAA+BN,KAAMS,CAAAA,YAAtE,CAAlB,EACMI,YAAYf,YAAac,CAAAA,mBAAb,CAAiCN,UAAA,GAAa,eAAb,GAA+BN,KAAMU,CAAAA,YAAtE,CADlB;AAEAT,QAAA,CAAGG,cAAH,CAAA,CALgBC,UAKhB,EAA8BJ,EAAGa,CAAAA,cAAjC,EAHkBhB,YAAac,CAAAA,mBAAbG,CAAiCT,UAAA,GAAa,eAAb,GAA+BN,KAAMQ,CAAAA,YAAtEO,CAGlB,CAAA;AACAd,QAAA,CAAGG,cAAH,CAAA,CANgBC,UAMhB,EAA8BJ,EAAGe,CAAAA,cAAjC,EAAiDL,SAAjD,CAAA;AACA,UAAIV,EAAGgB,CAAAA,cAAP;AACEhB,UAAA,CAAGG,cAAH,CAAA,CARcC,UAQd,EAA8BJ,EAAGgB,CAAAA,cAAjC,EAAiDJ,SAAjD,CAAA;AADF;AAN2H;AAS7H,QAAI,CAACN,aAAL,IAA0C,QAA1C,KAAsBP,KAAMkB,CAAAA,SAA5B;AACEjB,QAAA,CAAGG,cAAH,CAAA,CAXgBC,UAWhB,EAA8BJ,EAAGkB,CAAAA,kBAAjC,EAAqDrB,YAAasB,CAAAA,mBAAb,CAAiCpB,KAAMkB,CAAAA,SAAvC,CAArD,CAAA;AADF;AAGA,QAAIhB,OAAJ;AACE,UAAI,CAACK,aAAL,IAA6C,QAA7C,KAAsBP,KAAMqB,CAAAA,YAA5B;AAEEpB,UAAA,CAAGG,cAAH,CAAA,CAhBcC,UAgBd,EAA8BJ,EAAGqB,CAAAA,kBAAjC,EADqBxB,YAAayB,CAAAA,yBAAb,CAAuCvB,KAAMwB,CAAAA,SAA7C,CAAAC,CAAwDzB,KAAMqB,CAAAA,YAA9DI,CACrB,CAAA;AAFF;AADF;AAMExB,QAAA,CAAGG,cAAH,CAAA,CAnBgBC,UAmBhB,EAA8BJ,EAAGqB,CAAAA,kBAAjC,EAAqDxB,YAAasB,CAAAA,mBAAb,CAAiCpB,KAAMwB,CAAAA,SAAvC,CAArD,CAAA;AANF;AAQIrB,kBAAJ,IAA4C,CAA5C,GAAsBH,KAAM0B,CAAAA,aAA5B,KACQC,OACN,GADcC,IAAKC,CAAAA,GAAL,CAAS7B,KAAM0B,CAAAA,aAAf,EAA8BzB,EAAG6B,CAAAA,YAAH,CAAgB3B,cAAe4B,CAAAA,8BAA/B,CAA9B,CACd,EAAA9B,EAAA,CAAGG,cAAH,CAAA,CAvBgBC,UAuBhB,EAA8BF,cAAe6B,CAAAA,0BAA7C,EAAyEL,OAAzE,CAFF;AAIA,QAAI3B,KAAMiC,CAAAA,OAAV;AACEhC,QAAA,CAAGG,cAAH,CAAA,CA1BgBC,UA0BhB,EAA8BJ,EAAGiC,CAAAA,oBAAjC,EAAuDpC,YAAaqC,CAAAA,sBAAb,CAAoCnC,KAAMiC,CAAAA,OAA1C,CAAvD,CAAA;AADF;AA1BmH,GA+BrH;AArCsJ,CAAtJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$gl$texture$utils$applyStyleParams\"] = function(global,require,module,exports) {\n'use strict';\n\nvar pixiToGlMaps = require('./pixiToGlMaps.js');\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = pixiToGlMaps.wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = pixiToGlMaps.wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = pixiToGlMaps.wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, pixiToGlMaps.scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = pixiToGlMaps.mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, pixiToGlMaps.scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, pixiToGlMaps.compareModeToGlCompare[style.compare]);\n  }\n}\n\nexports.applyStyleParams = applyStyleParams;\n//# sourceMappingURL=applyStyleParams.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","pixiToGlMaps","applyStyleParams","style","gl","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","addressModeU","addressModeV","addressModeW","wrapModeT","wrapModeToGlAddress","wrapModeR","TEXTURE_WRAP_S","wrapModeS","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","scaleModeToGlFilter","mipmapFilter","TEXTURE_MIN_FILTER","mipmapScaleModeToGlFilter","minFilter","glFilterMode","maxAnisotropy","level","Math","min","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","compare","TEXTURE_COMPARE_FUNC","compareModeToGlCompare"]
}
