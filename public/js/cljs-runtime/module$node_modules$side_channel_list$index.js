shadow$provide.module$node_modules$side_channel_list$index = function(global, require, module, exports) {
  var inspect = require("module$node_modules$object_inspect$index"), $TypeError = require("module$node_modules$es_errors$type"), listGetNode = function(list, key, isDelete) {
    for (var prev = list, curr; null != (curr = prev.next); prev = curr) {
      if (curr.key === key) {
        return prev.next = curr.next, isDelete || (curr.next = list.next, list.next = curr), curr;
      }
    }
  };
  module.exports = function() {
    var $o, channel = {assert:function(key) {
      if (!channel.has(key)) {
        throw new $TypeError("Side channel does not contain " + inspect(key));
      }
    }, "delete":function(key) {
      var root = $o && $o.next;
      key = $o ? listGetNode($o, key, !0) : void 0;
      key && root && root === key && ($o = void 0);
      return !!key;
    }, get:function(key) {
      key = $o ? (key = listGetNode($o, key)) && key.value : void 0;
      return key;
    }, has:function(key) {
      key = $o ? !!listGetNode($o, key) : !1;
      return key;
    }, set:function(key, value) {
      $o || ($o = {next:void 0});
      var objects = $o, node = listGetNode(objects, key);
      node ? node.value = value : objects.next = {key, next:objects.next, value};
    }};
    return channel;
  };
};

//# sourceMappingURL=module$node_modules$side_channel_list$index.js.map
