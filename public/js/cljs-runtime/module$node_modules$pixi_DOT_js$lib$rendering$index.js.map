{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$index.js",
"lineCount":312,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/rendering/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GlBatchAdaptor = require('./batcher/gl/GlBatchAdaptor.js');\nvar checkMaxIfStatementsInShader = require('./batcher/gl/utils/checkMaxIfStatementsInShader.js');\nvar maxRecommendedTextures = require('./batcher/gl/utils/maxRecommendedTextures.js');\nvar generateGPULayout = require('./batcher/gpu/generateGPULayout.js');\nvar generateLayout = require('./batcher/gpu/generateLayout.js');\nvar getTextureBatchBindGroup = require('./batcher/gpu/getTextureBatchBindGroup.js');\nvar GpuBatchAdaptor = require('./batcher/gpu/GpuBatchAdaptor.js');\nvar Batcher = require('./batcher/shared/Batcher.js');\nvar BatcherPipe = require('./batcher/shared/BatcherPipe.js');\nvar BatchGeometry = require('./batcher/shared/BatchGeometry.js');\nvar BatchTextureArray = require('./batcher/shared/BatchTextureArray.js');\nvar DefaultBatcher = require('./batcher/shared/DefaultBatcher.js');\nvar DefaultShader = require('./batcher/shared/DefaultShader.js');\nvar compileHighShaderToProgram = require('./high-shader/compileHighShaderToProgram.js');\nvar compileHighShader = require('./high-shader/compiler/compileHighShader.js');\nrequire('./high-shader/compiler/types.js');\nvar addBits = require('./high-shader/compiler/utils/addBits.js');\nvar compileHooks = require('./high-shader/compiler/utils/compileHooks.js');\nvar compileInputs = require('./high-shader/compiler/utils/compileInputs.js');\nvar compileOutputs = require('./high-shader/compiler/utils/compileOutputs.js');\nvar formatShader = require('./high-shader/compiler/utils/formatShader.js');\nvar injectBits = require('./high-shader/compiler/utils/injectBits.js');\nvar defaultProgramTemplate = require('./high-shader/defaultProgramTemplate.js');\nvar colorBit = require('./high-shader/shader-bits/colorBit.js');\nvar generateTextureBatchBit = require('./high-shader/shader-bits/generateTextureBatchBit.js');\nvar globalUniformsBit = require('./high-shader/shader-bits/globalUniformsBit.js');\nvar localUniformBit = require('./high-shader/shader-bits/localUniformBit.js');\nvar roundPixelsBit = require('./high-shader/shader-bits/roundPixelsBit.js');\nvar textureBit = require('./high-shader/shader-bits/textureBit.js');\nvar AlphaMask = require('./mask/alpha/AlphaMask.js');\nvar AlphaMaskPipe = require('./mask/alpha/AlphaMaskPipe.js');\nvar ColorMask = require('./mask/color/ColorMask.js');\nvar ColorMaskPipe = require('./mask/color/ColorMaskPipe.js');\nvar MaskEffectManager = require('./mask/MaskEffectManager.js');\nvar ScissorMask = require('./mask/scissor/ScissorMask.js');\nvar StencilMask = require('./mask/stencil/StencilMask.js');\nvar StencilMaskPipe = require('./mask/stencil/StencilMaskPipe.js');\nvar addMaskBounds = require('./mask/utils/addMaskBounds.js');\nvar addMaskLocalBounds = require('./mask/utils/addMaskLocalBounds.js');\nvar autoDetectRenderer = require('./renderers/autoDetectRenderer.js');\nvar _const = require('./renderers/gl/buffer/const.js');\nvar GlBuffer = require('./renderers/gl/buffer/GlBuffer.js');\nvar GlBufferSystem = require('./renderers/gl/buffer/GlBufferSystem.js');\nvar _const$1 = require('./renderers/gl/const.js');\nvar GlContextSystem = require('./renderers/gl/context/GlContextSystem.js');\nrequire('./renderers/gl/context/GlRenderingContext.js');\nrequire('./renderers/gl/context/WebGLExtensions.js');\nvar GlGeometrySystem = require('./renderers/gl/geometry/GlGeometrySystem.js');\nvar getGlTypeFromFormat = require('./renderers/gl/geometry/utils/getGlTypeFromFormat.js');\nvar GlBackBufferSystem = require('./renderers/gl/GlBackBufferSystem.js');\nvar GlColorMaskSystem = require('./renderers/gl/GlColorMaskSystem.js');\nvar GlEncoderSystem = require('./renderers/gl/GlEncoderSystem.js');\nvar GlRenderTarget = require('./renderers/gl/GlRenderTarget.js');\nvar GlStencilSystem = require('./renderers/gl/GlStencilSystem.js');\nvar GlUboSystem = require('./renderers/gl/GlUboSystem.js');\nvar GlRenderTargetAdaptor = require('./renderers/gl/renderTarget/GlRenderTargetAdaptor.js');\nvar GlRenderTargetSystem = require('./renderers/gl/renderTarget/GlRenderTargetSystem.js');\nrequire('./renderers/gl/shader/const.js');\nvar GenerateShaderSyncCode = require('./renderers/gl/shader/GenerateShaderSyncCode.js');\nvar getBatchSamplersUniformGroup = require('./renderers/gl/shader/getBatchSamplersUniformGroup.js');\nvar GlProgram = require('./renderers/gl/shader/GlProgram.js');\nvar GlProgramData = require('./renderers/gl/shader/GlProgramData.js');\nvar GlShaderSystem = require('./renderers/gl/shader/GlShaderSystem.js');\nvar GlUniformGroupSystem = require('./renderers/gl/shader/GlUniformGroupSystem.js');\nvar migrateFragmentFromV7toV8 = require('./renderers/gl/shader/migrateFragmentFromV7toV8.js');\nvar compileShader = require('./renderers/gl/shader/program/compileShader.js');\nvar defaultValue = require('./renderers/gl/shader/program/defaultValue.js');\nvar ensureAttributes = require('./renderers/gl/shader/program/ensureAttributes.js');\nvar extractAttributesFromGlProgram = require('./renderers/gl/shader/program/extractAttributesFromGlProgram.js');\nvar generateProgram = require('./renderers/gl/shader/program/generateProgram.js');\nvar getMaxFragmentPrecision = require('./renderers/gl/shader/program/getMaxFragmentPrecision.js');\nvar getTestContext = require('./renderers/gl/shader/program/getTestContext.js');\nvar getUboData = require('./renderers/gl/shader/program/getUboData.js');\nvar getUniformData = require('./renderers/gl/shader/program/getUniformData.js');\nvar logProgramError = require('./renderers/gl/shader/program/logProgramError.js');\nvar mapSize = require('./renderers/gl/shader/program/mapSize.js');\nvar mapType = require('./renderers/gl/shader/program/mapType.js');\nvar addProgramDefines = require('./renderers/gl/shader/program/preprocessors/addProgramDefines.js');\nvar ensurePrecision = require('./renderers/gl/shader/program/preprocessors/ensurePrecision.js');\nvar insertVersion = require('./renderers/gl/shader/program/preprocessors/insertVersion.js');\nvar setProgramName = require('./renderers/gl/shader/program/preprocessors/setProgramName.js');\nvar stripVersion = require('./renderers/gl/shader/program/preprocessors/stripVersion.js');\nvar createUboElementsSTD40 = require('./renderers/gl/shader/utils/createUboElementsSTD40.js');\nvar createUboSyncSTD40 = require('./renderers/gl/shader/utils/createUboSyncSTD40.js');\nvar generateArraySyncSTD40 = require('./renderers/gl/shader/utils/generateArraySyncSTD40.js');\nvar generateUniformsSync = require('./renderers/gl/shader/utils/generateUniformsSync.js');\nvar generateUniformsSyncTypes = require('./renderers/gl/shader/utils/generateUniformsSyncTypes.js');\nvar GlStateSystem = require('./renderers/gl/state/GlStateSystem.js');\nvar mapWebGLBlendModesToPixi = require('./renderers/gl/state/mapWebGLBlendModesToPixi.js');\nvar _const$2 = require('./renderers/gl/texture/const.js');\nvar GlTexture = require('./renderers/gl/texture/GlTexture.js');\nvar GlTextureSystem = require('./renderers/gl/texture/GlTextureSystem.js');\nrequire('./renderers/gl/texture/uploaders/GLTextureUploader.js');\nvar glUploadBufferImageResource = require('./renderers/gl/texture/uploaders/glUploadBufferImageResource.js');\nvar glUploadCompressedTextureResource = require('./renderers/gl/texture/uploaders/glUploadCompressedTextureResource.js');\nvar glUploadImageResource = require('./renderers/gl/texture/uploaders/glUploadImageResource.js');\nvar glUploadVideoResource = require('./renderers/gl/texture/uploaders/glUploadVideoResource.js');\nvar applyStyleParams = require('./renderers/gl/texture/utils/applyStyleParams.js');\nvar getSupportedGlCompressedTextureFormats = require('./renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.js');\nvar mapFormatToGlFormat = require('./renderers/gl/texture/utils/mapFormatToGlFormat.js');\nvar mapFormatToGlInternalFormat = require('./renderers/gl/texture/utils/mapFormatToGlInternalFormat.js');\nvar mapFormatToGlType = require('./renderers/gl/texture/utils/mapFormatToGlType.js');\nvar pixiToGlMaps = require('./renderers/gl/texture/utils/pixiToGlMaps.js');\nvar unpremultiplyAlpha = require('./renderers/gl/texture/utils/unpremultiplyAlpha.js');\nvar WebGLRenderer = require('./renderers/gl/WebGLRenderer.js');\nvar BindGroupSystem = require('./renderers/gpu/BindGroupSystem.js');\nvar GpuBufferSystem = require('./renderers/gpu/buffer/GpuBufferSystem.js');\nvar GpuReadBuffer = require('./renderers/gpu/buffer/GpuReadBuffer.js');\nvar UboBatch = require('./renderers/gpu/buffer/UboBatch.js');\nvar GpuColorMaskSystem = require('./renderers/gpu/GpuColorMaskSystem.js');\nvar GpuDeviceSystem = require('./renderers/gpu/GpuDeviceSystem.js');\nvar GpuEncoderSystem = require('./renderers/gpu/GpuEncoderSystem.js');\nvar GpuStencilSystem = require('./renderers/gpu/GpuStencilSystem.js');\nvar GpuUboSystem = require('./renderers/gpu/GpuUboSystem.js');\nvar GpuUniformBatchPipe = require('./renderers/gpu/GpuUniformBatchPipe.js');\nvar PipelineSystem = require('./renderers/gpu/pipeline/PipelineSystem.js');\nvar calculateProjection = require('./renderers/gpu/renderTarget/calculateProjection.js');\nvar GpuRenderTarget = require('./renderers/gpu/renderTarget/GpuRenderTarget.js');\nvar GpuRenderTargetAdaptor = require('./renderers/gpu/renderTarget/GpuRenderTargetAdaptor.js');\nvar GpuRenderTargetSystem = require('./renderers/gpu/renderTarget/GpuRenderTargetSystem.js');\nvar BindGroup = require('./renderers/gpu/shader/BindGroup.js');\nrequire('./renderers/gpu/shader/BindResource.js');\nvar GpuProgram = require('./renderers/gpu/shader/GpuProgram.js');\nvar GpuShaderSystem = require('./renderers/gpu/shader/GpuShaderSystem.js');\nvar createUboElementsWGSL = require('./renderers/gpu/shader/utils/createUboElementsWGSL.js');\nvar createUboSyncFunctionWGSL = require('./renderers/gpu/shader/utils/createUboSyncFunctionWGSL.js');\nvar extractAttributesFromGpuProgram = require('./renderers/gpu/shader/utils/extractAttributesFromGpuProgram.js');\nvar extractStructAndGroups = require('./renderers/gpu/shader/utils/extractStructAndGroups.js');\nvar generateArraySyncWGSL = require('./renderers/gpu/shader/utils/generateArraySyncWGSL.js');\nvar generateGpuLayoutGroups = require('./renderers/gpu/shader/utils/generateGpuLayoutGroups.js');\nvar generateLayoutHash = require('./renderers/gpu/shader/utils/generateLayoutHash.js');\nvar removeStructAndGroupDuplicates = require('./renderers/gpu/shader/utils/removeStructAndGroupDuplicates.js');\nvar GpuBlendModesToPixi = require('./renderers/gpu/state/GpuBlendModesToPixi.js');\nvar GpuStateSystem = require('./renderers/gpu/state/GpuStateSystem.js');\nvar GpuStencilModesToPixi = require('./renderers/gpu/state/GpuStencilModesToPixi.js');\nvar GpuTextureSystem = require('./renderers/gpu/texture/GpuTextureSystem.js');\nrequire('./renderers/gpu/texture/uploaders/GpuTextureUploader.js');\nvar gpuUploadBufferImageResource = require('./renderers/gpu/texture/uploaders/gpuUploadBufferImageResource.js');\nvar gpuUploadCompressedTextureResource = require('./renderers/gpu/texture/uploaders/gpuUploadCompressedTextureResource.js');\nvar gpuUploadImageSource = require('./renderers/gpu/texture/uploaders/gpuUploadImageSource.js');\nvar gpuUploadVideoSource = require('./renderers/gpu/texture/uploaders/gpuUploadVideoSource.js');\nvar getSupportedGPUCompressedTextureFormats = require('./renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.js');\nvar GpuMipmapGenerator = require('./renderers/gpu/texture/utils/GpuMipmapGenerator.js');\nvar WebGPURenderer = require('./renderers/gpu/WebGPURenderer.js');\nvar BackgroundSystem = require('./renderers/shared/background/BackgroundSystem.js');\nvar BlendModePipe = require('./renderers/shared/blendModes/BlendModePipe.js');\nvar Buffer = require('./renderers/shared/buffer/Buffer.js');\nvar BufferResource = require('./renderers/shared/buffer/BufferResource.js');\nvar _const$3 = require('./renderers/shared/buffer/const.js');\nvar fastCopy = require('./renderers/shared/buffer/utils/fastCopy.js');\nvar ExtractSystem = require('./renderers/shared/extract/ExtractSystem.js');\nvar GenerateTextureSystem = require('./renderers/shared/extract/GenerateTextureSystem.js');\nvar _const$4 = require('./renderers/shared/geometry/const.js');\nvar Geometry = require('./renderers/shared/geometry/Geometry.js');\nvar buildUvs = require('./renderers/shared/geometry/utils/buildUvs.js');\nvar ensureIsBuffer = require('./renderers/shared/geometry/utils/ensureIsBuffer.js');\nvar getAttributeInfoFromFormat = require('./renderers/shared/geometry/utils/getAttributeInfoFromFormat.js');\nvar getGeometryBounds = require('./renderers/shared/geometry/utils/getGeometryBounds.js');\nvar transformVertices = require('./renderers/shared/geometry/utils/transformVertices.js');\nrequire('./renderers/shared/instructions/Instruction.js');\nvar InstructionSet = require('./renderers/shared/instructions/InstructionSet.js');\nrequire('./renderers/shared/instructions/RenderPipe.js');\nrequire('./renderers/shared/Renderable.js');\nvar GlobalUniformSystem = require('./renderers/shared/renderTarget/GlobalUniformSystem.js');\nvar isRenderingToScreen = require('./renderers/shared/renderTarget/isRenderingToScreen.js');\nvar RenderTarget = require('./renderers/shared/renderTarget/RenderTarget.js');\nvar RenderTargetSystem = require('./renderers/shared/renderTarget/RenderTargetSystem.js');\nvar viewportFromFrame = require('./renderers/shared/renderTarget/viewportFromFrame.js');\nvar SchedulerSystem = require('./renderers/shared/SchedulerSystem.js');\nvar _const$5 = require('./renderers/shared/shader/const.js');\nvar Shader = require('./renderers/shared/shader/Shader.js');\nrequire('./renderers/shared/shader/ShaderSystem.js');\nvar types = require('./renderers/shared/shader/types.js');\nvar UboSystem = require('./renderers/shared/shader/UboSystem.js');\nvar UniformGroup = require('./renderers/shared/shader/UniformGroup.js');\nvar createUboSyncFunction = require('./renderers/shared/shader/utils/createUboSyncFunction.js');\nvar getDefaultUniformValue = require('./renderers/shared/shader/utils/getDefaultUniformValue.js');\nvar uboSyncFunctions = require('./renderers/shared/shader/utils/uboSyncFunctions.js');\nvar uniformParsers = require('./renderers/shared/shader/utils/uniformParsers.js');\nvar HelloSystem = require('./renderers/shared/startup/HelloSystem.js');\nvar _const$6 = require('./renderers/shared/state/const.js');\nvar getAdjustedBlendModeBlend = require('./renderers/shared/state/getAdjustedBlendModeBlend.js');\nvar State = require('./renderers/shared/state/State.js');\nvar AbstractRenderer = require('./renderers/shared/system/AbstractRenderer.js');\nvar SharedSystems = require('./renderers/shared/system/SharedSystems.js');\nrequire('./renderers/shared/system/System.js');\nvar SystemRunner = require('./renderers/shared/system/SystemRunner.js');\nrequire('./renderers/shared/system/utils/typeUtils.js');\nvar CanvasPool = require('./renderers/shared/texture/CanvasPool.js');\nvar _const$7 = require('./renderers/shared/texture/const.js');\nrequire('./renderers/shared/texture/GenerateCanvas.js');\nvar RenderableGCSystem = require('./renderers/shared/texture/RenderableGCSystem.js');\nvar RenderTexture = require('./renderers/shared/texture/RenderTexture.js');\nvar BufferImageSource = require('./renderers/shared/texture/sources/BufferImageSource.js');\nvar CanvasSource = require('./renderers/shared/texture/sources/CanvasSource.js');\nvar CompressedSource = require('./renderers/shared/texture/sources/CompressedSource.js');\nvar ImageSource = require('./renderers/shared/texture/sources/ImageSource.js');\nvar TextureSource = require('./renderers/shared/texture/sources/TextureSource.js');\nvar VideoSource = require('./renderers/shared/texture/sources/VideoSource.js');\nvar Texture = require('./renderers/shared/texture/Texture.js');\nvar TextureGCSystem = require('./renderers/shared/texture/TextureGCSystem.js');\nvar TextureMatrix = require('./renderers/shared/texture/TextureMatrix.js');\nvar TexturePool = require('./renderers/shared/texture/TexturePool.js');\nvar TextureStyle = require('./renderers/shared/texture/TextureStyle.js');\nvar TextureUvs = require('./renderers/shared/texture/TextureUvs.js');\nvar generateUID = require('./renderers/shared/texture/utils/generateUID.js');\nvar getCanvasTexture = require('./renderers/shared/texture/utils/getCanvasTexture.js');\nvar getSupportedCompressedTextureFormats = require('./renderers/shared/texture/utils/getSupportedCompressedTextureFormats.js');\nvar getSupportedTextureFormats = require('./renderers/shared/texture/utils/getSupportedTextureFormats.js');\nvar textureFrom = require('./renderers/shared/texture/utils/textureFrom.js');\nvar createIdFromString = require('./renderers/shared/utils/createIdFromString.js');\nvar parseFunctionBody = require('./renderers/shared/utils/parseFunctionBody.js');\nrequire('./renderers/shared/view/View.js');\nvar ViewSystem = require('./renderers/shared/view/ViewSystem.js');\nvar types$1 = require('./renderers/types.js');\n\n\"use strict\";\n\nexports.GlBatchAdaptor = GlBatchAdaptor.GlBatchAdaptor;\nexports.checkMaxIfStatementsInShader = checkMaxIfStatementsInShader.checkMaxIfStatementsInShader;\nexports.getMaxTexturesPerBatch = maxRecommendedTextures.getMaxTexturesPerBatch;\nexports.generateGPULayout = generateGPULayout.generateGPULayout;\nexports.generateLayout = generateLayout.generateLayout;\nexports.getTextureBatchBindGroup = getTextureBatchBindGroup.getTextureBatchBindGroup;\nexports.GpuBatchAdaptor = GpuBatchAdaptor.GpuBatchAdaptor;\nexports.Batch = Batcher.Batch;\nexports.Batcher = Batcher.Batcher;\nexports.BatcherPipe = BatcherPipe.BatcherPipe;\nexports.BatchGeometry = BatchGeometry.BatchGeometry;\nexports.BatchTextureArray = BatchTextureArray.BatchTextureArray;\nexports.DefaultBatcher = DefaultBatcher.DefaultBatcher;\nexports.DefaultShader = DefaultShader.DefaultShader;\nexports.compileHighShaderGlProgram = compileHighShaderToProgram.compileHighShaderGlProgram;\nexports.compileHighShaderGpuProgram = compileHighShaderToProgram.compileHighShaderGpuProgram;\nexports.compileHighShader = compileHighShader.compileHighShader;\nexports.compileHighShaderGl = compileHighShader.compileHighShaderGl;\nexports.addBits = addBits.addBits;\nexports.compileHooks = compileHooks.compileHooks;\nexports.findHooksRx = compileHooks.findHooksRx;\nexports.compileInputs = compileInputs.compileInputs;\nexports.compileOutputs = compileOutputs.compileOutputs;\nexports.formatShader = formatShader.formatShader;\nexports.injectBits = injectBits.injectBits;\nexports.fragmentGPUTemplate = defaultProgramTemplate.fragmentGPUTemplate;\nexports.fragmentGlTemplate = defaultProgramTemplate.fragmentGlTemplate;\nexports.vertexGPUTemplate = defaultProgramTemplate.vertexGPUTemplate;\nexports.vertexGlTemplate = defaultProgramTemplate.vertexGlTemplate;\nexports.colorBit = colorBit.colorBit;\nexports.colorBitGl = colorBit.colorBitGl;\nexports.generateTextureBatchBit = generateTextureBatchBit.generateTextureBatchBit;\nexports.generateTextureBatchBitGl = generateTextureBatchBit.generateTextureBatchBitGl;\nexports.globalUniformsBit = globalUniformsBit.globalUniformsBit;\nexports.globalUniformsBitGl = globalUniformsBit.globalUniformsBitGl;\nexports.globalUniformsUBOBitGl = globalUniformsBit.globalUniformsUBOBitGl;\nexports.localUniformBit = localUniformBit.localUniformBit;\nexports.localUniformBitGl = localUniformBit.localUniformBitGl;\nexports.localUniformBitGroup2 = localUniformBit.localUniformBitGroup2;\nexports.roundPixelsBit = roundPixelsBit.roundPixelsBit;\nexports.roundPixelsBitGl = roundPixelsBit.roundPixelsBitGl;\nexports.textureBit = textureBit.textureBit;\nexports.textureBitGl = textureBit.textureBitGl;\nexports.AlphaMask = AlphaMask.AlphaMask;\nexports.AlphaMaskPipe = AlphaMaskPipe.AlphaMaskPipe;\nexports.ColorMask = ColorMask.ColorMask;\nexports.ColorMaskPipe = ColorMaskPipe.ColorMaskPipe;\nexports.MaskEffectManager = MaskEffectManager.MaskEffectManager;\nexports.MaskEffectManagerClass = MaskEffectManager.MaskEffectManagerClass;\nexports.ScissorMask = ScissorMask.ScissorMask;\nexports.StencilMask = StencilMask.StencilMask;\nexports.StencilMaskPipe = StencilMaskPipe.StencilMaskPipe;\nexports.addMaskBounds = addMaskBounds.addMaskBounds;\nexports.addMaskLocalBounds = addMaskLocalBounds.addMaskLocalBounds;\nexports.getMatrixRelativeToParent = addMaskLocalBounds.getMatrixRelativeToParent;\nexports.autoDetectRenderer = autoDetectRenderer.autoDetectRenderer;\nexports.BUFFER_TYPE = _const.BUFFER_TYPE;\nexports.GlBuffer = GlBuffer.GlBuffer;\nexports.GlBufferSystem = GlBufferSystem.GlBufferSystem;\nexports.CLEAR = _const$1.CLEAR;\nexports.GlContextSystem = GlContextSystem.GlContextSystem;\nexports.GlGeometrySystem = GlGeometrySystem.GlGeometrySystem;\nexports.getGlTypeFromFormat = getGlTypeFromFormat.getGlTypeFromFormat;\nexports.GlBackBufferSystem = GlBackBufferSystem.GlBackBufferSystem;\nexports.GlColorMaskSystem = GlColorMaskSystem.GlColorMaskSystem;\nexports.GlEncoderSystem = GlEncoderSystem.GlEncoderSystem;\nexports.GlRenderTarget = GlRenderTarget.GlRenderTarget;\nexports.GlStencilSystem = GlStencilSystem.GlStencilSystem;\nexports.GlUboSystem = GlUboSystem.GlUboSystem;\nexports.GlRenderTargetAdaptor = GlRenderTargetAdaptor.GlRenderTargetAdaptor;\nexports.GlRenderTargetSystem = GlRenderTargetSystem.GlRenderTargetSystem;\nexports.generateShaderSyncCode = GenerateShaderSyncCode.generateShaderSyncCode;\nexports.getBatchSamplersUniformGroup = getBatchSamplersUniformGroup.getBatchSamplersUniformGroup;\nexports.GlProgram = GlProgram.GlProgram;\nexports.GlProgramData = GlProgramData.GlProgramData;\nexports.IGLUniformData = GlProgramData.IGLUniformData;\nexports.GlShaderSystem = GlShaderSystem.GlShaderSystem;\nexports.GlUniformGroupSystem = GlUniformGroupSystem.GlUniformGroupSystem;\nexports.migrateFragmentFromV7toV8 = migrateFragmentFromV7toV8.migrateFragmentFromV7toV8;\nexports.compileShader = compileShader.compileShader;\nexports.defaultValue = defaultValue.defaultValue;\nexports.ensureAttributes = ensureAttributes.ensureAttributes;\nexports.extractAttributesFromGlProgram = extractAttributesFromGlProgram.extractAttributesFromGlProgram;\nexports.generateProgram = generateProgram.generateProgram;\nexports.getMaxFragmentPrecision = getMaxFragmentPrecision.getMaxFragmentPrecision;\nexports.getTestContext = getTestContext.getTestContext;\nexports.getUboData = getUboData.getUboData;\nexports.getUniformData = getUniformData.getUniformData;\nexports.logProgramError = logProgramError.logProgramError;\nexports.mapSize = mapSize.mapSize;\nexports.mapGlToVertexFormat = mapType.mapGlToVertexFormat;\nexports.mapType = mapType.mapType;\nexports.addProgramDefines = addProgramDefines.addProgramDefines;\nexports.ensurePrecision = ensurePrecision.ensurePrecision;\nexports.insertVersion = insertVersion.insertVersion;\nexports.setProgramName = setProgramName.setProgramName;\nexports.stripVersion = stripVersion.stripVersion;\nexports.WGSL_TO_STD40_SIZE = createUboElementsSTD40.WGSL_TO_STD40_SIZE;\nexports.createUboElementsSTD40 = createUboElementsSTD40.createUboElementsSTD40;\nexports.createUboSyncFunctionSTD40 = createUboSyncSTD40.createUboSyncFunctionSTD40;\nexports.generateArraySyncSTD40 = generateArraySyncSTD40.generateArraySyncSTD40;\nexports.generateUniformsSync = generateUniformsSync.generateUniformsSync;\nexports.UNIFORM_TO_ARRAY_SETTERS = generateUniformsSyncTypes.UNIFORM_TO_ARRAY_SETTERS;\nexports.UNIFORM_TO_SINGLE_SETTERS = generateUniformsSyncTypes.UNIFORM_TO_SINGLE_SETTERS;\nexports.GlStateSystem = GlStateSystem.GlStateSystem;\nexports.mapWebGLBlendModesToPixi = mapWebGLBlendModesToPixi.mapWebGLBlendModesToPixi;\nexports.GL_FORMATS = _const$2.GL_FORMATS;\nexports.GL_TARGETS = _const$2.GL_TARGETS;\nexports.GL_TYPES = _const$2.GL_TYPES;\nexports.GL_WRAP_MODES = _const$2.GL_WRAP_MODES;\nexports.GlTexture = GlTexture.GlTexture;\nexports.GlTextureSystem = GlTextureSystem.GlTextureSystem;\nexports.glUploadBufferImageResource = glUploadBufferImageResource.glUploadBufferImageResource;\nexports.glUploadCompressedTextureResource = glUploadCompressedTextureResource.glUploadCompressedTextureResource;\nexports.glUploadImageResource = glUploadImageResource.glUploadImageResource;\nexports.glUploadVideoResource = glUploadVideoResource.glUploadVideoResource;\nexports.applyStyleParams = applyStyleParams.applyStyleParams;\nexports.getSupportedGlCompressedTextureFormats = getSupportedGlCompressedTextureFormats.getSupportedGlCompressedTextureFormats;\nexports.mapFormatToGlFormat = mapFormatToGlFormat.mapFormatToGlFormat;\nexports.mapFormatToGlInternalFormat = mapFormatToGlInternalFormat.mapFormatToGlInternalFormat;\nexports.mapFormatToGlType = mapFormatToGlType.mapFormatToGlType;\nexports.compareModeToGlCompare = pixiToGlMaps.compareModeToGlCompare;\nexports.mipmapScaleModeToGlFilter = pixiToGlMaps.mipmapScaleModeToGlFilter;\nexports.scaleModeToGlFilter = pixiToGlMaps.scaleModeToGlFilter;\nexports.wrapModeToGlAddress = pixiToGlMaps.wrapModeToGlAddress;\nexports.unpremultiplyAlpha = unpremultiplyAlpha.unpremultiplyAlpha;\nexports.WebGLRenderer = WebGLRenderer.WebGLRenderer;\nexports.BindGroupSystem = BindGroupSystem.BindGroupSystem;\nexports.GpuBufferSystem = GpuBufferSystem.GpuBufferSystem;\nexports.GpuReadBuffer = GpuReadBuffer.GpuReadBuffer;\nexports.UboBatch = UboBatch.UboBatch;\nexports.GpuColorMaskSystem = GpuColorMaskSystem.GpuColorMaskSystem;\nexports.GpuDeviceSystem = GpuDeviceSystem.GpuDeviceSystem;\nexports.GpuEncoderSystem = GpuEncoderSystem.GpuEncoderSystem;\nexports.GpuStencilSystem = GpuStencilSystem.GpuStencilSystem;\nexports.GpuUboSystem = GpuUboSystem.GpuUboSystem;\nexports.GpuUniformBatchPipe = GpuUniformBatchPipe.GpuUniformBatchPipe;\nexports.PipelineSystem = PipelineSystem.PipelineSystem;\nexports.calculateProjection = calculateProjection.calculateProjection;\nexports.GpuRenderTarget = GpuRenderTarget.GpuRenderTarget;\nexports.GpuRenderTargetAdaptor = GpuRenderTargetAdaptor.GpuRenderTargetAdaptor;\nexports.GpuRenderTargetSystem = GpuRenderTargetSystem.GpuRenderTargetSystem;\nexports.BindGroup = BindGroup.BindGroup;\nexports.GpuProgram = GpuProgram.GpuProgram;\nexports.GpuShaderSystem = GpuShaderSystem.GpuShaderSystem;\nexports.WGSL_ALIGN_SIZE_DATA = createUboElementsWGSL.WGSL_ALIGN_SIZE_DATA;\nexports.createUboElementsWGSL = createUboElementsWGSL.createUboElementsWGSL;\nexports.createUboSyncFunctionWGSL = createUboSyncFunctionWGSL.createUboSyncFunctionWGSL;\nexports.extractAttributesFromGpuProgram = extractAttributesFromGpuProgram.extractAttributesFromGpuProgram;\nexports.extractStructAndGroups = extractStructAndGroups.extractStructAndGroups;\nexports.generateArraySyncWGSL = generateArraySyncWGSL.generateArraySyncWGSL;\nexports.generateGpuLayoutGroups = generateGpuLayoutGroups.generateGpuLayoutGroups;\nexports.generateLayoutHash = generateLayoutHash.generateLayoutHash;\nexports.removeStructAndGroupDuplicates = removeStructAndGroupDuplicates.removeStructAndGroupDuplicates;\nexports.GpuBlendModesToPixi = GpuBlendModesToPixi.GpuBlendModesToPixi;\nexports.GpuStateSystem = GpuStateSystem.GpuStateSystem;\nexports.GpuStencilModesToPixi = GpuStencilModesToPixi.GpuStencilModesToPixi;\nexports.GpuTextureSystem = GpuTextureSystem.GpuTextureSystem;\nexports.gpuUploadBufferImageResource = gpuUploadBufferImageResource.gpuUploadBufferImageResource;\nexports.blockDataMap = gpuUploadCompressedTextureResource.blockDataMap;\nexports.gpuUploadCompressedTextureResource = gpuUploadCompressedTextureResource.gpuUploadCompressedTextureResource;\nexports.gpuUploadImageResource = gpuUploadImageSource.gpuUploadImageResource;\nexports.gpuUploadVideoResource = gpuUploadVideoSource.gpuUploadVideoResource;\nexports.getSupportedGPUCompressedTextureFormats = getSupportedGPUCompressedTextureFormats.getSupportedGPUCompressedTextureFormats;\nexports.GpuMipmapGenerator = GpuMipmapGenerator.GpuMipmapGenerator;\nexports.WebGPURenderer = WebGPURenderer.WebGPURenderer;\nexports.BackgroundSystem = BackgroundSystem.BackgroundSystem;\nexports.BlendModePipe = BlendModePipe.BlendModePipe;\nexports.Buffer = Buffer.Buffer;\nexports.BufferResource = BufferResource.BufferResource;\nexports.BufferUsage = _const$3.BufferUsage;\nexports.fastCopy = fastCopy.fastCopy;\nexports.ExtractSystem = ExtractSystem.ExtractSystem;\nexports.GenerateTextureSystem = GenerateTextureSystem.GenerateTextureSystem;\nexports.DRAW_MODES = _const$4.DRAW_MODES;\nexports.Geometry = Geometry.Geometry;\nexports.buildSimpleUvs = buildUvs.buildSimpleUvs;\nexports.buildUvs = buildUvs.buildUvs;\nexports.ensureIsBuffer = ensureIsBuffer.ensureIsBuffer;\nexports.getAttributeInfoFromFormat = getAttributeInfoFromFormat.getAttributeInfoFromFormat;\nexports.getGeometryBounds = getGeometryBounds.getGeometryBounds;\nexports.transformVertices = transformVertices.transformVertices;\nexports.InstructionSet = InstructionSet.InstructionSet;\nexports.GlobalUniformSystem = GlobalUniformSystem.GlobalUniformSystem;\nexports.isRenderingToScreen = isRenderingToScreen.isRenderingToScreen;\nexports.RenderTarget = RenderTarget.RenderTarget;\nexports.RenderTargetSystem = RenderTargetSystem.RenderTargetSystem;\nexports.viewportFromFrame = viewportFromFrame.viewportFromFrame;\nexports.SchedulerSystem = SchedulerSystem.SchedulerSystem;\nexports.ShaderStage = _const$5.ShaderStage;\nexports.Shader = Shader.Shader;\nexports.UNIFORM_TYPES_MAP = types.UNIFORM_TYPES_MAP;\nexports.UNIFORM_TYPES_VALUES = types.UNIFORM_TYPES_VALUES;\nexports.UboSystem = UboSystem.UboSystem;\nexports.UniformGroup = UniformGroup.UniformGroup;\nexports.createUboSyncFunction = createUboSyncFunction.createUboSyncFunction;\nexports.getDefaultUniformValue = getDefaultUniformValue.getDefaultUniformValue;\nexports.uboSyncFunctionsSTD40 = uboSyncFunctions.uboSyncFunctionsSTD40;\nexports.uboSyncFunctionsWGSL = uboSyncFunctions.uboSyncFunctionsWGSL;\nexports.uniformParsers = uniformParsers.uniformParsers;\nexports.HelloSystem = HelloSystem.HelloSystem;\nexports.BLEND_TO_NPM = _const$6.BLEND_TO_NPM;\nexports.STENCIL_MODES = _const$6.STENCIL_MODES;\nexports.getAdjustedBlendModeBlend = getAdjustedBlendModeBlend.getAdjustedBlendModeBlend;\nexports.State = State.State;\nexports.AbstractRenderer = AbstractRenderer.AbstractRenderer;\nexports.SharedRenderPipes = SharedSystems.SharedRenderPipes;\nexports.SharedSystems = SharedSystems.SharedSystems;\nexports.SystemRunner = SystemRunner.SystemRunner;\nexports.CanvasPool = CanvasPool.CanvasPool;\nexports.CanvasPoolClass = CanvasPool.CanvasPoolClass;\nexports.DEPRECATED_SCALE_MODES = _const$7.DEPRECATED_SCALE_MODES;\nexports.DEPRECATED_WRAP_MODES = _const$7.DEPRECATED_WRAP_MODES;\nexports.MSAA_QUALITY = _const$7.MSAA_QUALITY;\nexports.SCALE_MODES = _const$7.SCALE_MODES;\nexports.WRAP_MODES = _const$7.WRAP_MODES;\nexports.RenderableGCSystem = RenderableGCSystem.RenderableGCSystem;\nexports.RenderTexture = RenderTexture.RenderTexture;\nexports.BufferImageSource = BufferImageSource.BufferImageSource;\nexports.CanvasSource = CanvasSource.CanvasSource;\nexports.CompressedSource = CompressedSource.CompressedSource;\nexports.ImageSource = ImageSource.ImageSource;\nexports.TextureSource = TextureSource.TextureSource;\nexports.VideoSource = VideoSource.VideoSource;\nexports.Texture = Texture.Texture;\nexports.TextureGCSystem = TextureGCSystem.TextureGCSystem;\nexports.TextureMatrix = TextureMatrix.TextureMatrix;\nexports.TexturePool = TexturePool.TexturePool;\nexports.TexturePoolClass = TexturePool.TexturePoolClass;\nexports.TextureStyle = TextureStyle.TextureStyle;\nexports.TextureUvs = TextureUvs.TextureUvs;\nexports.generateUID = generateUID.generateUID;\nexports.getCanvasTexture = getCanvasTexture.getCanvasTexture;\nexports.hasCachedCanvasTexture = getCanvasTexture.hasCachedCanvasTexture;\nexports.getSupportedCompressedTextureFormats = getSupportedCompressedTextureFormats.getSupportedCompressedTextureFormats;\nexports.getSupportedTextureFormats = getSupportedTextureFormats.getSupportedTextureFormats;\nexports.nonCompressedFormats = getSupportedTextureFormats.nonCompressedFormats;\nexports.autoDetectSource = textureFrom.autoDetectSource;\nexports.resourceToTexture = textureFrom.resourceToTexture;\nexports.textureFrom = textureFrom.textureFrom;\nexports.createIdFromString = createIdFromString.createIdFromString;\nexports.parseFunctionBody = parseFunctionBody.parseFunctionBody;\nexports.ViewSystem = ViewSystem.ViewSystem;\nexports.RendererType = types$1.RendererType;\n//# sourceMappingURL=index.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","GlBatchAdaptor","checkMaxIfStatementsInShader","maxRecommendedTextures","generateGPULayout","generateLayout","getTextureBatchBindGroup","GpuBatchAdaptor","Batcher","BatcherPipe","BatchGeometry","BatchTextureArray","DefaultBatcher","DefaultShader","compileHighShaderToProgram","compileHighShader","addBits","compileHooks","compileInputs","compileOutputs","formatShader","injectBits","defaultProgramTemplate","colorBit","generateTextureBatchBit","globalUniformsBit","localUniformBit","roundPixelsBit","textureBit","AlphaMask","AlphaMaskPipe","ColorMask","ColorMaskPipe","MaskEffectManager","ScissorMask","StencilMask","StencilMaskPipe","addMaskBounds","addMaskLocalBounds","autoDetectRenderer","_const","GlBuffer","GlBufferSystem","_const$1","GlContextSystem","GlGeometrySystem","getGlTypeFromFormat","GlBackBufferSystem","GlColorMaskSystem","GlEncoderSystem","GlRenderTarget","GlStencilSystem","GlUboSystem","GlRenderTargetAdaptor","GlRenderTargetSystem","GenerateShaderSyncCode","getBatchSamplersUniformGroup","GlProgram","GlProgramData","GlShaderSystem","GlUniformGroupSystem","migrateFragmentFromV7toV8","compileShader","defaultValue","ensureAttributes","extractAttributesFromGlProgram","generateProgram","getMaxFragmentPrecision","getTestContext","getUboData","getUniformData","logProgramError","mapSize","mapType","addProgramDefines","ensurePrecision","insertVersion","setProgramName","stripVersion","createUboElementsSTD40","createUboSyncSTD40","generateArraySyncSTD40","generateUniformsSync","generateUniformsSyncTypes","GlStateSystem","mapWebGLBlendModesToPixi","_const$2","GlTexture","GlTextureSystem","glUploadBufferImageResource","glUploadCompressedTextureResource","glUploadImageResource","glUploadVideoResource","applyStyleParams","getSupportedGlCompressedTextureFormats","mapFormatToGlFormat","mapFormatToGlInternalFormat","mapFormatToGlType","pixiToGlMaps","unpremultiplyAlpha","WebGLRenderer","BindGroupSystem","GpuBufferSystem","GpuReadBuffer","UboBatch","GpuColorMaskSystem","GpuDeviceSystem","GpuEncoderSystem","GpuStencilSystem","GpuUboSystem","GpuUniformBatchPipe","PipelineSystem","calculateProjection","GpuRenderTarget","GpuRenderTargetAdaptor","GpuRenderTargetSystem","BindGroup","GpuProgram","GpuShaderSystem","createUboElementsWGSL","createUboSyncFunctionWGSL","extractAttributesFromGpuProgram","extractStructAndGroups","generateArraySyncWGSL","generateGpuLayoutGroups","generateLayoutHash","removeStructAndGroupDuplicates","GpuBlendModesToPixi","GpuStateSystem","GpuStencilModesToPixi","GpuTextureSystem","gpuUploadBufferImageResource","gpuUploadCompressedTextureResource","gpuUploadImageSource","gpuUploadVideoSource","getSupportedGPUCompressedTextureFormats","GpuMipmapGenerator","WebGPURenderer","BackgroundSystem","BlendModePipe","Buffer","BufferResource","_const$3","fastCopy","ExtractSystem","GenerateTextureSystem","_const$4","Geometry","buildUvs","ensureIsBuffer","getAttributeInfoFromFormat","getGeometryBounds","transformVertices","InstructionSet","GlobalUniformSystem","isRenderingToScreen","RenderTarget","RenderTargetSystem","viewportFromFrame","SchedulerSystem","_const$5","Shader","types","UboSystem","UniformGroup","createUboSyncFunction","getDefaultUniformValue","uboSyncFunctions","uniformParsers","HelloSystem","_const$6","getAdjustedBlendModeBlend","State","AbstractRenderer","SharedSystems","SystemRunner","CanvasPool","_const$7","RenderableGCSystem","RenderTexture","BufferImageSource","CanvasSource","CompressedSource","ImageSource","TextureSource","VideoSource","Texture","TextureGCSystem","TextureMatrix","TexturePool","TextureStyle","TextureUvs","generateUID","getCanvasTexture","getSupportedCompressedTextureFormats","getSupportedTextureFormats","textureFrom","createIdFromString","parseFunctionBody","ViewSystem","types$1","getMaxTexturesPerBatch","Batch","compileHighShaderGlProgram","compileHighShaderGpuProgram","compileHighShaderGl","findHooksRx","fragmentGPUTemplate","fragmentGlTemplate","vertexGPUTemplate","vertexGlTemplate","colorBitGl","generateTextureBatchBitGl","globalUniformsBitGl","globalUniformsUBOBitGl","localUniformBitGl","localUniformBitGroup2","roundPixelsBitGl","textureBitGl","MaskEffectManagerClass","getMatrixRelativeToParent","BUFFER_TYPE","CLEAR","generateShaderSyncCode","IGLUniformData","mapGlToVertexFormat","WGSL_TO_STD40_SIZE","createUboSyncFunctionSTD40","UNIFORM_TO_ARRAY_SETTERS","UNIFORM_TO_SINGLE_SETTERS","GL_FORMATS","GL_TARGETS","GL_TYPES","GL_WRAP_MODES","compareModeToGlCompare","mipmapScaleModeToGlFilter","scaleModeToGlFilter","wrapModeToGlAddress","WGSL_ALIGN_SIZE_DATA","blockDataMap","gpuUploadImageResource","gpuUploadVideoResource","BufferUsage","DRAW_MODES","buildSimpleUvs","ShaderStage","UNIFORM_TYPES_MAP","UNIFORM_TYPES_VALUES","uboSyncFunctionsSTD40","uboSyncFunctionsWGSL","BLEND_TO_NPM","STENCIL_MODES","SharedRenderPipes","CanvasPoolClass","DEPRECATED_SCALE_MODES","DEPRECATED_WRAP_MODES","MSAA_QUALITY","SCALE_MODES","WRAP_MODES","TexturePoolClass","hasCachedCanvasTexture","nonCompressedFormats","autoDetectSource","resourceToTexture","RendererType"]
}
