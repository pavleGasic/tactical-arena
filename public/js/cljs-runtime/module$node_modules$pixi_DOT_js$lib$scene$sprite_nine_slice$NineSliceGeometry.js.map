{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$scene$sprite_nine_slice$NineSliceGeometry.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/pixi_DOT_js/lib/scene/sprite-nine-slice/NineSliceGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$scene$sprite_nine_slice$NineSliceGeometry\"] = function(global,require,module,exports) {\n'use strict';\n\nvar PlaneGeometry = require('../mesh-plane/PlaneGeometry.js');\n\n\"use strict\";\nconst _NineSliceGeometry = class _NineSliceGeometry extends PlaneGeometry.PlaneGeometry {\n  constructor(options = {}) {\n    options = { ..._NineSliceGeometry.defaultOptions, ...options };\n    super({\n      width: options.width,\n      height: options.height,\n      verticesX: 4,\n      verticesY: 4\n    });\n    this.update(options);\n  }\n  /**\n   * Updates the NineSliceGeometry with the options.\n   * @param options - The options of the NineSliceGeometry.\n   */\n  update(options) {\n    this.width = options.width ?? this.width;\n    this.height = options.height ?? this.height;\n    this._originalWidth = options.originalWidth ?? this._originalWidth;\n    this._originalHeight = options.originalHeight ?? this._originalHeight;\n    this._leftWidth = options.leftWidth ?? this._leftWidth;\n    this._rightWidth = options.rightWidth ?? this._rightWidth;\n    this._topHeight = options.topHeight ?? this._topHeight;\n    this._bottomHeight = options.bottomHeight ?? this._bottomHeight;\n    this._anchorX = options.anchor?.x;\n    this._anchorY = options.anchor?.y;\n    this.updateUvs();\n    this.updatePositions();\n  }\n  /** Updates the positions of the vertices. */\n  updatePositions() {\n    const p = this.positions;\n    const {\n      width,\n      height,\n      _leftWidth,\n      _rightWidth,\n      _topHeight,\n      _bottomHeight,\n      _anchorX,\n      _anchorY\n    } = this;\n    const w = _leftWidth + _rightWidth;\n    const scaleW = width > w ? 1 : width / w;\n    const h = _topHeight + _bottomHeight;\n    const scaleH = height > h ? 1 : height / h;\n    const scale = Math.min(scaleW, scaleH);\n    const anchorOffsetX = _anchorX * width;\n    const anchorOffsetY = _anchorY * height;\n    p[0] = p[8] = p[16] = p[24] = -anchorOffsetX;\n    p[2] = p[10] = p[18] = p[26] = _leftWidth * scale - anchorOffsetX;\n    p[4] = p[12] = p[20] = p[28] = width - _rightWidth * scale - anchorOffsetX;\n    p[6] = p[14] = p[22] = p[30] = width - anchorOffsetX;\n    p[1] = p[3] = p[5] = p[7] = -anchorOffsetY;\n    p[9] = p[11] = p[13] = p[15] = _topHeight * scale - anchorOffsetY;\n    p[17] = p[19] = p[21] = p[23] = height - _bottomHeight * scale - anchorOffsetY;\n    p[25] = p[27] = p[29] = p[31] = height - anchorOffsetY;\n    this.getBuffer(\"aPosition\").update();\n  }\n  /** Updates the UVs of the vertices. */\n  updateUvs() {\n    const uvs = this.uvs;\n    uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n    uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n    uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n    uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n    const _uvw = 1 / this._originalWidth;\n    const _uvh = 1 / this._originalHeight;\n    uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n    uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n    uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _uvw * this._rightWidth;\n    uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _uvh * this._bottomHeight;\n    this.getBuffer(\"aUV\").update();\n  }\n};\n/** The default options for the NineSliceGeometry. */\n_NineSliceGeometry.defaultOptions = {\n  /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  width: 100,\n  /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  height: 100,\n  /** The width of the left column. */\n  leftWidth: 10,\n  /** The height of the top row. */\n  topHeight: 10,\n  /** The width of the right column. */\n  rightWidth: 10,\n  /** The height of the bottom row. */\n  bottomHeight: 10,\n  /** The original width of the texture */\n  originalWidth: 100,\n  /** The original height of the texture */\n  originalHeight: 100\n};\nlet NineSliceGeometry = _NineSliceGeometry;\n\nexports.NineSliceGeometry = NineSliceGeometry;\n//# sourceMappingURL=NineSliceGeometry.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","PlaneGeometry","constructor","options","_NineSliceGeometry","defaultOptions","width","height","verticesX","verticesY","update","_originalWidth","originalWidth","_originalHeight","originalHeight","_leftWidth","leftWidth","_rightWidth","rightWidth","_topHeight","topHeight","_bottomHeight","bottomHeight","_anchorX","anchor","x","_anchorY","y","updateUvs","updatePositions","p","positions","w","h","scale","Math","min","scaleW","scaleH","anchorOffsetX","anchorOffsetY","getBuffer","uvs","_uvw","_uvh","NineSliceGeometry"]
}
