{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$culling$Culler.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,GAAuE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG3GC,QAAAA,GAASH,OAAA,CAAQ,mEAAR,CAATG;AACJ,MAAIC,kBAAkBJ,OAAA,CAAQ,4EAAR,CAAtB;AAEA,cAAA;AACA,QAAMK,aAAa,IAAIF,MAAOA,CAAAA,MAAX,EAAnB;AACMG,SAAAA,GAAU,KAAA;AAQdC,QAAI,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,mBAAA,GAAsB,CAAA,CAAxC,CAA8C;AAChD,UAAKC,CAAAA,cAAL,CAAoBH,SAApB,EAA+BC,IAA/B,EAAqCC,mBAArC,CAAA;AADgD;AAGlDC,kBAAc,CAACH,SAAD,EAAYC,IAAZ,EAAkBC,mBAAA,GAAsB,CAAA,CAAxC,CAA8C;AAC1D,UAAIF,SAAUI,CAAAA,QAAd,IAA0BJ,SAAUK,CAAAA,UAApC,IAAkDL,SAAUM,CAAAA,cAA5D,CAA4E;AAC1E,YAAMC,SAASP,SAAUQ,CAAAA,QAAnBD,IAA+BX,eAAgBA,CAAAA,eAAhB,CAAgCI,SAAhC,EAA2CE,mBAA3C,EAAgEL,UAAhE,CAArC;AACAG,iBAAUS,CAAAA,MAAV,GAAmBF,MAAOG,CAAAA,CAA1B,IAA+BT,IAAKS,CAAAA,CAApC,GAAwCT,IAAKU,CAAAA,KAA7C,IAAsDJ,MAAOK,CAAAA,CAA7D,IAAkEX,IAAKW,CAAAA,CAAvE,GAA2EX,IAAKY,CAAAA,MAAhF,IAA0FN,MAAOG,CAAAA,CAAjG,GAAqGH,MAAOI,CAAAA,KAA5G,IAAqHV,IAAKS,CAAAA,CAA1H,IAA+HH,MAAOK,CAAAA,CAAtI,GAA0IL,MAAOM,CAAAA,MAAjJ,IAA2JZ,IAAKW,CAAAA,CAAhK;AAF0E,OAA5E;AAIEZ,iBAAUS,CAAAA,MAAV,GAAmB,CAAA,CAAnB;AAJF;AAMA,UAAKT,SAAUc,CAAAA,gBAAf,IAA6CL,CAAVT,SAAUS,CAAAA,MAA7C,IAAwDT,SAAUe,CAAAA,UAAlE,IAAiFf,SAAUK,CAAAA,UAA3F,IAA0GL,SAAUM,CAAAA,cAApH;AAEA,aAASU,MAAT,GAAa,CAAb,EAAgBA,MAAhB,GAAoBhB,SAAUiB,CAAAA,QAASC,CAAAA,MAAvC,EAA+CF,MAAA,EAA/C;AACE,cAAKb,CAAAA,cAAL,CAAoBH,SAAUiB,CAAAA,QAAV,CAAmBD,MAAnB,CAApB,EAA2Cf,IAA3C,EAAiDC,mBAAjD,CAAA;AADF;AAFA;AAP0D;AAX9C,GAAVJ;AA0BNA,SAAQqB,CAAAA,MAAR,GAAiB,IAAIrB,OAAJ,EAAjB;AAGAJ,SAAQ0B,CAAAA,MAAR,GAFatB,OAEb;AArC+G,CAA/G;;",
"sources":["node_modules/pixi_DOT_js/lib/culling/Culler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$culling$Culler\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Bounds = require('../scene/container/bounds/Bounds.js');\nvar getGlobalBounds = require('../scene/container/bounds/getGlobalBounds.js');\n\n\"use strict\";\nconst tempBounds = new Bounds.Bounds();\nconst _Culler = class _Culler {\n  /**\n   * Culls the children of a specific container based on the given view. This will also cull items that are not\n   * being explicitly managed by the culler.\n   * @param container - The container to cull.\n   * @param view - The view rectangle.\n   * @param skipUpdateTransform - Whether to skip updating the transform.\n   */\n  cull(container, view, skipUpdateTransform = true) {\n    this._cullRecursive(container, view, skipUpdateTransform);\n  }\n  _cullRecursive(container, view, skipUpdateTransform = true) {\n    if (container.cullable && container.measurable && container.includeInBuild) {\n      const bounds = container.cullArea ?? getGlobalBounds.getGlobalBounds(container, skipUpdateTransform, tempBounds);\n      container.culled = bounds.x >= view.x + view.width || bounds.y >= view.y + view.height || bounds.x + bounds.width <= view.x || bounds.y + bounds.height <= view.y;\n    } else {\n      container.culled = false;\n    }\n    if (!container.cullableChildren || container.culled || !container.renderable || !container.measurable || !container.includeInBuild)\n      return;\n    for (let i = 0; i < container.children.length; i++) {\n      this._cullRecursive(container.children[i], view, skipUpdateTransform);\n    }\n  }\n};\n/** A shared instance of the Culler class. */\n_Culler.shared = new _Culler();\nlet Culler = _Culler;\n\nexports.Culler = Culler;\n//# sourceMappingURL=Culler.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Bounds","getGlobalBounds","tempBounds","_Culler","cull","container","view","skipUpdateTransform","_cullRecursive","cullable","measurable","includeInBuild","bounds","cullArea","culled","x","width","y","height","cullableChildren","renderable","i","children","length","shared","Culler"]
}
