{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$roundPixelsBit.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,oFAAA,GAAyG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAiCjJA,SAAQC,CAAAA,cAAR,GA7BuBA,CACrBC,KAAM,kBADeD,EAErBE,OAAQ,CACNC,OAEG,4PAHG,CAFaH,CA6BvB;AACAD,SAAQK,CAAAA,gBAAR,GAhByBA,CACvBH,KAAM,kBADiBG,EAEvBF,OAAQ,CACNC,OAEG,yNAHG,CAFeC,CAgBzB;AAlCiJ,CAAjJ;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/high-shader/shader-bits/roundPixelsBit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$high_shader$shader_bits$roundPixelsBit\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nconst roundPixelsBit = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\nconst roundPixelsBitGl = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\n\nexports.roundPixelsBit = roundPixelsBit;\nexports.roundPixelsBitGl = roundPixelsBitGl;\n//# sourceMappingURL=roundPixelsBit.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","roundPixelsBit","name","vertex","header","roundPixelsBitGl"]
}
