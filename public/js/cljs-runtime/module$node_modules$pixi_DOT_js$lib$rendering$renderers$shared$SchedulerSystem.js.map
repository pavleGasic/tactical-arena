{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$SchedulerSystem.js",
"lineCount":44,
"mappings":"AAAAA,cAAA,CAAA,8EAAA,GAAmG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvIC,QAAAA,GAAaH,OAAA,CAAQ,2DAAR,CAAbG;AACJ,MAAIC,SAASJ,OAAA,CAAQ,mDAAR,CAAb;AAEA,cAAA;AACA,MAAIK,MAAM,CAAV;AACA,OAAMC,gBAAN;AACEC,eAAW,EAAG;AACZ,UAAKC,CAAAA,MAAL,GAAc,EAAd;AAEA,UAAKC,CAAAA,OAAL,GAAe,CAAf;AAHY;AAMdC,QAAI,EAAG;AACLN,YAAOA,CAAAA,MAAOO,CAAAA,MAAOC,CAAAA,GAArB,CAAyB,IAAKC,CAAAA,OAA9B,EAAuC,IAAvC,CAAA;AADK;AAUPC,UAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,SAAA,GAAY,CAAA,CAA7B,CAAmC;AACvC,YAAMC,KAAKb,GAAA,EAAX;AACA,UAAIc,SAAS,CAAb;AACIF,eAAJ,KAEEE,MAFF,GACE,IAAKV,CAAAA,OADP,IACkB,GADlB;AAIA,UAAKD,CAAAA,MAAOY,CAAAA,IAAZ,CAAiB,CACfL,IADe,EAEfC,QAFe,EAGfK,MAAOC,WAAYC,CAAAA,GAAZ,EAHQ,EAIfJ,MAJe,EAKfK,KAAMF,WAAYC,CAAAA,GAAZ,EALS,EAMfT,OAAQ,CAAA,CANO,EAOfI,EAPe,CAAjB,CAAA;AASA,aAAOA,EAAP;AAhBuC;AAsBzCO,UAAM,CAACP,EAAD,CAAK;AACT,WAAK,IAAIQ,IAAI,CAAb,EAAgBA,CAAhB,GAAoB,IAAKlB,CAAAA,MAAOmB,CAAAA,MAAhC,EAAwCD,CAAA,EAAxC;AACE,YAAI,IAAKlB,CAAAA,MAAL,CAAYkB,CAAZ,CAAeR,CAAAA,EAAnB,KAA0BA,EAA1B,CAA8B;AAC5B,cAAKV,CAAAA,MAAOoB,CAAAA,MAAZ,CAAmBF,CAAnB,EAAsB,CAAtB,CAAA;AACA;AAF4B;AADhC;AADS;AAYXb,WAAO,EAAG;AACR,YAAMU,MAAMD,WAAYC,CAAAA,GAAZ,EAAZ;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,CAAhB,GAAoB,IAAKlB,CAAAA,MAAOmB,CAAAA,MAAhC,EAAwCD,CAAA,EAAxC,CAA6C;AAC3C,cAAMG,OAAO,IAAKrB,CAAAA,MAAL,CAAYkB,CAAZ,CAAb;AACIH,WAAJ,GAAUM,IAAKV,CAAAA,MAAf,GAAwBU,IAAKL,CAAAA,IAA7B,IAAqCK,IAAKb,CAAAA,QAA1C,KAEEa,IAAKd,CAAAA,IAAL,CADgBQ,GAChB,GADsBM,IAAKR,CAAAA,KAC3B,CACA,EAAAQ,IAAKL,CAAAA,IAAL,GAAYD,GAHd;AAF2C;AAFrC;AAgBVO,WAAO,EAAG;AACR1B,YAAOA,CAAAA,MAAOO,CAAAA,MAAOoB,CAAAA,MAArB,CAA4B,IAAKlB,CAAAA,OAAjC,EAA0C,IAA1C,CAAA;AACA,UAAKL,CAAAA,MAAOmB,CAAAA,MAAZ,GAAqB,CAArB;AAFQ;AAnEZ;AAyEArB,iBAAgB0B,CAAAA,SAAhB,GAA4B,CAC1BC,KAAM,CACJ9B,MAAW+B,CAAAA,aAAcC,CAAAA,WADrB,EAEJhC,MAAW+B,CAAAA,aAAcE,CAAAA,YAFrB,EAGJjC,MAAW+B,CAAAA,aAAcG,CAAAA,YAHrB,CADoB,EAM1BC,KAAM,WANoB,EAO1BC,SAAU,CAPgB,CAA5B;AAUArC,SAAQI,CAAAA,eAAR,GAA0BA,eAA1B;AA3F2I,CAA3I;;",
"sources":["node_modules/pixi_DOT_js/lib/rendering/renderers/shared/SchedulerSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$SchedulerSystem\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Extensions = require('../../../extensions/Extensions.js');\nvar Ticker = require('../../../ticker/Ticker.js');\n\n\"use strict\";\nlet uid = 1;\nclass SchedulerSystem {\n  constructor() {\n    this._tasks = [];\n    /** a small off set to apply to the repeat schedules. This is just to make sure they run at slightly different times */\n    this._offset = 0;\n  }\n  /** Initializes the scheduler system and starts the ticker. */\n  init() {\n    Ticker.Ticker.system.add(this._update, this);\n  }\n  /**\n   * Schedules a repeating task.\n   * @param func - The function to execute.\n   * @param duration - The interval duration in milliseconds.\n   * @param useOffset - this will spread out tasks so that they do not all run at the same time\n   * @returns The unique identifier for the scheduled task.\n   */\n  repeat(func, duration, useOffset = true) {\n    const id = uid++;\n    let offset = 0;\n    if (useOffset) {\n      this._offset += 1e3;\n      offset = this._offset;\n    }\n    this._tasks.push({\n      func,\n      duration,\n      start: performance.now(),\n      offset,\n      last: performance.now(),\n      repeat: true,\n      id\n    });\n    return id;\n  }\n  /**\n   * Cancels a scheduled task.\n   * @param id - The unique identifier of the task to cancel.\n   */\n  cancel(id) {\n    for (let i = 0; i < this._tasks.length; i++) {\n      if (this._tasks[i].id === id) {\n        this._tasks.splice(i, 1);\n        return;\n      }\n    }\n  }\n  /**\n   * Updates and executes the scheduled tasks.\n   * @private\n   */\n  _update() {\n    const now = performance.now();\n    for (let i = 0; i < this._tasks.length; i++) {\n      const task = this._tasks[i];\n      if (now - task.offset - task.last >= task.duration) {\n        const elapsed = now - task.start;\n        task.func(elapsed);\n        task.last = now;\n      }\n    }\n  }\n  /**\n   * Destroys the scheduler system and removes all tasks.\n   * @internal\n   * @ignore\n   */\n  destroy() {\n    Ticker.Ticker.system.remove(this._update, this);\n    this._tasks.length = 0;\n  }\n}\n/** @ignore */\nSchedulerSystem.extension = {\n  type: [\n    Extensions.ExtensionType.WebGLSystem,\n    Extensions.ExtensionType.WebGPUSystem,\n    Extensions.ExtensionType.CanvasSystem\n  ],\n  name: \"scheduler\",\n  priority: 0\n};\n\nexports.SchedulerSystem = SchedulerSystem;\n//# sourceMappingURL=SchedulerSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Extensions","Ticker","uid","SchedulerSystem","constructor","_tasks","_offset","init","system","add","_update","repeat","func","duration","useOffset","id","offset","push","start","performance","now","last","cancel","i","length","splice","task","destroy","remove","extension","type","ExtensionType","WebGLSystem","WebGPUSystem","CanvasSystem","name","priority"]
}
