{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$loader$parsers$textures$utils$createTexture.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,GAAqG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAEzIC,OAAOH,OAAA,CAAQ,0CAAR,CAFkI,EAE3GI,QAAQJ,OAAA,CAAQ,kDAAR,CAFmG;AAc7IE,SAAQG,CAAAA,aAAR,GAXAA,QAAsB,CAACC,IAAD,EAAOC,MAAP,EAAeC,GAAf,CAAoB;AACxCF,QAAKG,CAAAA,QAASC,CAAAA,QAAd,GAAyB,CAAA,CAAzB;AADwC,UAElCC,UAAU,IAAIR,IAAKS,CAAAA,OAAT,CAAiBN,IAAjB,CAFwB,EAEAO,SAAS,EAAAA,IAAM;AACrD,aAAON,MAAOO,CAAAA,YAAP,CAAoBN,GAApB,CAAP;AAAiCJ,WAAMA,CAAAA,KAAMW,CAAAA,GAAZ,CAAgBP,GAAhB,CAAA,IAAwBJ,KAAMA,CAAAA,KAAMY,CAAAA,MAAZ,CAAmBR,GAAnB,CAAxB;AADoB,KAFf;AAKxC,WAAOG,OAAQM,CAAAA,WAAYC,CAAAA,IAApB,CAAyB,WAAzB,EAAsC,EAAA,IAAM;AACjDV,SAAA,IAAOD,MAAOO,CAAAA,YAAd,KAA+BK,OAAQC,CAAAA,IAAR,CAAa,wIAAb,CAAA,EAAwJP,MAAA,EAAvL;AADiD,KAA5C,CAAA,EAEHF,OAAQO,CAAAA,IAAR,CAAa,WAAb,EAA0B,EAAA,IAAM;AAClCZ,UAAKe,CAAAA,SAAL,KAAmBF,OAAQC,CAAAA,IAAR,CAAa,gIAAb,CAAA,EAAgJP,MAAA,EAAnK;AADkC,KAAhC,CAFG,EAIHF,OAJJ;AALwC,GAW1C;AAd6I,CAA7I;;",
"sources":["node_modules/@pixi/assets/lib/loader/parsers/textures/utils/createTexture.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$loader$parsers$textures$utils$createTexture\"] = function(global,require,module,exports) {\n\"use strict\";\nvar core = require(\"@pixi/core\"), Cache = require(\"../../../../cache/Cache.js\");\nfunction createTexture(base, loader, url) {\n  base.resource.internal = !0;\n  const texture = new core.Texture(base), unload = () => {\n    delete loader.promiseCache[url], Cache.Cache.has(url) && Cache.Cache.remove(url);\n  };\n  return texture.baseTexture.once(\"destroyed\", () => {\n    url in loader.promiseCache && (console.warn(\"[Assets] A BaseTexture managed by Assets was destroyed instead of unloaded! Use Assets.unload() instead of destroying the BaseTexture.\"), unload());\n  }), texture.once(\"destroyed\", () => {\n    base.destroyed || (console.warn(\"[Assets] A Texture managed by Assets was destroyed instead of unloaded! Use Assets.unload() instead of destroying the Texture.\"), unload());\n  }), texture;\n}\nexports.createTexture = createTexture;\n//# sourceMappingURL=createTexture.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","Cache","createTexture","base","loader","url","resource","internal","texture","Texture","unload","promiseCache","has","remove","baseTexture","once","console","warn","destroyed"]
}
