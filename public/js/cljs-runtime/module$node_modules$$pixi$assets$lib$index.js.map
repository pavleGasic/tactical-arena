{
"version":3,
"file":"module$node_modules$$pixi$assets$lib$index.js",
"lineCount":44,
"mappings":"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",
"sources":["node_modules/@pixi/assets/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$assets$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\nrequire(\"./AssetExtension.js\");\nvar Assets = require(\"./Assets.js\");\nrequire(\"./cache/index.js\");\nrequire(\"./detections/index.js\");\nrequire(\"./loader/index.js\");\nrequire(\"./resolver/index.js\");\nrequire(\"./types.js\");\nrequire(\"./utils/index.js\");\nvar Cache = require(\"./cache/Cache.js\"), cacheTextureArray = require(\"./cache/parsers/cacheTextureArray.js\"), detectAvif = require(\"./detections/parsers/detectAvif.js\"), detectWebp = require(\"./detections/parsers/detectWebp.js\"), detectDefaults = require(\"./detections/parsers/detectDefaults.js\"), detectWebm = require(\"./detections/parsers/detectWebm.js\"), detectMp4 = require(\"./detections/parsers/detectMp4.js\"), detectOgv = require(\"./detections/parsers/detectOgv.js\"), LoaderParser = require(\"./loader/parsers/LoaderParser.js\"), loadJson = require(\"./loader/parsers/loadJson.js\"), loadTxt = require(\"./loader/parsers/loadTxt.js\"), loadWebFont = require(\"./loader/parsers/loadWebFont.js\"), loadSVG = require(\"./loader/parsers/textures/loadSVG.js\"), loadTextures = require(\"./loader/parsers/textures/loadTextures.js\"), loadVideo = require(\"./loader/parsers/textures/loadVideo.js\"), createTexture = require(\"./loader/parsers/textures/utils/createTexture.js\"), resolveTextureUrl = require(\"./resolver/parsers/resolveTextureUrl.js\"), checkDataUrl = require(\"./utils/checkDataUrl.js\"), checkExtension = require(\"./utils/checkExtension.js\"), convertToList = require(\"./utils/convertToList.js\"), copySearchParams = require(\"./utils/copySearchParams.js\"), createStringVariations = require(\"./utils/createStringVariations.js\"), isSingleItem = require(\"./utils/isSingleItem.js\");\nexports.Assets = Assets.Assets;\nexports.AssetsClass = Assets.AssetsClass;\nexports.Cache = Cache.Cache;\nexports.cacheTextureArray = cacheTextureArray.cacheTextureArray;\nexports.detectAvif = detectAvif.detectAvif;\nexports.detectWebp = detectWebp.detectWebp;\nexports.detectDefaults = detectDefaults.detectDefaults;\nexports.detectWebm = detectWebm.detectWebm;\nexports.detectMp4 = detectMp4.detectMp4;\nexports.detectOgv = detectOgv.detectOgv;\nexports.LoaderParserPriority = LoaderParser.LoaderParserPriority;\nexports.loadJson = loadJson.loadJson;\nexports.loadTxt = loadTxt.loadTxt;\nexports.getFontFamilyName = loadWebFont.getFontFamilyName;\nexports.loadWebFont = loadWebFont.loadWebFont;\nexports.loadSVG = loadSVG.loadSVG;\nexports.loadImageBitmap = loadTextures.loadImageBitmap;\nexports.loadTextures = loadTextures.loadTextures;\nexports.loadVideo = loadVideo.loadVideo;\nexports.createTexture = createTexture.createTexture;\nexports.resolveTextureUrl = resolveTextureUrl.resolveTextureUrl;\nexports.checkDataUrl = checkDataUrl.checkDataUrl;\nexports.checkExtension = checkExtension.checkExtension;\nexports.convertToList = convertToList.convertToList;\nexports.copySearchParams = copySearchParams.copySearchParams;\nexports.createStringVariations = createStringVariations.createStringVariations;\nexports.isSingleItem = isSingleItem.isSingleItem;\n//# sourceMappingURL=index.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Assets","Cache","cacheTextureArray","detectAvif","detectWebp","detectDefaults","detectWebm","detectMp4","detectOgv","LoaderParser","loadJson","loadTxt","loadWebFont","loadSVG","loadTextures","loadVideo","createTexture","resolveTextureUrl","checkDataUrl","checkExtension","convertToList","copySearchParams","createStringVariations","isSingleItem","AssetsClass","LoaderParserPriority","getFontFamilyName","loadImageBitmap"]
}
