shadow$provide.module$node_modules$$pixi$react$lib$core$reconciler = function(global, require, module, exports) {
  global = require("module$node_modules$$pixi$react$lib$package_json");
  module = require("module$node_modules$$pixi$react$lib$helpers$afterActiveInstanceBlur");
  var appendChild = require("module$node_modules$$pixi$react$lib$helpers$appendChild"), beforeActiveInstanceBlur = require("module$node_modules$$pixi$react$lib$helpers$beforeActiveInstanceBlur"), clearContainer = require("module$node_modules$$pixi$react$lib$helpers$clearContainer"), commitUpdate = require("module$node_modules$$pixi$react$lib$helpers$commitUpdate"), createInstance = require("module$node_modules$$pixi$react$lib$helpers$createInstance"), createReconciler = require("module$node_modules$$pixi$react$lib$helpers$createReconciler"), 
  createTextInstance = require("module$node_modules$$pixi$react$lib$helpers$createTextInstance"), detachDeletedInstance = require("module$node_modules$$pixi$react$lib$helpers$detachDeletedInstance"), finalizeInitialChildren = require("module$node_modules$$pixi$react$lib$helpers$finalizeInitialChildren"), getChildHostContext = require("module$node_modules$$pixi$react$lib$helpers$getChildHostContext"), getCurrentUpdatePriority = require("module$node_modules$$pixi$react$lib$helpers$getCurrentUpdatePriority"), 
  getInstanceFromNode = require("module$node_modules$$pixi$react$lib$helpers$getInstanceFromNode"), getInstanceFromScope = require("module$node_modules$$pixi$react$lib$helpers$getInstanceFromScope"), getPublicInstance = require("module$node_modules$$pixi$react$lib$helpers$getPublicInstance"), getRootHostContext = require("module$node_modules$$pixi$react$lib$helpers$getRootHostContext"), hideInstance = require("module$node_modules$$pixi$react$lib$helpers$hideInstance"), hideTextInstance = require("module$node_modules$$pixi$react$lib$helpers$hideTextInstance"), 
  insertBefore = require("module$node_modules$$pixi$react$lib$helpers$insertBefore"), maySuspendCommit = require("module$node_modules$$pixi$react$lib$helpers$maySuspendCommit"), preloadInstance = require("module$node_modules$$pixi$react$lib$helpers$preloadInstance"), prepareForCommit = require("module$node_modules$$pixi$react$lib$helpers$prepareForCommit"), preparePortalMount = require("module$node_modules$$pixi$react$lib$helpers$preparePortalMount"), prepareScopeUpdate = require("module$node_modules$$pixi$react$lib$helpers$prepareScopeUpdate"), 
  removeChild = require("module$node_modules$$pixi$react$lib$helpers$removeChild"), requestPostPaintCallback = require("module$node_modules$$pixi$react$lib$helpers$requestPostPaintCallback"), resetAfterCommit = require("module$node_modules$$pixi$react$lib$helpers$resetAfterCommit"), resetFormInstance = require("module$node_modules$$pixi$react$lib$helpers$resetFormInstance"), resolveEventTimeStamp = require("module$node_modules$$pixi$react$lib$helpers$resolveEventTimeStamp"), resolveEventType = require("module$node_modules$$pixi$react$lib$helpers$resolveEventType"), 
  resolveUpdatePriority = require("module$node_modules$$pixi$react$lib$helpers$resolveUpdatePriority"), setCurrentUpdatePriority = require("module$node_modules$$pixi$react$lib$helpers$setCurrentUpdatePriority"), shouldAttemptEagerTransition = require("module$node_modules$$pixi$react$lib$helpers$shouldAttemptEagerTransition"), shouldSetTextContent = require("module$node_modules$$pixi$react$lib$helpers$shouldSetTextContent"), startSuspendingCommit = require("module$node_modules$$pixi$react$lib$helpers$startSuspendingCommit"), 
  suspendInstance = require("module$node_modules$$pixi$react$lib$helpers$suspendInstance"), trackSchedulerEvent = require("module$node_modules$$pixi$react$lib$helpers$trackSchedulerEvent"), unhideInstance = require("module$node_modules$$pixi$react$lib$helpers$unhideInstance"), unhideTextInstance = require("module$node_modules$$pixi$react$lib$helpers$unhideTextInstance");
  require = require("module$node_modules$$pixi$react$lib$helpers$waitForCommitToBeReady");
  "use strict";
  require = createReconciler.createReconciler({isPrimaryRenderer:!1, noTimeout:-1, NotPendingTransition:null, supportsHydration:!1, supportsMutation:!0, supportsPersistence:!1, warnsIfNotActing:!1, afterActiveInstanceBlur:module.afterActiveInstanceBlur, appendChild:appendChild.appendChild, appendChildToContainer:appendChild.appendChild, appendInitialChild:appendChild.appendChild, beforeActiveInstanceBlur:beforeActiveInstanceBlur.beforeActiveInstanceBlur, cancelTimeout:clearTimeout, clearContainer:clearContainer.clearContainer, 
  commitUpdate:commitUpdate.commitUpdate, createInstance:createInstance.createInstance, createTextInstance:createTextInstance.createTextInstance, hideTextInstance:hideTextInstance.hideTextInstance, unhideTextInstance:unhideTextInstance.unhideTextInstance, detachDeletedInstance:detachDeletedInstance.detachDeletedInstance, finalizeInitialChildren:finalizeInitialChildren.finalizeInitialChildren, getChildHostContext:getChildHostContext.getChildHostContext, getCurrentUpdatePriority:getCurrentUpdatePriority.getCurrentUpdatePriority, 
  getInstanceFromNode:getInstanceFromNode.getInstanceFromNode, getInstanceFromScope:getInstanceFromScope.getInstanceFromScope, getPublicInstance:getPublicInstance.getPublicInstance, getRootHostContext:getRootHostContext.getRootHostContext, hideInstance:hideInstance.hideInstance, insertBefore:insertBefore.insertBefore, insertInContainerBefore:insertBefore.insertBefore, maySuspendCommit:maySuspendCommit.maySuspendCommit, preloadInstance:preloadInstance.preloadInstance, prepareForCommit:prepareForCommit.prepareForCommit, 
  preparePortalMount:preparePortalMount.preparePortalMount, prepareScopeUpdate:prepareScopeUpdate.prepareScopeUpdate, removeChild:removeChild.removeChild, removeChildFromContainer:removeChild.removeChild, requestPostPaintCallback:requestPostPaintCallback.requestPostPaintCallback, resetAfterCommit:resetAfterCommit.resetAfterCommit, resetFormInstance:resetFormInstance.resetFormInstance, resolveEventTimeStamp:resolveEventTimeStamp.resolveEventTimeStamp, resolveEventType:resolveEventType.resolveEventType, 
  resolveUpdatePriority:resolveUpdatePriority.resolveUpdatePriority, scheduleTimeout:setTimeout, shouldAttemptEagerTransition:shouldAttemptEagerTransition.shouldAttemptEagerTransition, setCurrentUpdatePriority:setCurrentUpdatePriority.setCurrentUpdatePriority, shouldSetTextContent:shouldSetTextContent.shouldSetTextContent, startSuspendingCommit:startSuspendingCommit.startSuspendingCommit, suspendInstance:suspendInstance.suspendInstance, trackSchedulerEvent:trackSchedulerEvent.trackSchedulerEvent, 
  unhideInstance:unhideInstance.unhideInstance, waitForCommitToBeReady:require.waitForCommitToBeReady});
  require.injectIntoDevTools({bundleType:1, rendererPackageName:"@pixi/react", version:global.default.version});
  exports.reconciler = require;
};

//# sourceMappingURL=module$node_modules$$pixi$react$lib$core$reconciler.js.map
