{
"version":3,
"file":"module$node_modules$pixi_DOT_js$lib$assets$BackgroundLoader.js",
"lineCount":38,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,GAAgF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAIxH,OAAMC,iBAAN;AAKEC,eAAW,CAACC,MAAD,EAASC,OAAA,GAAU,CAAA,CAAnB,CAA0B;AACnC,UAAKC,CAAAA,OAAL,GAAeF,MAAf;AACA,UAAKG,CAAAA,UAAL,GAAkB,EAAlB;AACA,UAAKC,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACA,UAAKC,CAAAA,cAAL,GAAsB,CAAtB;AACA,UAAKJ,CAAAA,OAAL,GAAeA,OAAf;AALmC;AAWrCK,OAAG,CAACC,SAAD,CAAY;AACbA,eAAUC,CAAAA,OAAV,CAAmBC,CAAD,IAAO;AACvB,YAAKN,CAAAA,UAAWO,CAAAA,IAAhB,CAAqBD,CAArB,CAAA;AADuB,OAAzB,CAAA;AAGI,UAAKR,CAAAA,OAAT,IACEU,OAAQC,CAAAA,GAAR,CAAY,6BAAZ,EAA2C,IAAKT,CAAAA,UAAhD,CADF;AAGI,UAAKU,CAAAA,SAAT,IAAsB,CAAC,IAAKT,CAAAA,UAA5B,IACO,IAAKU,CAAAA,KAAL,EADP;AAPa;AAgBTA,eAAK,EAAG;AACZ,UAAI,IAAKX,CAAAA,UAAWY,CAAAA,MAApB,IAA8B,IAAKF,CAAAA,SAAnC,CAA8C;AAC5C,YAAKT,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACA,cAAMY,SAAS,EAAf,EACMC,eAAeC,IAAKC,CAAAA,GAAL,CAAS,IAAKhB,CAAAA,UAAWY,CAAAA,MAAzB,EAAiC,IAAKV,CAAAA,cAAtC,CADrB;AAEA,aAAK,IAAIe,IAAI,CAAb,EAAgBA,CAAhB,GAAoBH,YAApB,EAAkCG,CAAA,EAAlC;AACEJ,gBAAON,CAAAA,IAAP,CAAY,IAAKP,CAAAA,UAAWkB,CAAAA,GAAhB,EAAZ,CAAA;AADF;AAGA,cAAM,IAAKnB,CAAAA,OAAQoB,CAAAA,IAAb,CAAkBN,MAAlB,CAAN;AACA,YAAKZ,CAAAA,UAAL,GAAkB,CAAA,CAAlB;AACK,YAAKU,CAAAA,KAAL,EAAL;AAT4C;AADlC;AAiBV,cAAS,EAAA;AACX,aAAO,IAAKD,CAAAA,SAAZ;AADW;AAGT,cAAM,CAACU,KAAD,CAAQ;AACZ,UAAKV,CAAAA,SAAT,KAAuBU,KAAvB,KAEA,IAAKV,CAAAA,SAFL,GAEiBU,KAFjB,KAGa,CAAC,IAAKnB,CAAAA,UAHnB,IAIO,IAAKU,CAAAA,KAAL,EAJP;AADgB;AApDpB;AA8DAjB,SAAQC,CAAAA,gBAAR,GAA2BA,gBAA3B;AAlEwH,CAAxH;;",
"sources":["node_modules/pixi_DOT_js/lib/assets/BackgroundLoader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pixi_DOT_js$lib$assets$BackgroundLoader\"] = function(global,require,module,exports) {\n'use strict';\n\n\"use strict\";\nclass BackgroundLoader {\n  /**\n   * @param loader\n   * @param verbose - should the loader log to the console\n   */\n  constructor(loader, verbose = false) {\n    this._loader = loader;\n    this._assetList = [];\n    this._isLoading = false;\n    this._maxConcurrent = 1;\n    this.verbose = verbose;\n  }\n  /**\n   * Adds an array of assets to load.\n   * @param assetUrls - assets to load\n   */\n  add(assetUrls) {\n    assetUrls.forEach((a) => {\n      this._assetList.push(a);\n    });\n    if (this.verbose) {\n      console.log(\"[BackgroundLoader] assets: \", this._assetList);\n    }\n    if (this._isActive && !this._isLoading) {\n      void this._next();\n    }\n  }\n  /**\n   * Loads the next set of assets. Will try to load as many assets as it can at the same time.\n   *\n   * The max assets it will try to load at one time will be 4.\n   */\n  async _next() {\n    if (this._assetList.length && this._isActive) {\n      this._isLoading = true;\n      const toLoad = [];\n      const toLoadAmount = Math.min(this._assetList.length, this._maxConcurrent);\n      for (let i = 0; i < toLoadAmount; i++) {\n        toLoad.push(this._assetList.pop());\n      }\n      await this._loader.load(toLoad);\n      this._isLoading = false;\n      void this._next();\n    }\n  }\n  /**\n   * Activate/Deactivate the loading. If set to true then it will immediately continue to load the next asset.\n   * @returns whether the class is active\n   */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    if (this._isActive === value)\n      return;\n    this._isActive = value;\n    if (value && !this._isLoading) {\n      void this._next();\n    }\n  }\n}\n\nexports.BackgroundLoader = BackgroundLoader;\n//# sourceMappingURL=BackgroundLoader.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","BackgroundLoader","constructor","loader","verbose","_loader","_assetList","_isLoading","_maxConcurrent","add","assetUrls","forEach","a","push","console","log","_isActive","_next","length","toLoad","toLoadAmount","Math","min","i","pop","load","value"]
}
