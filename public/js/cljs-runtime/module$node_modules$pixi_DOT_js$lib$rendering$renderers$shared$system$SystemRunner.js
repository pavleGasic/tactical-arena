shadow$provide.module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SystemRunner = function(global, require, module, exports) {
  class SystemRunner {
    constructor(name) {
      this.items = [];
      this._name = name;
    }
    emit(a0, a1, a2, a3, a4, a5, a6, a7) {
      const {name, items} = this;
      for (let i = 0, len = items.length; i < len; i++) {
        items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);
      }
      return this;
    }
    add(item) {
      item[this._name] && (this.remove(item), this.items.push(item));
      return this;
    }
    remove(item) {
      item = this.items.indexOf(item);
      -1 !== item && this.items.splice(item, 1);
      return this;
    }
    contains(item) {
      return -1 !== this.items.indexOf(item);
    }
    removeAll() {
      this.items.length = 0;
      return this;
    }
    destroy() {
      this.removeAll();
      this._name = this.items = null;
    }
    get empty() {
      return 0 === this.items.length;
    }
    get name() {
      return this._name;
    }
  }
  exports.SystemRunner = SystemRunner;
};

//# sourceMappingURL=module$node_modules$pixi_DOT_js$lib$rendering$renderers$shared$system$SystemRunner.js.map
