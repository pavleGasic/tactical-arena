{
"version":3,
"file":"module$node_modules$$pixi$core$lib$transformFeedback$TransformFeedbackSystem.js",
"lineCount":63,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/transformFeedback/TransformFeedbackSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$transformFeedback$TransformFeedbackSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar extensions = require(\"@pixi/extensions\");\nclass TransformFeedbackSystem {\n  /**\n   * @param renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this.gl = this.renderer.gl, this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n  }\n  /**\n   * Bind TransformFeedback and buffers\n   * @param transformFeedback - TransformFeedback to bind\n   */\n  bind(transformFeedback) {\n    const { gl, CONTEXT_UID } = this, glTransformFeedback = transformFeedback._glTransformFeedbacks[CONTEXT_UID] || this.createGLTransformFeedback(transformFeedback);\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, glTransformFeedback);\n  }\n  /** Unbind TransformFeedback */\n  unbind() {\n    const { gl } = this;\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n  }\n  /**\n   * Begin TransformFeedback\n   * @param drawMode - DrawMode for TransformFeedback\n   * @param shader - A Shader used by TransformFeedback. Current bound shader will be used if not provided.\n   */\n  beginTransformFeedback(drawMode, shader) {\n    const { gl, renderer } = this;\n    shader && renderer.shader.bind(shader), gl.beginTransformFeedback(drawMode);\n  }\n  /** End TransformFeedback */\n  endTransformFeedback() {\n    const { gl } = this;\n    gl.endTransformFeedback();\n  }\n  /**\n   * Create TransformFeedback and bind buffers\n   * @param tf - TransformFeedback\n   * @returns WebGLTransformFeedback\n   */\n  createGLTransformFeedback(tf) {\n    const { gl, renderer, CONTEXT_UID } = this, glTransformFeedback = gl.createTransformFeedback();\n    tf._glTransformFeedbacks[CONTEXT_UID] = glTransformFeedback, gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, glTransformFeedback);\n    for (let i = 0; i < tf.buffers.length; i++) {\n      const buffer = tf.buffers[i];\n      buffer && (renderer.buffer.update(buffer), buffer._glBuffers[CONTEXT_UID].refCount++, gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, i, buffer._glBuffers[CONTEXT_UID].buffer || null));\n    }\n    return gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null), tf.disposeRunner.add(this), glTransformFeedback;\n  }\n  /**\n   * Disposes TransfromFeedback\n   * @param {PIXI.TransformFeedback} tf - TransformFeedback\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress delete TransformFeedback\n   */\n  disposeTransformFeedback(tf, contextLost) {\n    const glTF = tf._glTransformFeedbacks[this.CONTEXT_UID], gl = this.gl;\n    tf.disposeRunner.remove(this);\n    const bufferSystem = this.renderer.buffer;\n    if (bufferSystem)\n      for (let i = 0; i < tf.buffers.length; i++) {\n        const buffer = tf.buffers[i];\n        if (!buffer)\n          continue;\n        const buf = buffer._glBuffers[this.CONTEXT_UID];\n        buf && (buf.refCount--, buf.refCount === 0 && !contextLost && bufferSystem.dispose(buffer, contextLost));\n      }\n    glTF && (contextLost || gl.deleteTransformFeedback(glTF), delete tf._glTransformFeedbacks[this.CONTEXT_UID]);\n  }\n  destroy() {\n    this.renderer = null;\n  }\n}\nTransformFeedbackSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"transformFeedback\"\n};\nextensions.extensions.add(TransformFeedbackSystem);\nexports.TransformFeedbackSystem = TransformFeedbackSystem;\n//# sourceMappingURL=TransformFeedbackSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","extensions","TransformFeedbackSystem","constructor","renderer","contextChange","gl","CONTEXT_UID","bind","transformFeedback","glTransformFeedback","_glTransformFeedbacks","createGLTransformFeedback","bindTransformFeedback","TRANSFORM_FEEDBACK","unbind","beginTransformFeedback","drawMode","shader","endTransformFeedback","tf","createTransformFeedback","i","buffers","length","buffer","update","_glBuffers","refCount","bindBufferBase","TRANSFORM_FEEDBACK_BUFFER","disposeRunner","add","disposeTransformFeedback","contextLost","glTF","remove","bufferSystem","buf","dispose","deleteTransformFeedback","destroy","extension","type","ExtensionType","RendererSystem","name"]
}
