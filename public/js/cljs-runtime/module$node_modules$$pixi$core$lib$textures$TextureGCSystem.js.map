{
"version":3,
"file":"module$node_modules$$pixi$core$lib$textures$TextureGCSystem.js",
"lineCount":51,
"mappings":"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",
"sources":["node_modules/@pixi/core/lib/textures/TextureGCSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pixi$core$lib$textures$TextureGCSystem\"] = function(global,require,module,exports) {\n\"use strict\";\nvar constants = require(\"@pixi/constants\"), extensions = require(\"@pixi/extensions\");\nconst _TextureGCSystem = class _TextureGCSystem2 {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this.renderer = renderer, this.count = 0, this.checkCount = 0, this.maxIdle = _TextureGCSystem2.defaultMaxIdle, this.checkCountMax = _TextureGCSystem2.defaultCheckCountMax, this.mode = _TextureGCSystem2.defaultMode;\n  }\n  /**\n   * Checks to see when the last time a texture was used.\n   * If the texture has not been used for a specified amount of time, it will be removed from the GPU.\n   */\n  postrender() {\n    this.renderer.objectRenderer.renderingToScreen && (this.count++, this.mode !== constants.GC_MODES.MANUAL && (this.checkCount++, this.checkCount > this.checkCountMax && (this.checkCount = 0, this.run())));\n  }\n  /**\n   * Checks to see when the last time a texture was used.\n   * If the texture has not been used for a specified amount of time, it will be removed from the GPU.\n   */\n  run() {\n    const tm = this.renderer.texture, managedTextures = tm.managedTextures;\n    let wasRemoved = !1;\n    for (let i = 0; i < managedTextures.length; i++) {\n      const texture = managedTextures[i];\n      texture.resource && this.count - texture.touched > this.maxIdle && (tm.destroyTexture(texture, !0), managedTextures[i] = null, wasRemoved = !0);\n    }\n    if (wasRemoved) {\n      let j = 0;\n      for (let i = 0; i < managedTextures.length; i++)\n        managedTextures[i] !== null && (managedTextures[j++] = managedTextures[i]);\n      managedTextures.length = j;\n    }\n  }\n  /**\n   * Removes all the textures within the specified displayObject and its children from the GPU.\n   * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n   */\n  unload(displayObject) {\n    const tm = this.renderer.texture, texture = displayObject._texture;\n    texture && !texture.framebuffer && tm.destroyTexture(texture);\n    for (let i = displayObject.children.length - 1; i >= 0; i--)\n      this.unload(displayObject.children[i]);\n  }\n  destroy() {\n    this.renderer = null;\n  }\n};\n_TextureGCSystem.defaultMode = constants.GC_MODES.AUTO, /**\n* Default maximum idle frames before a texture is destroyed by garbage collection.\n* @static\n* @default 3600\n* @see PIXI.TextureGCSystem#maxIdle\n*/\n_TextureGCSystem.defaultMaxIdle = 60 * 60, /**\n* Default frames between two garbage collections.\n* @static\n* @default 600\n* @see PIXI.TextureGCSystem#checkCountMax\n*/\n_TextureGCSystem.defaultCheckCountMax = 60 * 10, /** @ignore */\n_TextureGCSystem.extension = {\n  type: extensions.ExtensionType.RendererSystem,\n  name: \"textureGC\"\n};\nlet TextureGCSystem = _TextureGCSystem;\nextensions.extensions.add(TextureGCSystem);\nexports.TextureGCSystem = TextureGCSystem;\n//# sourceMappingURL=TextureGCSystem.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","constants","extensions","constructor","renderer","checkCount","count","maxIdle","_TextureGCSystem2","defaultMaxIdle","checkCountMax","defaultCheckCountMax","mode","defaultMode","postrender","objectRenderer","renderingToScreen","GC_MODES","MANUAL","run","tm","texture","managedTextures","wasRemoved","i","length","resource","touched","destroyTexture","j","unload","displayObject","_texture","framebuffer","children","destroy","_TextureGCSystem","AUTO","extension","type","ExtensionType","RendererSystem","name","add","TextureGCSystem"]
}
